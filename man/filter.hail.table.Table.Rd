% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table_filter.R
\name{filter.hail.table.Table}
\alias{filter.hail.table.Table}
\title{acquire column names of a Hail Table}
\usage{
\method{filter}{hail.table.Table}(
  x,
  filter,
  hl = hail_init(),
  placeholder = "tmpf",
  drop_placeholder = FALSE,
  ...
)
}
\arguments{
\item{x}{instance of hail.table.Table}

\item{filter}{an entity that is already a component of the table `x`}

\item{hl}{instance of Hail module, should have idempotent attribute set
that is an instance of `hail.expr.expressions.typed_expressions.BooleanExpression`
that evaluates to bool, or a logical vector that has length equal to `x$count()`}

\item{placeholder}{character(1) defaults to "tmpf"}

\item{drop_placeholder}{logical(1), defaults to FALSE; if TRUE will try to
drop field used as placeholder}
}
\value{
character()
}
\description{
acquire column names of a Hail Table
}
\note{
writes one line of table to disk to retrieve field names

Will use field name given by `placeholder` to join filter if filter is a logical R vector
FIXME: uses disk because I don't know how to create a BooleanExpression except by importing.
}
\examples{
hl = hail_init()
annopath <- path_1kg_annotations()
tab <- hl$import_table(annopath, impute=TRUE)$key_by("Sample")
pick = rep(FALSE, 3500)
pick[1:10] = TRUE
ft = filter(tab, pick)
ft$count()
ft$head(2L)$collect()
}
