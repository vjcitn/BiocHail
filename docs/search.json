[{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"document explores using Hail 0.2 R via basilisk. computations follow GWAS tutorial hail documentation. won’t computations , add material dealing R-python interfacing. ’ll note actual computations large data done Spark, don’t interact directly Spark document. computations done via reticulate calls python; access hail environment basilisk. also take advantage R markdown’s capacity execute python code directly. R chunk computes x, python chunk can refer r.x. python chunk computes r.x, R chunk can refer value x.","code":""},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"installing-biochail","dir":"Articles","previous_headings":"","what":"Installing BiocHail","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"BiocHail installed follows: 1.0.0, JDK Java version <= 11.0 necessary use version Hail installed package. package usable MacOS suitable java support. Java version >= 8.x used, warnings Apache Spark may observed. best knowledge conditions warnings pertain affect program performance.","code":"if (!require(\"BiocManager\"))     install.packages(\"BiocManager\") BiocManager::install(\"BiocHail\")"},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"acquire-a-slice-of-the-1000-genomes-genotypes-and-annotations","dir":"Articles","previous_headings":"","what":"Acquire a slice of the 1000 genomes genotypes and annotations","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"section import 1000 genomes VCF slice distributed hail project. hail_init uses basilisk, ensures specific version hail dependencies available isolated virtual environment. bare_hail easier use achieve level isolation consistency available hail_init.","code":"library(BiocHail) library(ggplot2)"},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"initialization-data-acquisition-rendering","dir":"Articles","previous_headings":"Acquire a slice of the 1000 genomes genotypes and annotations","what":"Initialization, data acquisition, rendering","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"curiosity R-hail interaction. Note following chunk computes mt, MatrixTable representation 1000 genomes data, attempt print markdown fails. can use python syntax python R markdown chunk see want. use prefix r. find references defined R session (compiling vignette). sample IDs:","code":"hl <- hail_init() mt <- get_1kg(hl) mt print(mt$rows()$select()$show(5L)) # limited info r.mt.rows().select().show(5) # python chunk! r.mt.s.show(5)  # python chunk!"},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"helper-functions","dir":"Articles","previous_headings":"Acquire a slice of the 1000 genomes genotypes and annotations","what":"Helper functions","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"methods return data immediately useful R. can thus define function dim behave hail MatrixTable instances familiar way, along others. can useful , calling python methods.","code":"mt$count() dim.hail.matrixtable.MatrixTable <- function(x) {    tmp <- x$count()   c(tmp[[1]], tmp[[2]])  } dim(mt) ncol.hail.matrixtable.MatrixTable <- function(x) {   dim(x)[2] } nrow.hail.matrixtable.MatrixTable <- function(x) {   dim(x)[1] } nrow(mt)"},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"acquiring-column-fields","dir":"Articles","previous_headings":"Acquire a slice of the 1000 genomes genotypes and annotations","what":"Acquiring column fields","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"","code":"annopath <- path_1kg_annotations() tab <- hl$import_table(annopath, impute=TRUE)$key_by(\"Sample\") r.tab.describe()# python chunk! r.tab.show(width=100)"},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"adding-the-sample-annotation-to-the-matrixtable-aggregation","dir":"Articles","previous_headings":"Acquire a slice of the 1000 genomes genotypes and annotations","what":"Adding the sample annotation to the MatrixTable; aggregation","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"combine tab defined , MatrixTable instance, using python code reaching R via r.. Aggregation methods can used obtain contingency tables descriptive statistics. First, get frequencies superpopulation membership: statistics caffeine consumption:","code":"r.mt = r.mt.annotate_cols(pheno = r.tab[r.mt.s])   # python chunk!  r.mt.col.describe() mt$aggregate_cols(hl$agg$counter(mt$pheno$SuperPopulation)) uu <- mt$aggregate_cols(hl$agg$stats(mt$pheno$CaffeineConsumption)) names(uu) uu$mean uu$stdev"},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"working-with-variants-quality-assessment","dir":"Articles","previous_headings":"","what":"Working with variants; quality assessment","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"significance aggregation functions computations performed Spark, potentially huge distributed data structures. Now aggregate rows (SNPs). ’ll use python directly:","code":"from pprint import pprint  # python chunk! snp_counts = r.mt.aggregate_rows(r.hl.agg.counter(r.hl.Struct(ref=r.mt.alleles[0], alt=r.mt.alleles[1]))) pprint(snp_counts)"},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"a-histogram-of-read-depths","dir":"Articles","previous_headings":"Working with variants; quality assessment","what":"A histogram of read depths","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"Hail uses concept ‘entries’ matrix elements, ‘entry’ ‘struct’ potentially many fields. ’ll use R compute histogram sequencing depths samples variants. exercise: produce function mt_hist produces histogram measures relevant VCF components MatrixTable instance. Note also aggregators available: ’d also note hail direct interface ggplot2.","code":"p_hist <- mt$aggregate_entries(      hl$expr$aggregators$hist(mt$DP, 0L, 30L, 30L)) names(p_hist) length(p_hist$bin_edges) length(p_hist$bin_freq) midpts <- function(x) diff(x)/2+x[-length(x)] dpdf <- data.frame(x=midpts(p_hist$bin_edges), y=p_hist$bin_freq) ggplot(dpdf, aes(x=x,y=y)) + geom_col() + ggtitle(\"DP\") + ylab(\"Frequency\") names(hl$expr$aggregators)"},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"quality-summaries","dir":"Articles","previous_headings":"Working with variants; quality assessment","what":"Quality summaries","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"high-level function adds quality metrics MatrixTable. call rate histogram given :","code":"mt <- hl$sample_qc(mt) r.mt.col.describe()  # python! callrate <- mt$sample_qc$call_rate$collect() graphics::hist(callrate)"},{"path":[]},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"sample-quality","dir":"Articles","previous_headings":"Working with variants; quality assessment > Filtering","what":"Sample quality","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"’ll use python code given filtering, per-sample mean read depth call rate must exceed (arbitrarily chosen) thresholds.","code":"# python chunk! r.mt = r.mt.filter_cols((r.mt.sample_qc.dp_stats.mean >= 4) & (r.mt.sample_qc.call_rate >= 0.97)) print('After filter, %d/284 samples remain.' % r.mt.count_cols())"},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"genotype-quality","dir":"Articles","previous_headings":"Working with variants; quality assessment > Filtering","what":"Genotype quality","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"use python code filtering according relative purity reads underlying homozygous reference alt calls good balance ref/alt counts het calls Note filtering entries change MatrixTable shape.","code":"ab = r.mt.AD[1] / r.hl.sum(r.mt.AD)  filter_condition_ab = ((r.mt.GT.is_hom_ref() & (ab <= 0.1)) |                         (r.mt.GT.is_het() & (ab >= 0.25) & (ab <= 0.75)) |                         (r.mt.GT.is_hom_var() & (ab >= 0.9)))  fraction_filtered = r.mt.aggregate_entries(r.hl.agg.fraction(~filter_condition_ab)) print(f'Filtering {fraction_filtered * 100:.2f}% entries out of downstream analysis.') r.mt = r.mt.filter_entries(filter_condition_ab) dim(mt)"},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"variant-characteristics","dir":"Articles","previous_headings":"Working with variants; quality assessment > Filtering","what":"Variant characteristics","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"Allele frequencies, Hardy-Weinberg equilibrium test results summaries obtained using variant_qc function.","code":"mt = hl$variant_qc(mt) r.mt.row.describe()  #! python"},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"gwas-execution","dir":"Articles","previous_headings":"","what":"GWAS execution","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"built-procedure testing association (simulated) caffeine consumption measure genotype used. following commands eliminate variants minor allele frequency less 0.01, along small pp-values tests Hardy-Weinberg equilibrium.","code":"r.mt = r.mt.filter_rows(r.mt.variant_qc.AF[1] > 0.01) r.mt = r.mt.filter_rows(r.mt.variant_qc.p_value_hwe > 1e-6) r.mt.count()"},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"association-test-for-quantitative-response","dir":"Articles","previous_headings":"GWAS execution","what":"Association test for quantitative response","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"Now perform naive test association. Manhattan plot generated hail can displayed interaction using bokeh. comment now; possible embed bokeh display document details ready--hand. “QQ plot” helps evaluate adequacy analysis can formed using hl.plot.qq large applications; collect results plotting R. First estimate λGC\\lambda_{GC} qqplot: hardly point examining Manhattan plot situation. let’s see might done. ’ll use igvR get interactive extensible display.","code":"r.gwas = r.hl.linear_regression_rows(y=r.mt.pheno.CaffeineConsumption,                                  x=r.mt.GT.n_alt_alleles(),                                  covariates=[1.0]) # r.pl = r.hl.plot.manhattan(r.gwas.p_value) # import bokeh # bokeh.plotting.show(r.pl) pv = gwas$p_value$collect() x2 = stats::qchisq(1-pv,1) lam = stats::median(x2, na.rm=TRUE)/stats::qchisq(.5,1) lam qqplot(-log10(ppoints(length(pv))), -log10(pv), xlim=c(0,8), ylim=c(0,8),   ylab=\"-log10 p\", xlab=\"expected\") abline(0,1) locs <- gwas$locus$collect() conts <- sapply(locs, function(x) x$contig) pos <- sapply(locs, function(x) x$position) library(igvR) mytab <- data.frame(chr=as.character(conts), pos=pos, pval=pv) gt <- GWASTrack(\"simp\", mytab, chrom.col=1, pos.col=2, pval.col=3) igv <- igvR() setGenome(igv, \"hg19\") displayTrack(igv, gt)"},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"evaluating-population-stratification","dir":"Articles","previous_headings":"GWAS execution","what":"Evaluating population stratification","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"approach assessing population stratification provided hwe_normalized_pca. See hail methods docs details. avoiding tuple assignment tutorial document. ’ll collect key information plot. Now repeat association test adjustments population origin gender. New value λGC\\lambda_{GC}: manhattan plot chr8:","code":"r.pcastuff = r.hl.hwe_normalized_pca(r.mt.GT) r.mt = r.mt.annotate_cols(scores=r.pcastuff[1][r.mt.s].scores) sc <- pcastuff[[2]]$scores$collect() pc1 = sapply(sc, \"[\", 1) pc2 = sapply(sc, \"[\", 2) fac = mt$pheno$SuperPopulation$collect() myd = data.frame(pc1, pc2, pop=fac) library(ggplot2) ggplot(myd, aes(x=pc1, y=pc2, colour=factor(pop))) + geom_point() r.gwas2 = r.hl.linear_regression_rows(     y=r.mt.pheno.CaffeineConsumption,     x=r.mt.GT.n_alt_alleles(),     covariates=[1.0,r.mt.pheno.isFemale,r.mt.scores[0],         r.mt.scores[1], r.mt.scores[2]]) pv = gwas2$p_value$collect() x2 = stats::qchisq(1-pv,1) lam = stats::median(x2, na.rm=TRUE)/stats::qchisq(.5,1) lam locs <- gwas2$locus$collect() conts <- sapply(locs, function(x) x$contig) pos <- sapply(locs, function(x) x$position) mytab <- data.frame(chr=as.character(conts), pos=pos, pval=pv) ggplot(mytab[mytab$chr==\"8\",], aes(x=pos, y=-log10(pval))) + geom_point()"},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"tutorial document proceeds illustrations arbitrary aggregations. skip now. Additional vignettes address realistic higher-volume VCF https://pan.ukbb.broadinstitute.org/docs/hail-format/index.html https://pan-dev.ukbb.broadinstitute.org/docs/ld/index.html Simulating variant collections using Balding-Nichols Simulating variant collections using Pritchard-Stephens-Donnelly Connecting genotypes phenotype data FHIR","code":""},{"path":"https://github.com/vjcitn/BiocHail/articles/gwas_tut.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"SessionInfo","title":"01 BiocHail -- GWAS tutorial from hail.is","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: aarch64-apple-darwin20 ## Running under: macOS Sonoma 14.7 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: America/New_York ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] ggplot2_3.5.1    BiocHail_1.7.0   BiocStyle_2.32.1 ##  ## loaded via a namespace (and not attached): ##  [1] gtable_0.3.5          dir.expiry_1.12.0     xfun_0.48             ##  [4] bslib_0.8.0           htmlwidgets_1.6.4     lattice_0.22-6        ##  [7] vctrs_0.6.5           tools_4.4.1           generics_0.1.3        ## [10] curl_5.2.3            parallel_4.4.1        tibble_3.2.1          ## [13] fansi_1.0.6           RSQLite_2.3.7         blob_1.2.4            ## [16] pkgconfig_2.0.3       Matrix_1.7-0          dbplyr_2.5.0          ## [19] desc_1.4.3            lifecycle_1.0.4       compiler_4.4.1        ## [22] textshaping_0.4.0     munsell_0.5.1         htmltools_0.5.8.1     ## [25] sass_0.4.9            yaml_2.3.10           pillar_1.9.0          ## [28] pkgdown_2.1.1         jquerylib_0.1.4       cachem_1.1.0          ## [31] basilisk_1.16.0       tidyselect_1.2.1      digest_0.6.37         ## [34] dplyr_1.1.4           bookdown_0.40         fastmap_1.2.0         ## [37] grid_4.4.1            colorspace_2.1-1      cli_3.6.3             ## [40] magrittr_2.0.3        utf8_1.2.4            withr_3.0.1           ## [43] filelock_1.0.3        scales_1.3.0          bit64_4.5.2           ## [46] rmarkdown_2.28        httr_1.4.7            bit_4.5.0             ## [49] reticulate_1.39.0     ragg_1.3.3            png_0.1-8             ## [52] memoise_2.0.1         evaluate_1.0.1        knitr_1.48            ## [55] basilisk.utils_1.16.0 BiocFileCache_2.12.0  rlang_1.1.4           ## [58] Rcpp_1.0.13           glue_1.8.0            DBI_1.2.3             ## [61] BiocManager_1.30.25   BiocGenerics_0.50.0   jsonlite_1.8.9        ## [64] R6_2.5.1              systemfonts_1.1.0     fs_1.6.4"},{"path":"https://github.com/vjcitn/BiocHail/articles/large_t2t.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"02 Working with larger VCF: T2T by chromosome","text":"document illustrate issues large data volumes. acquire genotypes thousand genomes samples based T2T reference. obtained bgzipped vcf via used hail python deal conversion MatrixTable. done R, learn manipulate ‘reference sequence’. conjectural ‘reference sequence’ json document json folder BiocHail package, used t2tAnVIL.json. operation seems take long time even 64 cores. get exact timing owing connectivity problems. ’ll work genotype data T2T chr17. assume MatrixTable located path given environment variable HAIL_T2T_CHR17. MatrixTable available Open Storage Network osn:/bir190004-bucket01/Bioc1KGt2t/t17.zip. 45 GB file. unzipped location pointed HAIL_T2T_CHR17. Instructions using rclone acquire zip file given appendix. (command indicates BiocHail available, see Installation section near end document.)","code":"AnVIL::gsutil_cp(\"gs://fc-47de7dae-e8e6-429c-b760-b4ba49136eee/1KGP/joint_genotyping/joint_vcfs/raw/chr22.genotyped.vcf.gz\", \".\") >>> import hail as h >>> rg = h.get_reference('GRCh38') Initializing Hail with default parameters... Setting default log level to \"WARN\". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). Running on Apache Spark version 3.1.3 SparkUI available at http://756809c79837:4040 Welcome to      __  __     <>__     / /_/ /__  __/ /    / __  / _ `/ / /   /_/ /_/\\_,_/_/_/   version 0.2.105-acd89e80c345 LOGGING: writing to /home/rstudio/hail-20221213-1558-0.2.105-acd89e80c345.log >>> nn = rg.read(\"t2tAnVIL.json\") >>> h.import_vcf(\"chr22.genotyped.vcf.gz\", force_bgz=True, reference_genome=nn).write(\"t2t22.mt\") library(BiocHail) hl <- hail_init() # NB the following two commands are now encapsulated in the rg_update function nn <- hl$get_reference('GRCh38') nn <- nn$read(system.file(\"json/t2tAnVIL.json\", package=\"BiocHail\")) # updates the hail reference genome bigloc = Sys.getenv(\"HAIL_T2T_CHR17\") if (nchar(bigloc)>0) {   mt17 <- hl$read_matrix_table(Sys.getenv(\"HAIL_T2T_CHR17\"))   mt17$count() }"},{"path":"https://github.com/vjcitn/BiocHail/articles/large_t2t.html","id":"population-stratification-assessment-via-pca","dir":"Articles","previous_headings":"","what":"Population stratification assessment via PCA","title":"02 Working with larger VCF: T2T by chromosome","text":"following command compute PCs based SNP. seems impractical. found 64 core machine terra.bio, PCA samples 1-5% 3.8 million loci T2T chr17 takes 40 minutes. Hail’s code seems good utilizing cores. saved PC scores PCA based 38k randomly sampled loci, 191k randomly sampled loci. ’s simple view latter.","code":"pcastuff = hl$hwe_normalized_pca(mt17$GT) utils::data(pcs_191k) graphics::pairs(pcs_191k[,1:5], pch=\".\")"},{"path":"https://github.com/vjcitn/BiocHail/articles/large_t2t.html","id":"exercises","dir":"Articles","previous_headings":"","what":"Exercises","title":"02 Working with larger VCF: T2T by chromosome","text":"Comment gain information geographic origin achieved using 5% sample loci instead 1% sample. Find geographic origins donors 1000 genomes genotypes bind mt17 using methods given vignette 01_gwas_tut. Use codes color points PCA plot. Produce artificial “phenotype” donors via rnorm(3202,0,1), bind genotype data, perform naive GWAS. loci strongly associated artificial phenotype? Produce new artificial phenotype association geographic origin donor, association genotype. Produce new naive GWAS, third using PCA scores covariates. effects covariate adjustment reasoning genetic association artificial phenotype?","code":""},{"path":"https://github.com/vjcitn/BiocHail/articles/large_t2t.html","id":"appendix-using-rclone-with-docker-to-get-the-chr17-data","dir":"Articles","previous_headings":"","what":"Appendix: using rclone with docker to get the chr17 data","title":"02 Working with larger VCF: T2T by chromosome","text":"can painful install configure rclone. use docker container. Let RC_DATADIR environment variable evaluating available folder. Also, place text file contents file rclone.conf folder pointed environment variable RC_CONFDIR. following list files 1KG samples genotyped T2T reference. Use rclone copyto command obtain local copy zip file t17.zip folder pointed $RC_DATADIR: file unzipped folder environment variable HAIL_T2T_CHR17 point.","code":"[osn] type = s3 provider = AWS endpoint = https://mghp.osn.xsede.org acl = public no_check_bucket = true docker run -v $RC_DATADIR:/data -v $RC_CONFDIR:/config/rclone -t rclone/rclone:latest ls osn:/bir190004-bucket01/Bioc1KGt2t docker run -v $RC_DATADIR:/data -v $RC_CONFDIR:/config/rclone -t rclone/rclone:latest copyto osn:/bir190004-bucket01/Bioc1KGt2t/t17.zip ./t17.zip"},{"path":"https://github.com/vjcitn/BiocHail/articles/large_t2t.html","id":"installing-biochail","dir":"Articles","previous_headings":"","what":"Installing BiocHail","title":"02 Working with larger VCF: T2T by chromosome","text":"BiocHail installed follows: 1.0.0, JDK Java version <= 11.0 necessary use version Hail installed package. package usable MacOS suitable java support. Java version >= 8.x used, warnings Apache Spark may observed. best knowledge conditions warnings pertain affect program performance.","code":"if (!require(\"BiocManager\"))     install.packages(\"BiocManager\") BiocManager::install(\"BiocHail\")"},{"path":"https://github.com/vjcitn/BiocHail/articles/large_t2t.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"SessionInfo","title":"02 Working with larger VCF: T2T by chromosome","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: aarch64-apple-darwin20 ## Running under: macOS Sonoma 14.7 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: America/New_York ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] BiocHail_1.7.0   BiocStyle_2.32.1 ##  ## loaded via a namespace (and not attached): ##  [1] sass_0.4.9            utf8_1.2.4            generics_0.1.3        ##  [4] lattice_0.22-6        RSQLite_2.3.7         digest_0.6.37         ##  [7] magrittr_2.0.3        grid_4.4.1            evaluate_1.0.1        ## [10] bookdown_0.40         fastmap_1.2.0         blob_1.2.4            ## [13] Matrix_1.7-0          jsonlite_1.8.9        DBI_1.2.3             ## [16] BiocManager_1.30.25   httr_1.4.7            fansi_1.0.6           ## [19] textshaping_0.4.0     jquerylib_0.1.4       cli_3.6.3             ## [22] rlang_1.1.4           dbplyr_2.5.0          basilisk.utils_1.16.0 ## [25] bit64_4.5.2           withr_3.0.1           cachem_1.1.0          ## [28] yaml_2.3.10           parallel_4.4.1        tools_4.4.1           ## [31] dir.expiry_1.12.0     memoise_2.0.1         dplyr_1.1.4           ## [34] filelock_1.0.3        basilisk_1.16.0       BiocGenerics_0.50.0   ## [37] reticulate_1.39.0     curl_5.2.3            png_0.1-8             ## [40] vctrs_0.6.5           R6_2.5.1              BiocFileCache_2.12.0  ## [43] lifecycle_1.0.4       fs_1.6.4              htmlwidgets_1.6.4     ## [46] bit_4.5.0             ragg_1.3.3            pkgconfig_2.0.3       ## [49] desc_1.4.3            pkgdown_2.1.1         pillar_1.9.0          ## [52] bslib_0.8.0           Rcpp_1.0.13           glue_1.8.0            ## [55] systemfonts_1.1.0     highr_0.11            xfun_0.48             ## [58] tibble_3.2.1          tidyselect_1.2.1      knitr_1.48            ## [61] htmltools_0.5.8.1     rmarkdown_2.28        compiler_4.4.1"},{"path":"https://github.com/vjcitn/BiocHail/articles/ukbb.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"03 Working with UK Biobank summary statistics","text":"document illustrate approaches working UK Biobank summary statistics. sure python module ukbb_pan_ancestry installed reticulate can find . (don’t use basilisk 12/24/2022 issues terra spark cluster.) command indicates BiocHail available, see Installation section near end document.","code":"library(BiocHail)"},{"path":[]},{"path":"https://github.com/vjcitn/BiocHail/articles/ukbb.html","id":"standalone","dir":"Articles","previous_headings":"Overview > Initialization and description","what":"Standalone","title":"03 Working with UK Biobank summary statistics","text":"produced representation summary statistics sample 9888 loci. 5GB resource can retrieved cached following code: get description available content, need python chunk:","code":"hl = hail_init() ss = get_ukbb_sumstat_10kloci_mt(hl) # can take about a minute to unzip 5GB ss$count()   # but if a persistent MatrixTable is at the location given              # by env var HAIL_UKBB_SUMSTAT_10K_PATH it goes quickly r.ss.describe()"},{"path":"https://github.com/vjcitn/BiocHail/articles/ukbb.html","id":"terra","dir":"Articles","previous_headings":"Overview > Initialization and description","what":"Terra","title":"03 Working with UK Biobank summary statistics","text":"’s basic description summary stats table, code works terra.bio: need use python chunk get output, using gs:// storage references.","code":"hl = bare_hail() hl$init(idempotent=TRUE, spark_conf=list(   'spark.hadoop.fs.gs.requester.pays.mode'= 'CUSTOM',   'spark.hadoop.fs.gs.requester.pays.buckets'= 'ukb-diverse-pops-public',   'spark.hadoop.fs.gs.requester.pays.project.id'= Sys.getenv(\"GOOGLE_PROJECT\"))) r.hl.read_matrix_table('gs://ukb-diverse-pops-public/sumstats_release/results_full.mt').describe()"},{"path":[]},{"path":"https://github.com/vjcitn/BiocHail/articles/ukbb.html","id":"metadata-on-study-phenotypes","dir":"Articles","previous_headings":"Overview > Exploring the subset","what":"Metadata on study phenotypes","title":"03 Working with UK Biobank summary statistics","text":"’ll collect column metadata start understand details annotation phenotypes. ’ve introduced function extracts selected fields given phenotype, accommodates availability results specific populations. can iterated elements sscol produce comprehensive searchable table. ’s small illustration:","code":"sscol = ss$cols()$collect() # OK because we are just working over column metadata ss1 = sscol[[1]] names(ss1) ss1$get(\"phenocode\") ss1$get(\"description\") multipop_df(ss1) library(DT) ndf = do.call(rbind, lapply(sscol[1:10], multipop_df)) datatable(ndf)"},{"path":"https://github.com/vjcitn/BiocHail/articles/ukbb.html","id":"metadata-on-loci","dir":"Articles","previous_headings":"Overview > Exploring the subset","what":"Metadata on loci","title":"03 Working with UK Biobank summary statistics","text":"’ll trim material worked sampling rows columns. (2023.01.08: future revisions able control seed random sampling.) Row metadata simple collect:","code":"sss = ss$sample_rows(.01)$sample_cols(.01) sss$count() rss = sss$rows()$collect() rss1 = rss[[1]] names(rss1) names(rss1$locus) rss1$locus$contig sapply(c(\"contig\", \"position\"), function(x) rss1$locus[[x]])"},{"path":"https://github.com/vjcitn/BiocHail/articles/ukbb.html","id":"summary-statistics","dir":"Articles","previous_headings":"Overview > Exploring the subset","what":"Summary statistics","title":"03 Working with UK Biobank summary statistics","text":"summary statistics reside entries MatrixTable. can expensive collect filtering methods beyond random sampling must mastered. basic view. summary_stats component association p-values – log10 transformed?","code":"sse = sss$entries()$collect() length(sse) names(sse[[1]]) sse1 = sse[[1]] length(sse1$summary_stats) names(sse1$summary_stats[[1]]) sse1$summary_stats[[1]]$Pvalue"},{"path":[]},{"path":"https://github.com/vjcitn/BiocHail/articles/ukbb.html","id":"infrastructure","dir":"Articles","previous_headings":"Exercises","what":"Infrastructure","title":"03 Working with UK Biobank summary statistics","text":"disease x studied UK Biobank? many phenotypes studied K populations, K=2, 3, …? consistent annotation – numbers controls cases always recorded? , API calls obtain answers? , missing portals allow answers obtained?","code":""},{"path":"https://github.com/vjcitn/BiocHail/articles/ukbb.html","id":"substantive","dir":"Articles","previous_headings":"Exercises","what":"Substantive","title":"03 Working with UK Biobank summary statistics","text":"List genes near loci collected 10k random sample (Hard) significant finding (position, phenotype, population) 10k subset?","code":""},{"path":"https://github.com/vjcitn/BiocHail/articles/ukbb.html","id":"installing-biochail","dir":"Articles","previous_headings":"","what":"Installing BiocHail","title":"03 Working with UK Biobank summary statistics","text":"BiocHail installed follows:","code":"if (!require(\"BiocManager\"))     install.packages(\"BiocManager\") BiocManager::install(\"BiocHail\")"},{"path":"https://github.com/vjcitn/BiocHail/articles/ukbb.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"SessionInfo","title":"03 Working with UK Biobank summary statistics","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: aarch64-apple-darwin20 ## Running under: macOS Sonoma 14.7 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: America/New_York ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] BiocStyle_2.32.1 ##  ## loaded via a namespace (and not attached): ##  [1] cli_3.6.3           knitr_1.48          rlang_1.1.4         ##  [4] xfun_0.48           png_0.1-8           textshaping_0.4.0   ##  [7] jsonlite_1.8.9      htmltools_0.5.8.1   ragg_1.3.3          ## [10] sass_0.4.9          rmarkdown_2.28      grid_4.4.1          ## [13] evaluate_1.0.1      jquerylib_0.1.4     fastmap_1.2.0       ## [16] yaml_2.3.10         lifecycle_1.0.4     bookdown_0.40       ## [19] BiocManager_1.30.25 compiler_4.4.1      fs_1.6.4            ## [22] Rcpp_1.0.13         htmlwidgets_1.6.4   lattice_0.22-6      ## [25] systemfonts_1.1.0   digest_0.6.37       R6_2.5.1            ## [28] reticulate_1.39.0   bslib_0.8.0         Matrix_1.7-0        ## [31] tools_4.4.1         pkgdown_2.1.1       cachem_1.1.0        ## [34] desc_1.4.3"},{"path":"https://github.com/vjcitn/BiocHail/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vincent Carey. Author, maintainer.","code":""},{"path":"https://github.com/vjcitn/BiocHail/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Carey V (2024). BiocHail: basilisk hail. R package version 1.7.0, https://github.com/vjcitn/BiocHail.","code":"@Manual{,   title = {BiocHail: basilisk and hail},   author = {Vincent Carey},   year = {2024},   note = {R package version 1.7.0},   url = {https://github.com/vjcitn/BiocHail}, }"},{"path":"https://github.com/vjcitn/BiocHail/index.html","id":"biochail","dir":"","previous_headings":"","what":"basilisk and hail","title":"basilisk and hail","text":"multi-step overview Hail genetic association studies. March 2023, three vignettes (articles), described following subsections.","code":""},{"path":"https://github.com/vjcitn/BiocHail/index.html","id":"tutorial-overview","dir":"","previous_headings":"","what":"Tutorial overview","title":"basilisk and hail","text":"first vignette follows Hail 0.2 GWAS tutorial. ’ll see use small excerpt 1000 genomes study produce litman Along way, illustrate adjust population stratification: popstrat","code":""},{"path":"https://github.com/vjcitn/BiocHail/index.html","id":"larger-data-problem--1000-genomes-data-with-t2t-reference","dir":"","previous_headings":"","what":"Larger data problem – 1000 genomes data with T2T reference","title":"basilisk and hail","text":"arranged serialization genotypes chromosome 17 3202 1000 genomes samples. Code provided explore population stratification richer set genotypes. Exercises investigate sampling loci, manipulation annotation, exploratory GWAS.","code":""},{"path":"https://github.com/vjcitn/BiocHail/index.html","id":"working-with-uk-biobank-summary-statistics","dir":"","previous_headings":"","what":"Working with UK Biobank summary statistics","title":"basilisk and hail","text":"code interest vignette needs run Rstudio take advantage quarto-based mixing R python. Exercises address interface production simplify querying available phenotypes extraction findings based strength association.","code":""},{"path":"https://github.com/vjcitn/BiocHail/index.html","id":"relevant-ld-resources--in-which-cloud","dir":"","previous_headings":"","what":"Relevant LD resources … in which cloud?","title":"basilisk and hail","text":"Still come.","code":""},{"path":"https://github.com/vjcitn/BiocHail/index.html","id":"simulating-multipopulation-genotype-surveys","dir":"","previous_headings":"","what":"Simulating multipopulation genotype surveys","title":"basilisk and hail","text":"Still come.","code":""},{"path":"https://github.com/vjcitn/BiocHail/index.html","id":"binding-phenotypes-from-fhir-to-hail","dir":"","previous_headings":"","what":"Binding phenotypes from FHIR to Hail","title":"basilisk and hail","text":"Still come.","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.default.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 support — as.data.frame.default","title":"S3 support — as.data.frame.default","text":"S3 support","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 support — as.data.frame.default","text":"","code":"# Default S3 method as.data.frame(x, row.names = NULL, optional = FALSE, ...)"},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 support — as.data.frame.default","text":"x entity coercible data.frame row.names character NULL optional logical ... args","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 support — as.data.frame.default","text":"data.frame","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 support — as.data.frame.default","text":"","code":"hl <- hail_init() annopath <- path_1kg_annotations() tab <- hl$import_table(annopath, impute = TRUE)$key_by(\"Sample\") as.data.frame(tab$head(3L)) #>    Sample Population SuperPopulation isFemale PurpleHair CaffeineConsumption #> 1 HG00096        GBR             EUR    FALSE      FALSE                   4 #> 2 HG00097        GBR             EUR     TRUE       TRUE                   4 #> 3 HG00098        GBR             EUR    FALSE      FALSE                   5"},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.hail.table.Table.html","id":null,"dir":"Reference","previous_headings":"","what":"convert hail.table.Table to R data frame — as.data.frame.hail.table.Table","title":"convert hail.table.Table to R data frame — as.data.frame.hail.table.Table","text":"convert hail.table.Table R data frame","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.hail.table.Table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert hail.table.Table to R data frame — as.data.frame.hail.table.Table","text":"","code":"# S3 method for class 'hail.table.Table' as.data.frame(x, row.names = NULL, optional = FALSE, ...)"},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.hail.table.Table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert hail.table.Table to R data frame — as.data.frame.hail.table.Table","text":"x instance \"hail.table.Table\" row.names used optional used ... used","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.hail.table.Table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert hail.table.Table to R data frame — as.data.frame.hail.table.Table","text":"data.frame","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.hail.table.Table.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"convert hail.table.Table to R data frame — as.data.frame.hail.table.Table","text":"use small table collect used","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.hail.table.Table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert hail.table.Table to R data frame — as.data.frame.hail.table.Table","text":"","code":"hl <- hail_init() annopath <- path_1kg_annotations() tab <- hl$import_table(annopath, impute = TRUE)$key_by(\"Sample\") as.data.frame(tab$head(3L)) #>    Sample Population SuperPopulation isFemale PurpleHair CaffeineConsumption #> 1 HG00096        GBR             EUR    FALSE      FALSE                   4 #> 2 HG00097        GBR             EUR     TRUE       TRUE                   4 #> 3 HG00098        GBR             EUR    FALSE      FALSE                   5"},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 support — as.data.frame","title":"S3 support — as.data.frame","text":"S3 support","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 support — as.data.frame","text":"","code":"as.data.frame(x, row.names = NULL, optional = FALSE, ...)"},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 support — as.data.frame","text":"x entity coercible data.frame row.names character NULL optional logical ... args","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 support — as.data.frame","text":"data.frame","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/as.data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 support — as.data.frame","text":"","code":"hl <- hail_init() annopath <- path_1kg_annotations() tab <- hl$import_table(annopath, impute = TRUE)$key_by(\"Sample\") as.data.frame(tab$head(3L)) #>    Sample Population SuperPopulation isFemale PurpleHair CaffeineConsumption #> 1 HG00096        GBR             EUR    FALSE      FALSE                   4 #> 2 HG00097        GBR             EUR     TRUE       TRUE                   4 #> 3 HG00098        GBR             EUR    FALSE      FALSE                   5"},{"path":"https://github.com/vjcitn/BiocHail/reference/bare_hail.html","id":null,"dir":"Reference","previous_headings":"","what":"bare interface to hail using reticulate — bare_hail","title":"bare interface to hail using reticulate — bare_hail","text":"bare interface hail using reticulate","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/bare_hail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bare interface to hail using reticulate — bare_hail","text":"","code":"bare_hail()"},{"path":"https://github.com/vjcitn/BiocHail/reference/bare_hail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"bare interface to hail using reticulate — bare_hail","text":"python reference hail module","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/bare_hail.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"bare interface to hail using reticulate — bare_hail","text":"`/home/jupyter/.local/share/r-miniconda/envs/r-reticulate/bin/pip3 install...` used ensure reticulate's python ecosystem want `bare_hail()$init(idempotent=TRUE)` run","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/bare_hail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"bare interface to hail using reticulate — bare_hail","text":"","code":"# assumes terra if (nchar(Sys.getenv(\"WORKSPACE_NAMESPACE\"))>0) {   hl = bare_hail()   hl$init(idempotent=TRUE, spark_conf=list(       'spark.hadoop.fs.gs.requester.pays.mode'= 'CUSTOM',       'spark.hadoop.fs.gs.requester.pays.buckets'= 'ukb-diverse-pops-public',       'spark.hadoop.fs.gs.requester.pays.project.id'= Sys.getenv(\"GOOGLE_PROJECT\")))   hl$read_matrix_table('gs://ukb-diverse-pops-public/sumstats_release/results_full.mt')$describe()   if (FALSE) { # \\dontrun{   # this is supposed to get us some LD data but xx.shape fails, issue filed     hli = reticulate::import(\"hail.linalg\")     upa = reticulate::import(\"ukbb_pan_ancestry\")     xx = hli$BlockMatrix$read(upa$get_ld_matrix_path('AFR'))    } # }   }"},{"path":"https://github.com/vjcitn/BiocHail/reference/colnames-hail.table.Table-method.html","id":null,"dir":"Reference","previous_headings":"","what":"extract field names from hail.table.Table — colnames,hail.table.Table-method","title":"extract field names from hail.table.Table — colnames,hail.table.Table-method","text":"extract field names hail.table.Table","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/colnames-hail.table.Table-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract field names from hail.table.Table — colnames,hail.table.Table-method","text":"","code":"# S4 method for class 'hail.table.Table' colnames(x, do.NULL = TRUE, prefix = \"col\")"},{"path":"https://github.com/vjcitn/BiocHail/reference/colnames-hail.table.Table-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract field names from hail.table.Table — colnames,hail.table.Table-method","text":"x hail.table.Table instance .NULL ignored prefix ignored","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/colnames-hail.table.Table-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract field names from hail.table.Table — colnames,hail.table.Table-method","text":"character vector","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/colnames-hail.table.Table-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract field names from hail.table.Table — colnames,hail.table.Table-method","text":"","code":"hl <- hail_init() annopath <- path_1kg_annotations() tab <- hl$import_table(annopath, impute = TRUE)$key_by(\"Sample\") colnames(tab) #> [1] \"Sample\"              \"Population\"          \"SuperPopulation\"     #> [4] \"isFemale\"            \"PurpleHair\"          \"CaffeineConsumption\""},{"path":"https://github.com/vjcitn/BiocHail/reference/filter.hail.table.Table.html","id":null,"dir":"Reference","previous_headings":"","what":"filter rows of a hail Table — filter.hail.table.Table","title":"filter rows of a hail Table — filter.hail.table.Table","text":"filter rows hail Table","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/filter.hail.table.Table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter rows of a hail Table — filter.hail.table.Table","text":"","code":"# S3 method for class 'hail.table.Table' filter(.data, ..., .by = NULL, .preserve = FALSE)"},{"path":"https://github.com/vjcitn/BiocHail/reference/filter.hail.table.Table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter rows of a hail Table — filter.hail.table.Table","text":".data instance hail.table.Table ... include named components `filter` logical vector number rows `.data`, `hl`, reference hail environment (Module), `placeholder` arbitrary character(1) .used .preserve used","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/filter.hail.table.Table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter rows of a hail Table — filter.hail.table.Table","text":"filtered hail.table.Table reference","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/filter.hail.table.Table.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"filter rows of a hail Table — filter.hail.table.Table","text":"writes one line table disk retrieve field names FIXME: uses disk know create BooleanExpression except importing.","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/filter.hail.table.Table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"filter rows of a hail Table — filter.hail.table.Table","text":"","code":"hl <- hail_init() annopath <- path_1kg_annotations() tab <- hl$import_table(annopath, impute = TRUE)$key_by(\"Sample\") pick <- rep(FALSE, 3500) pick[seq_len(10)] <- TRUE ft <- filter(tab, filter = pick, hl = hl) ft$count() #> [1] 10 ft$head(2L)$collect() #> [[1]] #> Struct(Sample='HG00096', Population='GBR', SuperPopulation='EUR', isFemale=False, PurpleHair=False, CaffeineConsumption=4, tmpf=True) #>  #> [[2]] #> Struct(Sample='HG00097', Population='GBR', SuperPopulation='EUR', isFemale=True, PurpleHair=True, CaffeineConsumption=4, tmpf=True) #>"},{"path":"https://github.com/vjcitn/BiocHail/reference/filter.html","id":null,"dir":"Reference","previous_headings":"","what":"s3 support — filter","title":"s3 support — filter","text":"s3 support","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"s3 support — filter","text":"","code":"filter(.data, ..., .by = NULL, .preserve = FALSE)"},{"path":"https://github.com/vjcitn/BiocHail/reference/filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"s3 support — filter","text":".data instance hail.table.Table ... include named components `filter` logical vector number rows `.data`, `hl`, reference hail environment (Module), `placeholder` arbitrary character(1) .used .preserve used","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"s3 support — filter","text":"filtered hail.table.Table reference","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"s3 support — filter","text":"","code":"hl <- hail_init() annopath <- path_1kg_annotations() tab <- hl$import_table(annopath, impute = TRUE)$key_by(\"Sample\") pick <- rep(FALSE, 3500) pick[seq_len(10)] <- TRUE ft <- filter(tab, filter = pick, hl = hl) ft$count() #> [1] 10 ft$head(2L)$collect() #> [[1]] #> Struct(Sample='HG00096', Population='GBR', SuperPopulation='EUR', isFemale=False, PurpleHair=False, CaffeineConsumption=4, tmpf=True) #>  #> [[2]] #> Struct(Sample='HG00097', Population='GBR', SuperPopulation='EUR', isFemale=True, PurpleHair=True, CaffeineConsumption=4, tmpf=True) #>"},{"path":"https://github.com/vjcitn/BiocHail/reference/get_1kg.html","id":null,"dir":"Reference","previous_headings":"","what":"interface to 1kg import — get_1kg","title":"interface to 1kg import — get_1kg","text":"interface 1kg import","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/get_1kg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interface to 1kg import — get_1kg","text":"","code":"get_1kg(   hl,   retrieve_import_write = FALSE,   path_1kg_zip = osn_1kg_path(),   folder = tempdir(),   cache = BiocFileCache::BiocFileCache(),   simple = FALSE )"},{"path":"https://github.com/vjcitn/BiocHail/reference/get_1kg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"interface to 1kg import — get_1kg","text":"hl hail object retrieve_import_write logical(1) TRUE, use hl.utils.get_1kg retrieve data, otherwise acquire previously written zip file, either cache, , file found cache, web, followed caching path_1kg_zip character(1) path zip MatrixTable, defaults `osn_1kg_path()`. folder character(1) destination 1kg.mt retrieved using hl.utils.get_1kg, import_vcf, write cache BiocFileCache-type cache simple logical(1) TRUE avoid basilisk work supplied hail module `hl`, defaults FALSE","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/get_1kg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"interface to 1kg import — get_1kg","text":"\"hail.matrixtable.MatrixTable\" instance","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/get_1kg.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"interface to 1kg import — get_1kg","text":"overwrite permitted import_vcf.write event","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/get_1kg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"interface to 1kg import — get_1kg","text":"","code":"hl <- hail_init() mt <- get_1kg(hl) mt #> <hail.matrixtable.MatrixTable object at 0x15c88ab20> mt$rows()$select()$show(5L) # must use integer annopath <- path_1kg_annotations() tab <- hl$import_table(annopath, impute = TRUE)$key_by(\"Sample\") tab$describe() tab$show(width = 100L)"},{"path":"https://github.com/vjcitn/BiocHail/reference/get_key.hail.table.Table.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method for get_key — get_key.hail.table.Table","title":"S3 method for get_key — get_key.hail.table.Table","text":"S3 method get_key","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/get_key.hail.table.Table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method for get_key — get_key.hail.table.Table","text":"","code":"# S3 method for class 'hail.table.Table' get_key(x)"},{"path":"https://github.com/vjcitn/BiocHail/reference/get_key.hail.table.Table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method for get_key — get_key.hail.table.Table","text":"x instance hail.table.Table","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/get_key.hail.table.Table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method for get_key — get_key.hail.table.Table","text":"list elements names (names keys) key_df (data.frame key values, column names)","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/get_key.hail.table.Table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method for get_key — get_key.hail.table.Table","text":"","code":"hl <- hail_init() annopath <- path_1kg_annotations() tab <- hl$import_table(annopath, impute = TRUE)$key_by(\"Sample\") get_key(tab) #> $names #> [1] \"Sample\" #>  #> $key_df #>       Sample #> 1    HG00096 #> 2    HG00097 #> 3    HG00098 #> 4    HG00099 #> 5    HG00100 #> 6    HG00101 #> 7    HG00102 #> 8    HG00103 #> 9    HG00104 #> 10   HG00105 #> 11   HG00106 #> 12   HG00107 #> 13   HG00108 #> 14   HG00109 #> 15   HG00110 #> 16   HG00111 #> 17   HG00112 #> 18   HG00113 #> 19   HG00114 #> 20   HG00115 #> 21   HG00116 #> 22   HG00117 #> 23   HG00118 #> 24   HG00119 #> 25   HG00120 #> 26   HG00121 #> 27   HG00122 #> 28   HG00123 #> 29   HG00124 #> 30   HG00125 #> 31   HG00126 #> 32   HG00127 #> 33   HG00128 #> 34   HG00129 #> 35   HG00130 #> 36   HG00131 #> 37   HG00132 #> 38   HG00133 #> 39   HG00134 #> 40   HG00135 #> 41   HG00136 #> 42   HG00137 #> 43   HG00138 #> 44   HG00139 #> 45   HG00140 #> 46   HG00141 #> 47   HG00142 #> 48   HG00143 #> 49   HG00144 #> 50   HG00145 #> 51   HG00146 #> 52   HG00147 #> 53   HG00148 #> 54   HG00149 #> 55   HG00150 #> 56   HG00151 #> 57   HG00152 #> 58   HG00153 #> 59   HG00154 #> 60   HG00155 #> 61   HG00156 #> 62   HG00157 #> 63   HG00158 #> 64   HG00159 #> 65   HG00160 #> 66   HG00171 #> 67   HG00173 #> 68   HG00174 #> 69   HG00176 #> 70   HG00177 #> 71   HG00178 #> 72   HG00179 #> 73   HG00180 #> 74   HG00181 #> 75   HG00182 #> 76   HG00183 #> 77   HG00185 #> 78   HG00186 #> 79   HG00187 #> 80   HG00188 #> 81   HG00189 #> 82   HG00190 #> 83   HG00231 #> 84   HG00232 #> 85   HG00233 #> 86   HG00234 #> 87   HG00235 #> 88   HG00236 #> 89   HG00237 #> 90   HG00238 #> 91   HG00239 #> 92   HG00240 #> 93   HG00242 #> 94   HG00243 #> 95   HG00244 #> 96   HG00245 #> 97   HG00246 #> 98   HG00247 #> 99   HG00248 #> 100  HG00249 #> 101  HG00250 #> 102  HG00251 #> 103  HG00252 #> 104  HG00253 #> 105  HG00254 #> 106  HG00255 #> 107  HG00256 #> 108  HG00257 #> 109  HG00258 #> 110  HG00259 #> 111  HG00260 #> 112  HG00261 #> 113  HG00262 #> 114  HG00263 #> 115  HG00264 #> 116  HG00265 #> 117  HG00266 #> 118  HG00267 #> 119  HG00268 #> 120  HG00269 #> 121  HG00270 #> 122  HG00271 #> 123  HG00272 #> 124  HG00273 #> 125  HG00274 #> 126  HG00275 #> 127  HG00276 #> 128  HG00277 #> 129  HG00278 #> 130  HG00280 #> 131  HG00281 #> 132  HG00282 #> 133  HG00284 #> 134  HG00285 #> 135  HG00288 #> 136  HG00290 #> 137  HG00302 #> 138  HG00303 #> 139  HG00304 #> 140  HG00306 #> 141  HG00308 #> 142  HG00309 #> 143  HG00310 #> 144  HG00311 #> 145  HG00312 #> 146  HG00313 #> 147  HG00315 #> 148  HG00318 #> 149  HG00319 #> 150  HG00320 #> 151  HG00321 #> 152  HG00323 #> 153  HG00324 #> 154  HG00325 #> 155  HG00326 #> 156  HG00327 #> 157  HG00328 #> 158  HG00329 #> 159  HG00330 #> 160  HG00331 #> 161  HG00332 #> 162  HG00334 #> 163  HG00335 #> 164  HG00336 #> 165  HG00337 #> 166  HG00338 #> 167  HG00339 #> 168  HG00341 #> 169  HG00342 #> 170  HG00343 #> 171  HG00344 #> 172  HG00345 #> 173  HG00346 #> 174  HG00349 #> 175  HG00350 #> 176  HG00351 #> 177  HG00353 #> 178  HG00355 #> 179  HG00356 #> 180  HG00357 #> 181  HG00358 #> 182  HG00359 #> 183  HG00360 #> 184  HG00361 #> 185  HG00362 #> 186  HG00364 #> 187  HG00365 #> 188  HG00366 #> 189  HG00367 #> 190  HG00368 #> 191  HG00369 #> 192  HG00371 #> 193  HG00372 #> 194  HG00373 #> 195  HG00375 #> 196  HG00376 #> 197  HG00377 #> 198  HG00378 #> 199  HG00379 #> 200  HG00380 #> 201  HG00381 #> 202  HG00382 #> 203  HG00383 #> 204  HG00384 #> 205  HG00403 #> 206  HG00404 #> 207  HG00405 #> 208  HG00406 #> 209  HG00407 #> 210  HG00408 #> 211  HG00409 #> 212  HG00410 #> 213  HG00411 #> 214  HG00418 #> 215  HG00419 #> 216  HG00420 #> 217  HG00421 #> 218  HG00422 #> 219  HG00423 #> 220  HG00427 #> 221  HG00428 #> 222  HG00429 #> 223  HG00436 #> 224  HG00437 #> 225  HG00438 #> 226  HG00442 #> 227  HG00443 #> 228  HG00444 #> 229  HG00445 #> 230  HG00446 #> 231  HG00447 #> 232  HG00448 #> 233  HG00449 #> 234  HG00450 #> 235  HG00451 #> 236  HG00452 #> 237  HG00453 #> 238  HG00457 #> 239  HG00458 #> 240  HG00459 #> 241  HG00463 #> 242  HG00464 #> 243  HG00465 #> 244  HG00472 #> 245  HG00473 #> 246  HG00474 #> 247  HG00475 #> 248  HG00476 #> 249  HG00477 #> 250  HG00478 #> 251  HG00479 #> 252  HG00480 #> 253  HG00500 #> 254  HG00501 #> 255  HG00502 #> 256  HG00512 #> 257  HG00513 #> 258  HG00514 #> 259  HG00524 #> 260  HG00525 #> 261  HG00526 #> 262  HG00530 #> 263  HG00531 #> 264  HG00532 #> 265  HG00533 #> 266  HG00534 #> 267  HG00535 #> 268  HG00536 #> 269  HG00537 #> 270  HG00538 #> 271  HG00542 #> 272  HG00543 #> 273  HG00544 #> 274  HG00551 #> 275  HG00552 #> 276  HG00553 #> 277  HG00554 #> 278  HG00555 #> 279  HG00556 #> 280  HG00557 #> 281  HG00558 #> 282  HG00559 #> 283  HG00560 #> 284  HG00561 #> 285  HG00565 #> 286  HG00566 #> 287  HG00567 #> 288  HG00577 #> 289  HG00578 #> 290  HG00579 #> 291  HG00580 #> 292  HG00581 #> 293  HG00582 #> 294  HG00583 #> 295  HG00584 #> 296  HG00585 #> 297  HG00589 #> 298  HG00590 #> 299  HG00591 #> 300  HG00592 #> 301  HG00593 #> 302  HG00594 #> 303  HG00595 #> 304  HG00596 #> 305  HG00597 #> 306  HG00598 #> 307  HG00599 #> 308  HG00600 #> 309  HG00607 #> 310  HG00608 #> 311  HG00609 #> 312  HG00610 #> 313  HG00611 #> 314  HG00612 #> 315  HG00613 #> 316  HG00614 #> 317  HG00615 #> 318  HG00619 #> 319  HG00620 #> 320  HG00621 #> 321  HG00622 #> 322  HG00623 #> 323  HG00624 #> 324  HG00625 #> 325  HG00626 #> 326  HG00627 #> 327  HG00628 #> 328  HG00629 #> 329  HG00630 #> 330  HG00631 #> 331  HG00632 #> 332  HG00633 #> 333  HG00634 #> 334  HG00635 #> 335  HG00636 #> 336  HG00637 #> 337  HG00638 #> 338  HG00639 #> 339  HG00640 #> 340  HG00641 #> 341  HG00642 #> 342  HG00650 #> 343  HG00651 #> 344  HG00652 #> 345  HG00653 #> 346  HG00654 #> 347  HG00655 #> 348  HG00656 #> 349  HG00657 #> 350  HG00658 #> 351  HG00662 #> 352  HG00663 #> 353  HG00664 #> 354  HG00671 #> 355  HG00672 #> 356  HG00673 #> 357  HG00674 #> 358  HG00675 #> 359  HG00676 #> 360  HG00683 #> 361  HG00684 #> 362  HG00685 #> 363  HG00689 #> 364  HG00690 #> 365  HG00691 #> 366  HG00692 #> 367  HG00693 #> 368  HG00694 #> 369  HG00698 #> 370  HG00699 #> 371  HG00700 #> 372  HG00701 #> 373  HG00702 #> 374  HG00703 #> 375  HG00704 #> 376  HG00705 #> 377  HG00706 #> 378  HG00707 #> 379  HG00708 #> 380  HG00709 #> 381  HG00716 #> 382  HG00717 #> 383  HG00718 #> 384  HG00728 #> 385  HG00729 #> 386  HG00730 #> 387  HG00731 #> 388  HG00732 #> 389  HG00733 #> 390  HG00734 #> 391  HG00735 #> 392  HG00736 #> 393  HG00737 #> 394  HG00738 #> 395  HG00739 #> 396  HG00740 #> 397  HG00741 #> 398  HG00742 #> 399  HG00743 #> 400  HG00759 #> 401  HG00766 #> 402  HG00844 #> 403  HG00851 #> 404  HG00864 #> 405  HG00866 #> 406  HG00867 #> 407  HG00879 #> 408  HG00881 #> 409  HG00956 #> 410  HG00978 #> 411  HG00982 #> 412  HG00983 #> 413  HG01028 #> 414  HG01029 #> 415  HG01031 #> 416  HG01046 #> 417  HG01047 #> 418  HG01048 #> 419  HG01049 #> 420  HG01050 #> 421  HG01051 #> 422  HG01052 #> 423  HG01053 #> 424  HG01054 #> 425  HG01055 #> 426  HG01056 #> 427  HG01058 #> 428  HG01060 #> 429  HG01061 #> 430  HG01062 #> 431  HG01063 #> 432  HG01064 #> 433  HG01066 #> 434  HG01067 #> 435  HG01068 #> 436  HG01069 #> 437  HG01070 #> 438  HG01071 #> 439  HG01072 #> 440  HG01073 #> 441  HG01074 #> 442  HG01075 #> 443  HG01077 #> 444  HG01079 #> 445  HG01080 #> 446  HG01081 #> 447  HG01082 #> 448  HG01083 #> 449  HG01084 #> 450  HG01085 #> 451  HG01086 #> 452  HG01087 #> 453  HG01088 #> 454  HG01089 #> 455  HG01090 #> 456  HG01092 #> 457  HG01094 #> 458  HG01095 #> 459  HG01096 #> 460  HG01097 #> 461  HG01098 #> 462  HG01099 #> 463  HG01100 #> 464  HG01101 #> 465  HG01102 #> 466  HG01103 #> 467  HG01104 #> 468  HG01105 #> 469  HG01106 #> 470  HG01107 #> 471  HG01108 #> 472  HG01109 #> 473  HG01110 #> 474  HG01111 #> 475  HG01112 #> 476  HG01113 #> 477  HG01114 #> 478  HG01119 #> 479  HG01121 #> 480  HG01122 #> 481  HG01123 #> 482  HG01124 #> 483  HG01125 #> 484  HG01126 #> 485  HG01130 #> 486  HG01131 #> 487  HG01133 #> 488  HG01134 #> 489  HG01135 #> 490  HG01136 #> 491  HG01137 #> 492  HG01138 #> 493  HG01139 #> 494  HG01140 #> 495  HG01141 #> 496  HG01142 #> 497  HG01148 #> 498  HG01149 #> 499  HG01150 #> 500  HG01161 #> 501  HG01162 #> 502  HG01164 #> 503  HG01167 #> 504  HG01168 #> 505  HG01169 #> 506  HG01170 #> 507  HG01171 #> 508  HG01172 #> 509  HG01173 #> 510  HG01174 #> 511  HG01175 #> 512  HG01176 #> 513  HG01177 #> 514  HG01178 #> 515  HG01182 #> 516  HG01183 #> 517  HG01184 #> 518  HG01187 #> 519  HG01188 #> 520  HG01189 #> 521  HG01190 #> 522  HG01191 #> 523  HG01192 #> 524  HG01195 #> 525  HG01197 #> 526  HG01198 #> 527  HG01199 #> 528  HG01200 #> 529  HG01204 #> 530  HG01205 #> 531  HG01206 #> 532  HG01241 #> 533  HG01242 #> 534  HG01243 #> 535  HG01247 #> 536  HG01248 #> 537  HG01249 #> 538  HG01250 #> 539  HG01251 #> 540  HG01252 #> 541  HG01253 #> 542  HG01254 #> 543  HG01255 #> 544  HG01256 #> 545  HG01257 #> 546  HG01258 #> 547  HG01259 #> 548  HG01260 #> 549  HG01261 #> 550  HG01269 #> 551  HG01271 #> 552  HG01272 #> 553  HG01273 #> 554  HG01274 #> 555  HG01275 #> 556  HG01276 #> 557  HG01277 #> 558  HG01278 #> 559  HG01279 #> 560  HG01280 #> 561  HG01281 #> 562  HG01284 #> 563  HG01286 #> 564  HG01301 #> 565  HG01302 #> 566  HG01303 #> 567  HG01305 #> 568  HG01308 #> 569  HG01311 #> 570  HG01312 #> 571  HG01322 #> 572  HG01323 #> 573  HG01324 #> 574  HG01325 #> 575  HG01326 #> 576  HG01327 #> 577  HG01334 #> 578  HG01341 #> 579  HG01342 #> 580  HG01343 #> 581  HG01344 #> 582  HG01345 #> 583  HG01346 #> 584  HG01347 #> 585  HG01348 #> 586  HG01349 #> 587  HG01350 #> 588  HG01351 #> 589  HG01352 #> 590  HG01353 #> 591  HG01354 #> 592  HG01355 #> 593  HG01356 #> 594  HG01357 #> 595  HG01358 #> 596  HG01359 #> 597  HG01360 #> 598  HG01361 #> 599  HG01362 #> 600  HG01363 #> 601  HG01364 #> 602  HG01365 #> 603  HG01366 #> 604  HG01367 #> 605  HG01369 #> 606  HG01372 #> 607  HG01374 #> 608  HG01375 #> 609  HG01376 #> 610  HG01377 #> 611  HG01378 #> 612  HG01379 #> 613  HG01383 #> 614  HG01384 #> 615  HG01385 #> 616  HG01389 #> 617  HG01390 #> 618  HG01391 #> 619  HG01392 #> 620  HG01393 #> 621  HG01394 #> 622  HG01395 #> 623  HG01396 #> 624  HG01397 #> 625  HG01398 #> 626  HG01402 #> 627  HG01403 #> 628  HG01404 #> 629  HG01405 #> 630  HG01411 #> 631  HG01412 #> 632  HG01413 #> 633  HG01414 #> 634  HG01415 #> 635  HG01431 #> 636  HG01432 #> 637  HG01433 #> 638  HG01435 #> 639  HG01437 #> 640  HG01438 #> 641  HG01439 #> 642  HG01440 #> 643  HG01441 #> 644  HG01442 #> 645  HG01443 #> 646  HG01444 #> 647  HG01445 #> 648  HG01447 #> 649  HG01452 #> 650  HG01453 #> 651  HG01454 #> 652  HG01455 #> 653  HG01456 #> 654  HG01457 #> 655  HG01459 #> 656  HG01461 #> 657  HG01462 #> 658  HG01463 #> 659  HG01464 #> 660  HG01465 #> 661  HG01466 #> 662  HG01468 #> 663  HG01471 #> 664  HG01473 #> 665  HG01474 #> 666  HG01477 #> 667  HG01479 #> 668  HG01480 #> 669  HG01481 #> 670  HG01482 #> 671  HG01483 #> 672  HG01484 #> 673  HG01485 #> 674  HG01486 #> 675  HG01487 #> 676  HG01488 #> 677  HG01489 #> 678  HG01490 #> 679  HG01491 #> 680  HG01492 #> 681  HG01493 #> 682  HG01494 #> 683  HG01495 #> 684  HG01496 #> 685  HG01497 #> 686  HG01498 #> 687  HG01499 #> 688  HG01500 #> 689  HG01501 #> 690  HG01502 #> 691  HG01503 #> 692  HG01504 #> 693  HG01505 #> 694  HG01506 #> 695  HG01507 #> 696  HG01508 #> 697  HG01509 #> 698  HG01510 #> 699  HG01511 #> 700  HG01512 #> 701  HG01513 #> 702  HG01514 #> 703  HG01515 #> 704  HG01516 #> 705  HG01517 #> 706  HG01518 #> 707  HG01519 #> 708  HG01520 #> 709  HG01521 #> 710  HG01522 #> 711  HG01523 #> 712  HG01524 #> 713  HG01525 #> 714  HG01526 #> 715  HG01527 #> 716  HG01528 #> 717  HG01529 #> 718  HG01530 #> 719  HG01531 #> 720  HG01532 #> 721  HG01536 #> 722  HG01537 #> 723  HG01538 #> 724  HG01550 #> 725  HG01551 #> 726  HG01552 #> 727  HG01556 #> 728  HG01565 #> 729  HG01566 #> 730  HG01567 #> 731  HG01571 #> 732  HG01572 #> 733  HG01573 #> 734  HG01577 #> 735  HG01578 #> 736  HG01579 #> 737  HG01583 #> 738  HG01586 #> 739  HG01589 #> 740  HG01590 #> 741  HG01593 #> 742  HG01594 #> 743  HG01595 #> 744  HG01596 #> 745  HG01597 #> 746  HG01598 #> 747  HG01599 #> 748  HG01600 #> 749  HG01601 #> 750  HG01602 #> 751  HG01603 #> 752  HG01604 #> 753  HG01605 #> 754  HG01606 #> 755  HG01607 #> 756  HG01608 #> 757  HG01609 #> 758  HG01610 #> 759  HG01611 #> 760  HG01612 #> 761  HG01613 #> 762  HG01614 #> 763  HG01615 #> 764  HG01616 #> 765  HG01617 #> 766  HG01618 #> 767  HG01619 #> 768  HG01620 #> 769  HG01621 #> 770  HG01622 #> 771  HG01623 #> 772  HG01624 #> 773  HG01625 #> 774  HG01626 #> 775  HG01627 #> 776  HG01628 #> 777  HG01629 #> 778  HG01630 #> 779  HG01631 #> 780  HG01632 #> 781  HG01633 #> 782  HG01667 #> 783  HG01668 #> 784  HG01669 #> 785  HG01670 #> 786  HG01671 #> 787  HG01672 #> 788  HG01673 #> 789  HG01674 #> 790  HG01675 #> 791  HG01676 #> 792  HG01677 #> 793  HG01678 #> 794  HG01679 #> 795  HG01680 #> 796  HG01681 #> 797  HG01682 #> 798  HG01683 #> 799  HG01684 #> 800  HG01685 #> 801  HG01686 #> 802  HG01687 #> 803  HG01694 #> 804  HG01695 #> 805  HG01696 #> 806  HG01697 #> 807  HG01698 #> 808  HG01699 #> 809  HG01700 #> 810  HG01701 #> 811  HG01702 #> 812  HG01703 #> 813  HG01704 #> 814  HG01705 #> 815  HG01706 #> 816  HG01707 #> 817  HG01708 #> 818  HG01709 #> 819  HG01710 #> 820  HG01711 #> 821  HG01746 #> 822  HG01747 #> 823  HG01748 #> 824  HG01755 #> 825  HG01756 #> 826  HG01757 #> 827  HG01761 #> 828  HG01762 #> 829  HG01763 #> 830  HG01764 #> 831  HG01765 #> 832  HG01766 #> 833  HG01767 #> 834  HG01768 #> 835  HG01769 #> 836  HG01770 #> 837  HG01771 #> 838  HG01772 #> 839  HG01773 #> 840  HG01774 #> 841  HG01775 #> 842  HG01776 #> 843  HG01777 #> 844  HG01778 #> 845  HG01779 #> 846  HG01780 #> 847  HG01781 #> 848  HG01782 #> 849  HG01783 #> 850  HG01784 #> 851  HG01785 #> 852  HG01786 #> 853  HG01787 #> 854  HG01789 #> 855  HG01790 #> 856  HG01791 #> 857  HG01794 #> 858  HG01795 #> 859  HG01796 #> 860  HG01797 #> 861  HG01798 #> 862  HG01799 #> 863  HG01800 #> 864  HG01801 #> 865  HG01802 #> 866  HG01804 #> 867  HG01805 #> 868  HG01806 #> 869  HG01807 #> 870  HG01808 #> 871  HG01809 #> 872  HG01810 #> 873  HG01811 #> 874  HG01812 #> 875  HG01813 #> 876  HG01815 #> 877  HG01816 #> 878  HG01817 #> 879  HG01840 #> 880  HG01841 #> 881  HG01842 #> 882  HG01843 #> 883  HG01844 #> 884  HG01845 #> 885  HG01846 #> 886  HG01847 #> 887  HG01848 #> 888  HG01849 #> 889  HG01850 #> 890  HG01851 #> 891  HG01852 #> 892  HG01853 #> 893  HG01855 #> 894  HG01857 #> 895  HG01858 #> 896  HG01859 #> 897  HG01860 #> 898  HG01861 #> 899  HG01862 #> 900  HG01863 #> 901  HG01864 #> 902  HG01865 #> 903  HG01866 #> 904  HG01867 #> 905  HG01868 #> 906  HG01869 #> 907  HG01870 #> 908  HG01871 #> 909  HG01872 #> 910  HG01873 #> 911  HG01874 #> 912  HG01878 #> 913  HG01879 #> 914  HG01880 #> 915  HG01881 #> 916  HG01882 #> 917  HG01883 #> 918  HG01884 #> 919  HG01885 #> 920  HG01886 #> 921  HG01887 #> 922  HG01888 #> 923  HG01889 #> 924  HG01890 #> 925  HG01891 #> 926  HG01892 #> 927  HG01893 #> 928  HG01894 #> 929  HG01895 #> 930  HG01896 #> 931  HG01897 #> 932  HG01898 #> 933  HG01912 #> 934  HG01914 #> 935  HG01915 #> 936  HG01916 #> 937  HG01917 #> 938  HG01918 #> 939  HG01919 #> 940  HG01920 #> 941  HG01921 #> 942  HG01922 #> 943  HG01923 #> 944  HG01924 #> 945  HG01925 #> 946  HG01926 #> 947  HG01927 #> 948  HG01928 #> 949  HG01932 #> 950  HG01933 #> 951  HG01934 #> 952  HG01935 #> 953  HG01936 #> 954  HG01937 #> 955  HG01938 #> 956  HG01939 #> 957  HG01940 #> 958  HG01941 #> 959  HG01942 #> 960  HG01943 #> 961  HG01944 #> 962  HG01945 #> 963  HG01946 #> 964  HG01947 #> 965  HG01948 #> 966  HG01949 #> 967  HG01950 #> 968  HG01951 #> 969  HG01952 #> 970  HG01953 #> 971  HG01954 #> 972  HG01955 #> 973  HG01956 #> 974  HG01958 #> 975  HG01959 #> 976  HG01960 #> 977  HG01961 #> 978  HG01965 #> 979  HG01967 #> 980  HG01968 #> 981  HG01969 #> 982  HG01970 #> 983  HG01971 #> 984  HG01972 #> 985  HG01973 #> 986  HG01974 #> 987  HG01975 #> 988  HG01976 #> 989  HG01977 #> 990  HG01978 #> 991  HG01979 #> 992  HG01980 #> 993  HG01981 #> 994  HG01982 #> 995  HG01983 #> 996  HG01984 #> 997  HG01985 #> 998  HG01986 #> 999  HG01987 #> 1000 HG01988 #> 1001 HG01989 #> 1002 HG01990 #> 1003 HG01991 #> 1004 HG01992 #> 1005 HG01993 #> 1006 HG01995 #> 1007 HG01997 #> 1008 HG01998 #> 1009 HG02002 #> 1010 HG02003 #> 1011 HG02004 #> 1012 HG02006 #> 1013 HG02008 #> 1014 HG02009 #> 1015 HG02010 #> 1016 HG02011 #> 1017 HG02012 #> 1018 HG02013 #> 1019 HG02014 #> 1020 HG02015 #> 1021 HG02016 #> 1022 HG02017 #> 1023 HG02018 #> 1024 HG02019 #> 1025 HG02020 #> 1026 HG02021 #> 1027 HG02023 #> 1028 HG02024 #> 1029 HG02025 #> 1030 HG02026 #> 1031 HG02027 #> 1032 HG02028 #> 1033 HG02029 #> 1034 HG02030 #> 1035 HG02031 #> 1036 HG02032 #> 1037 HG02035 #> 1038 HG02040 #> 1039 HG02046 #> 1040 HG02047 #> 1041 HG02048 #> 1042 HG02049 #> 1043 HG02050 #> 1044 HG02051 #> 1045 HG02052 #> 1046 HG02053 #> 1047 HG02054 #> 1048 HG02055 #> 1049 HG02056 #> 1050 HG02057 #> 1051 HG02058 #> 1052 HG02059 #> 1053 HG02060 #> 1054 HG02061 #> 1055 HG02064 #> 1056 HG02067 #> 1057 HG02068 #> 1058 HG02069 #> 1059 HG02070 #> 1060 HG02071 #> 1061 HG02072 #> 1062 HG02073 #> 1063 HG02074 #> 1064 HG02075 #> 1065 HG02076 #> 1066 HG02077 #> 1067 HG02078 #> 1068 HG02079 #> 1069 HG02080 #> 1070 HG02081 #> 1071 HG02082 #> 1072 HG02083 #> 1073 HG02084 #> 1074 HG02085 #> 1075 HG02086 #> 1076 HG02087 #> 1077 HG02088 #> 1078 HG02089 #> 1079 HG02090 #> 1080 HG02091 #> 1081 HG02095 #> 1082 HG02102 #> 1083 HG02104 #> 1084 HG02105 #> 1085 HG02106 #> 1086 HG02107 #> 1087 HG02108 #> 1088 HG02111 #> 1089 HG02113 #> 1090 HG02116 #> 1091 HG02120 #> 1092 HG02121 #> 1093 HG02122 #> 1094 HG02126 #> 1095 HG02127 #> 1096 HG02128 #> 1097 HG02129 #> 1098 HG02130 #> 1099 HG02131 #> 1100 HG02132 #> 1101 HG02133 #> 1102 HG02134 #> 1103 HG02135 #> 1104 HG02136 #> 1105 HG02137 #> 1106 HG02138 #> 1107 HG02139 #> 1108 HG02140 #> 1109 HG02141 #> 1110 HG02142 #> 1111 HG02143 #> 1112 HG02144 #> 1113 HG02145 #> 1114 HG02146 #> 1115 HG02147 #> 1116 HG02148 #> 1117 HG02150 #> 1118 HG02151 #> 1119 HG02152 #> 1120 HG02153 #> 1121 HG02154 #> 1122 HG02155 #> 1123 HG02156 #> 1124 HG02164 #> 1125 HG02165 #> 1126 HG02166 #> 1127 HG02168 #> 1128 HG02169 #> 1129 HG02170 #> 1130 HG02173 #> 1131 HG02176 #> 1132 HG02178 #> 1133 HG02179 #> 1134 HG02180 #> 1135 HG02181 #> 1136 HG02182 #> 1137 HG02184 #> 1138 HG02185 #> 1139 HG02186 #> 1140 HG02187 #> 1141 HG02188 #> 1142 HG02189 #> 1143 HG02190 #> 1144 HG02215 #> 1145 HG02217 #> 1146 HG02218 #> 1147 HG02219 #> 1148 HG02220 #> 1149 HG02221 #> 1150 HG02222 #> 1151 HG02223 #> 1152 HG02224 #> 1153 HG02225 #> 1154 HG02229 #> 1155 HG02230 #> 1156 HG02231 #> 1157 HG02232 #> 1158 HG02233 #> 1159 HG02234 #> 1160 HG02235 #> 1161 HG02236 #> 1162 HG02237 #> 1163 HG02238 #> 1164 HG02239 #> 1165 HG02240 #> 1166 HG02250 #> 1167 HG02252 #> 1168 HG02253 #> 1169 HG02254 #> 1170 HG02255 #> 1171 HG02256 #> 1172 HG02257 #> 1173 HG02258 #> 1174 HG02259 #> 1175 HG02260 #> 1176 HG02261 #> 1177 HG02262 #> 1178 HG02265 #> 1179 HG02266 #> 1180 HG02267 #> 1181 HG02271 #> 1182 HG02272 #> 1183 HG02273 #> 1184 HG02274 #> 1185 HG02275 #> 1186 HG02276 #> 1187 HG02277 #> 1188 HG02278 #> 1189 HG02279 #> 1190 HG02280 #> 1191 HG02281 #> 1192 HG02282 #> 1193 HG02283 #> 1194 HG02284 #> 1195 HG02285 #> 1196 HG02286 #> 1197 HG02287 #> 1198 HG02288 #> 1199 HG02291 #> 1200 HG02292 #> 1201 HG02293 #> 1202 HG02298 #> 1203 HG02299 #> 1204 HG02300 #> 1205 HG02301 #> 1206 HG02302 #> 1207 HG02303 #> 1208 HG02304 #> 1209 HG02307 #> 1210 HG02308 #> 1211 HG02309 #> 1212 HG02312 #> 1213 HG02314 #> 1214 HG02315 #> 1215 HG02316 #> 1216 HG02317 #> 1217 HG02318 #> 1218 HG02321 #> 1219 HG02322 #> 1220 HG02323 #> 1221 HG02325 #> 1222 HG02330 #> 1223 HG02332 #> 1224 HG02334 #> 1225 HG02337 #> 1226 HG02339 #> 1227 HG02343 #> 1228 HG02344 #> 1229 HG02345 #> 1230 HG02347 #> 1231 HG02348 #> 1232 HG02351 #> 1233 HG02353 #> 1234 HG02355 #> 1235 HG02356 #> 1236 HG02358 #> 1237 HG02360 #> 1238 HG02363 #> 1239 HG02364 #> 1240 HG02367 #> 1241 HG02371 #> 1242 HG02372 #> 1243 HG02373 #> 1244 HG02374 #> 1245 HG02375 #> 1246 HG02377 #> 1247 HG02379 #> 1248 HG02380 #> 1249 HG02381 #> 1250 HG02382 #> 1251 HG02383 #> 1252 HG02384 #> 1253 HG02385 #> 1254 HG02386 #> 1255 HG02387 #> 1256 HG02388 #> 1257 HG02389 #> 1258 HG02390 #> 1259 HG02391 #> 1260 HG02392 #> 1261 HG02394 #> 1262 HG02395 #> 1263 HG02396 #> 1264 HG02397 #> 1265 HG02398 #> 1266 HG02399 #> 1267 HG02401 #> 1268 HG02402 #> 1269 HG02405 #> 1270 HG02406 #> 1271 HG02407 #> 1272 HG02408 #> 1273 HG02409 #> 1274 HG02410 #> 1275 HG02415 #> 1276 HG02419 #> 1277 HG02420 #> 1278 HG02425 #> 1279 HG02427 #> 1280 HG02428 #> 1281 HG02429 #> 1282 HG02433 #> 1283 HG02436 #> 1284 HG02439 #> 1285 HG02442 #> 1286 HG02445 #> 1287 HG02449 #> 1288 HG02450 #> 1289 HG02451 #> 1290 HG02455 #> 1291 HG02461 #> 1292 HG02462 #> 1293 HG02463 #> 1294 HG02464 #> 1295 HG02465 #> 1296 HG02466 #> 1297 HG02470 #> 1298 HG02471 #> 1299 HG02476 #> 1300 HG02477 #> 1301 HG02478 #> 1302 HG02479 #> 1303 HG02480 #> 1304 HG02481 #> 1305 HG02484 #> 1306 HG02485 #> 1307 HG02486 #> 1308 HG02489 #> 1309 HG02490 #> 1310 HG02491 #> 1311 HG02492 #> 1312 HG02493 #> 1313 HG02494 #> 1314 HG02495 #> 1315 HG02496 #> 1316 HG02497 #> 1317 HG02501 #> 1318 HG02502 #> 1319 HG02505 #> 1320 HG02508 #> 1321 HG02511 #> 1322 HG02512 #> 1323 HG02513 #> 1324 HG02514 #> 1325 HG02521 #> 1326 HG02522 #> 1327 HG02523 #> 1328 HG02524 #> 1329 HG02525 #> 1330 HG02526 #> 1331 HG02536 #> 1332 HG02537 #> 1333 HG02541 #> 1334 HG02545 #> 1335 HG02546 #> 1336 HG02547 #> 1337 HG02549 #> 1338 HG02554 #> 1339 HG02555 #> 1340 HG02557 #> 1341 HG02558 #> 1342 HG02559 #> 1343 HG02561 #> 1344 HG02562 #> 1345 HG02563 #> 1346 HG02567 #> 1347 HG02568 #> 1348 HG02569 #> 1349 HG02570 #> 1350 HG02571 #> 1351 HG02572 #> 1352 HG02573 #> 1353 HG02574 #> 1354 HG02575 #> 1355 HG02577 #> 1356 HG02580 #> 1357 HG02582 #> 1358 HG02583 #> 1359 HG02584 #> 1360 HG02585 #> 1361 HG02586 #> 1362 HG02587 #> 1363 HG02588 #> 1364 HG02589 #> 1365 HG02590 #> 1366 HG02594 #> 1367 HG02595 #> 1368 HG02596 #> 1369 HG02597 #> 1370 HG02599 #> 1371 HG02600 #> 1372 HG02601 #> 1373 HG02602 #> 1374 HG02603 #> 1375 HG02604 #> 1376 HG02605 #> 1377 HG02610 #> 1378 HG02611 #> 1379 HG02612 #> 1380 HG02613 #> 1381 HG02614 #> 1382 HG02615 #> 1383 HG02620 #> 1384 HG02621 #> 1385 HG02622 #> 1386 HG02623 #> 1387 HG02624 #> 1388 HG02625 #> 1389 HG02628 #> 1390 HG02629 #> 1391 HG02630 #> 1392 HG02634 #> 1393 HG02635 #> 1394 HG02636 #> 1395 HG02642 #> 1396 HG02643 #> 1397 HG02644 #> 1398 HG02645 #> 1399 HG02646 #> 1400 HG02647 #> 1401 HG02648 #> 1402 HG02649 #> 1403 HG02650 #> 1404 HG02651 #> 1405 HG02652 #> 1406 HG02653 #> 1407 HG02654 #> 1408 HG02655 #> 1409 HG02656 #> 1410 HG02657 #> 1411 HG02658 #> 1412 HG02659 #> 1413 HG02660 #> 1414 HG02661 #> 1415 HG02662 #> 1416 HG02666 #> 1417 HG02667 #> 1418 HG02668 #> 1419 HG02675 #> 1420 HG02676 #> 1421 HG02677 #> 1422 HG02678 #> 1423 HG02679 #> 1424 HG02680 #> 1425 HG02681 #> 1426 HG02682 #> 1427 HG02683 #> 1428 HG02684 #> 1429 HG02685 #> 1430 HG02686 #> 1431 HG02687 #> 1432 HG02688 #> 1433 HG02689 #> 1434 HG02690 #> 1435 HG02691 #> 1436 HG02692 #> 1437 HG02694 #> 1438 HG02696 #> 1439 HG02697 #> 1440 HG02698 #> 1441 HG02699 #> 1442 HG02700 #> 1443 HG02701 #> 1444 HG02702 #> 1445 HG02703 #> 1446 HG02704 #> 1447 HG02715 #> 1448 HG02716 #> 1449 HG02717 #> 1450 HG02721 #> 1451 HG02722 #> 1452 HG02723 #> 1453 HG02724 #> 1454 HG02725 #> 1455 HG02726 #> 1456 HG02727 #> 1457 HG02728 #> 1458 HG02729 #> 1459 HG02731 #> 1460 HG02733 #> 1461 HG02734 #> 1462 HG02735 #> 1463 HG02736 #> 1464 HG02737 #> 1465 HG02738 #> 1466 HG02756 #> 1467 HG02757 #> 1468 HG02758 #> 1469 HG02759 #> 1470 HG02760 #> 1471 HG02761 #> 1472 HG02762 #> 1473 HG02763 #> 1474 HG02764 #> 1475 HG02768 #> 1476 HG02769 #> 1477 HG02770 #> 1478 HG02771 #> 1479 HG02772 #> 1480 HG02773 #> 1481 HG02774 #> 1482 HG02775 #> 1483 HG02776 #> 1484 HG02778 #> 1485 HG02779 #> 1486 HG02780 #> 1487 HG02781 #> 1488 HG02783 #> 1489 HG02784 #> 1490 HG02785 #> 1491 HG02786 #> 1492 HG02787 #> 1493 HG02788 #> 1494 HG02789 #> 1495 HG02790 #> 1496 HG02791 #> 1497 HG02792 #> 1498 HG02793 #> 1499 HG02794 #> 1500 HG02798 #> 1501 HG02799 #> 1502 HG02800 #> 1503 HG02804 #> 1504 HG02805 #> 1505 HG02806 #> 1506 HG02807 #> 1507 HG02808 #> 1508 HG02809 #> 1509 HG02810 #> 1510 HG02811 #> 1511 HG02812 #> 1512 HG02813 #> 1513 HG02814 #> 1514 HG02815 #> 1515 HG02816 #> 1516 HG02817 #> 1517 HG02818 #> 1518 HG02819 #> 1519 HG02820 #> 1520 HG02821 #> 1521 HG02836 #> 1522 HG02837 #> 1523 HG02838 #> 1524 HG02839 #> 1525 HG02840 #> 1526 HG02841 #> 1527 HG02851 #> 1528 HG02852 #> 1529 HG02853 #> 1530 HG02854 #> 1531 HG02855 #> 1532 HG02856 #> 1533 HG02860 #> 1534 HG02861 #> 1535 HG02862 #> 1536 HG02869 #> 1537 HG02870 #> 1538 HG02871 #> 1539 HG02878 #> 1540 HG02879 #> 1541 HG02880 #> 1542 HG02881 #> 1543 HG02882 #> 1544 HG02883 #> 1545 HG02884 #> 1546 HG02885 #> 1547 HG02886 #> 1548 HG02887 #> 1549 HG02888 #> 1550 HG02889 #> 1551 HG02890 #> 1552 HG02891 #> 1553 HG02892 #> 1554 HG02895 #> 1555 HG02896 #> 1556 HG02897 #> 1557 HG02922 #> 1558 HG02923 #> 1559 HG02924 #> 1560 HG02938 #> 1561 HG02939 #> 1562 HG02941 #> 1563 HG02942 #> 1564 HG02943 #> 1565 HG02944 #> 1566 HG02945 #> 1567 HG02946 #> 1568 HG02947 #> 1569 HG02948 #> 1570 HG02952 #> 1571 HG02953 #> 1572 HG02954 #> 1573 HG02964 #> 1574 HG02965 #> 1575 HG02966 #> 1576 HG02968 #> 1577 HG02969 #> 1578 HG02970 #> 1579 HG02971 #> 1580 HG02972 #> 1581 HG02973 #> 1582 HG02974 #> 1583 HG02975 #> 1584 HG02976 #> 1585 HG02977 #> 1586 HG02978 #> 1587 HG02979 #> 1588 HG02980 #> 1589 HG02981 #> 1590 HG02982 #> 1591 HG02983 #> 1592 HG02984 #> 1593 HG03006 #> 1594 HG03007 #> 1595 HG03008 #> 1596 HG03009 #> 1597 HG03012 #> 1598 HG03015 #> 1599 HG03016 #> 1600 HG03017 #> 1601 HG03018 #> 1602 HG03019 #> 1603 HG03021 #> 1604 HG03022 #> 1605 HG03023 #> 1606 HG03024 #> 1607 HG03025 #> 1608 HG03026 #> 1609 HG03027 #> 1610 HG03028 #> 1611 HG03029 #> 1612 HG03033 #> 1613 HG03034 #> 1614 HG03035 #> 1615 HG03039 #> 1616 HG03040 #> 1617 HG03041 #> 1618 HG03045 #> 1619 HG03046 #> 1620 HG03047 #> 1621 HG03048 #> 1622 HG03049 #> 1623 HG03050 #> 1624 HG03052 #> 1625 HG03053 #> 1626 HG03054 #> 1627 HG03055 #> 1628 HG03056 #> 1629 HG03057 #> 1630 HG03058 #> 1631 HG03059 #> 1632 HG03060 #> 1633 HG03061 #> 1634 HG03062 #> 1635 HG03063 #> 1636 HG03064 #> 1637 HG03065 #> 1638 HG03066 #> 1639 HG03069 #> 1640 HG03072 #> 1641 HG03073 #> 1642 HG03074 #> 1643 HG03076 #> 1644 HG03077 #> 1645 HG03078 #> 1646 HG03079 #> 1647 HG03080 #> 1648 HG03081 #> 1649 HG03082 #> 1650 HG03084 #> 1651 HG03085 #> 1652 HG03086 #> 1653 HG03088 #> 1654 HG03091 #> 1655 HG03095 #> 1656 HG03096 #> 1657 HG03097 #> 1658 HG03098 #> 1659 HG03099 #> 1660 HG03100 #> 1661 HG03101 #> 1662 HG03103 #> 1663 HG03104 #> 1664 HG03105 #> 1665 HG03107 #> 1666 HG03108 #> 1667 HG03109 #> 1668 HG03110 #> 1669 HG03111 #> 1670 HG03112 #> 1671 HG03113 #> 1672 HG03114 #> 1673 HG03115 #> 1674 HG03116 #> 1675 HG03117 #> 1676 HG03118 #> 1677 HG03119 #> 1678 HG03120 #> 1679 HG03121 #> 1680 HG03122 #> 1681 HG03123 #> 1682 HG03124 #> 1683 HG03125 #> 1684 HG03126 #> 1685 HG03127 #> 1686 HG03128 #> 1687 HG03129 #> 1688 HG03130 #> 1689 HG03131 #> 1690 HG03132 #> 1691 HG03133 #> 1692 HG03134 #> 1693 HG03135 #> 1694 HG03136 #> 1695 HG03137 #> 1696 HG03139 #> 1697 HG03140 #> 1698 HG03157 #> 1699 HG03158 #> 1700 HG03159 #> 1701 HG03160 #> 1702 HG03161 #> 1703 HG03162 #> 1704 HG03163 #> 1705 HG03164 #> 1706 HG03166 #> 1707 HG03167 #> 1708 HG03168 #> 1709 HG03169 #> 1710 HG03170 #> 1711 HG03171 #> 1712 HG03172 #> 1713 HG03173 #> 1714 HG03175 #> 1715 HG03176 #> 1716 HG03189 #> 1717 HG03190 #> 1718 HG03191 #> 1719 HG03193 #> 1720 HG03194 #> 1721 HG03195 #> 1722 HG03196 #> 1723 HG03197 #> 1724 HG03198 #> 1725 HG03199 #> 1726 HG03200 #> 1727 HG03202 #> 1728 HG03203 #> 1729 HG03209 #> 1730 HG03212 #> 1731 HG03224 #> 1732 HG03225 #> 1733 HG03228 #> 1734 HG03229 #> 1735 HG03230 #> 1736 HG03234 #> 1737 HG03235 #> 1738 HG03236 #> 1739 HG03237 #> 1740 HG03238 #> 1741 HG03239 #> 1742 HG03240 #> 1743 HG03241 #> 1744 HG03242 #> 1745 HG03246 #> 1746 HG03247 #> 1747 HG03248 #> 1748 HG03249 #> 1749 HG03250 #> 1750 HG03251 #> 1751 HG03258 #> 1752 HG03259 #> 1753 HG03260 #> 1754 HG03265 #> 1755 HG03266 #> 1756 HG03267 #> 1757 HG03268 #> 1758 HG03269 #> 1759 HG03270 #> 1760 HG03271 #> 1761 HG03272 #> 1762 HG03279 #> 1763 HG03280 #> 1764 HG03291 #> 1765 HG03293 #> 1766 HG03294 #> 1767 HG03295 #> 1768 HG03296 #> 1769 HG03297 #> 1770 HG03298 #> 1771 HG03299 #> 1772 HG03300 #> 1773 HG03301 #> 1774 HG03302 #> 1775 HG03303 #> 1776 HG03304 #> 1777 HG03305 #> 1778 HG03306 #> 1779 HG03307 #> 1780 HG03308 #> 1781 HG03309 #> 1782 HG03310 #> 1783 HG03311 #> 1784 HG03312 #> 1785 HG03313 #> 1786 HG03314 #> 1787 HG03339 #> 1788 HG03341 #> 1789 HG03342 #> 1790 HG03343 #> 1791 HG03344 #> 1792 HG03350 #> 1793 HG03351 #> 1794 HG03352 #> 1795 HG03354 #> 1796 HG03361 #> 1797 HG03362 #> 1798 HG03363 #> 1799 HG03365 #> 1800 HG03366 #> 1801 HG03367 #> 1802 HG03368 #> 1803 HG03369 #> 1804 HG03370 #> 1805 HG03371 #> 1806 HG03372 #> 1807 HG03373 #> 1808 HG03374 #> 1809 HG03376 #> 1810 HG03378 #> 1811 HG03380 #> 1812 HG03381 #> 1813 HG03382 #> 1814 HG03383 #> 1815 HG03384 #> 1816 HG03385 #> 1817 HG03388 #> 1818 HG03390 #> 1819 HG03391 #> 1820 HG03393 #> 1821 HG03394 #> 1822 HG03397 #> 1823 HG03398 #> 1824 HG03399 #> 1825 HG03401 #> 1826 HG03402 #> 1827 HG03408 #> 1828 HG03410 #> 1829 HG03411 #> 1830 HG03419 #> 1831 HG03428 #> 1832 HG03431 #> 1833 HG03432 #> 1834 HG03433 #> 1835 HG03436 #> 1836 HG03437 #> 1837 HG03438 #> 1838 HG03439 #> 1839 HG03442 #> 1840 HG03445 #> 1841 HG03446 #> 1842 HG03449 #> 1843 HG03450 #> 1844 HG03451 #> 1845 HG03452 #> 1846 HG03453 #> 1847 HG03454 #> 1848 HG03455 #> 1849 HG03456 #> 1850 HG03457 #> 1851 HG03458 #> 1852 HG03459 #> 1853 HG03460 #> 1854 HG03461 #> 1855 HG03462 #> 1856 HG03464 #> 1857 HG03465 #> 1858 HG03466 #> 1859 HG03468 #> 1860 HG03469 #> 1861 HG03470 #> 1862 HG03471 #> 1863 HG03472 #> 1864 HG03473 #> 1865 HG03474 #> 1866 HG03476 #> 1867 HG03477 #> 1868 HG03478 #> 1869 HG03479 #> 1870 HG03480 #> 1871 HG03484 #> 1872 HG03485 #> 1873 HG03486 #> 1874 HG03487 #> 1875 HG03488 #> 1876 HG03489 #> 1877 HG03490 #> 1878 HG03491 #> 1879 HG03492 #> 1880 HG03493 #> 1881 HG03499 #> 1882 HG03508 #> 1883 HG03510 #> 1884 HG03511 #> 1885 HG03513 #> 1886 HG03514 #> 1887 HG03515 #> 1888 HG03516 #> 1889 HG03517 #> 1890 HG03518 #> 1891 HG03519 #> 1892 HG03520 #> 1893 HG03521 #> 1894 HG03522 #> 1895 HG03538 #> 1896 HG03539 #> 1897 HG03540 #> 1898 HG03547 #> 1899 HG03548 #> 1900 HG03549 #> 1901 HG03556 #> 1902 HG03557 #> 1903 HG03558 #> 1904 HG03559 #> 1905 HG03563 #> 1906 HG03564 #> 1907 HG03565 #> 1908 HG03566 #> 1909 HG03567 #> 1910 HG03569 #> 1911 HG03571 #> 1912 HG03572 #> 1913 HG03574 #> 1914 HG03575 #> 1915 HG03576 #> 1916 HG03577 #> 1917 HG03578 #> 1918 HG03579 #> 1919 HG03582 #> 1920 HG03583 #> 1921 HG03584 #> 1922 HG03585 #> 1923 HG03587 #> 1924 HG03589 #> 1925 HG03590 #> 1926 HG03593 #> 1927 HG03594 #> 1928 HG03595 #> 1929 HG03596 #> 1930 HG03598 #> 1931 HG03599 #> 1932 HG03600 #> 1933 HG03602 #> 1934 HG03603 #> 1935 HG03604 #> 1936 HG03605 #> 1937 HG03606 #> 1938 HG03607 #> 1939 HG03611 #> 1940 HG03615 #> 1941 HG03616 #> 1942 HG03617 #> 1943 HG03618 #> 1944 HG03619 #> 1945 HG03620 #> 1946 HG03621 #> 1947 HG03624 #> 1948 HG03625 #> 1949 HG03626 #> 1950 HG03629 #> 1951 HG03631 #> 1952 HG03633 #> 1953 HG03634 #> 1954 HG03635 #> 1955 HG03636 #> 1956 HG03638 #> 1957 HG03639 #> 1958 HG03640 #> 1959 HG03641 #> 1960 HG03642 #> 1961 HG03643 #> 1962 HG03644 #> 1963 HG03645 #> 1964 HG03646 #> 1965 HG03649 #> 1966 HG03650 #> 1967 HG03651 #> 1968 HG03652 #> 1969 HG03653 #> 1970 HG03654 #> 1971 HG03656 #> 1972 HG03657 #> 1973 HG03660 #> 1974 HG03663 #> 1975 HG03667 #> 1976 HG03668 #> 1977 HG03669 #> 1978 HG03672 #> 1979 HG03673 #> 1980 HG03679 #> 1981 HG03680 #> 1982 HG03681 #> 1983 HG03682 #> 1984 HG03683 #> 1985 HG03684 #> 1986 HG03685 #> 1987 HG03686 #> 1988 HG03687 #> 1989 HG03688 #> 1990 HG03689 #> 1991 HG03690 #> 1992 HG03691 #> 1993 HG03692 #> 1994 HG03693 #> 1995 HG03694 #> 1996 HG03695 #> 1997 HG03696 #> 1998 HG03697 #> 1999 HG03698 #> 2000 HG03699 #> 2001 HG03700 #> 2002 HG03701 #> 2003 HG03702 #> 2004 HG03703 #> 2005 HG03704 #> 2006 HG03705 #> 2007 HG03706 #> 2008 HG03707 #> 2009 HG03708 #> 2010 HG03709 #> 2011 HG03710 #> 2012 HG03711 #> 2013 HG03713 #> 2014 HG03714 #> 2015 HG03715 #> 2016 HG03716 #> 2017 HG03717 #> 2018 HG03718 #> 2019 HG03719 #> 2020 HG03720 #> 2021 HG03721 #> 2022 HG03722 #> 2023 HG03723 #> 2024 HG03725 #> 2025 HG03727 #> 2026 HG03729 #> 2027 HG03730 #> 2028 HG03731 #> 2029 HG03732 #> 2030 HG03733 #> 2031 HG03736 #> 2032 HG03738 #> 2033 HG03740 #> 2034 HG03741 #> 2035 HG03742 #> 2036 HG03743 #> 2037 HG03744 #> 2038 HG03745 #> 2039 HG03746 #> 2040 HG03750 #> 2041 HG03752 #> 2042 HG03753 #> 2043 HG03754 #> 2044 HG03755 #> 2045 HG03756 #> 2046 HG03757 #> 2047 HG03760 #> 2048 HG03761 #> 2049 HG03762 #> 2050 HG03763 #> 2051 HG03765 #> 2052 HG03766 #> 2053 HG03767 #> 2054 HG03769 #> 2055 HG03770 #> 2056 HG03771 #> 2057 HG03772 #> 2058 HG03773 #> 2059 HG03774 #> 2060 HG03775 #> 2061 HG03777 #> 2062 HG03778 #> 2063 HG03779 #> 2064 HG03780 #> 2065 HG03781 #> 2066 HG03782 #> 2067 HG03783 #> 2068 HG03784 #> 2069 HG03785 #> 2070 HG03786 #> 2071 HG03787 #> 2072 HG03788 #> 2073 HG03789 #> 2074 HG03790 #> 2075 HG03792 #> 2076 HG03793 #> 2077 HG03794 #> 2078 HG03795 #> 2079 HG03796 #> 2080 HG03797 #> 2081 HG03798 #> 2082 HG03799 #> 2083 HG03800 #> 2084 HG03801 #> 2085 HG03802 #> 2086 HG03803 #> 2087 HG03804 #> 2088 HG03805 #> 2089 HG03806 #> 2090 HG03807 #> 2091 HG03808 #> 2092 HG03809 #> 2093 HG03811 #> 2094 HG03812 #> 2095 HG03813 #> 2096 HG03814 #> 2097 HG03815 #> 2098 HG03816 #> 2099 HG03817 #> 2100 HG03821 #> 2101 HG03822 #> 2102 HG03823 #> 2103 HG03824 #> 2104 HG03825 #> 2105 HG03826 #> 2106 HG03829 #> 2107 HG03830 #> 2108 HG03831 #> 2109 HG03832 #> 2110 HG03833 #> 2111 HG03834 #> 2112 HG03835 #> 2113 HG03836 #> 2114 HG03837 #> 2115 HG03838 #> 2116 HG03840 #> 2117 HG03842 #> 2118 HG03844 #> 2119 HG03845 #> 2120 HG03846 #> 2121 HG03847 #> 2122 HG03848 #> 2123 HG03849 #> 2124 HG03850 #> 2125 HG03851 #> 2126 HG03854 #> 2127 HG03856 #> 2128 HG03857 #> 2129 HG03858 #> 2130 HG03861 #> 2131 HG03862 #> 2132 HG03863 #> 2133 HG03864 #> 2134 HG03866 #> 2135 HG03867 #> 2136 HG03868 #> 2137 HG03869 #> 2138 HG03870 #> 2139 HG03871 #> 2140 HG03872 #> 2141 HG03873 #> 2142 HG03874 #> 2143 HG03875 #> 2144 HG03876 #> 2145 HG03879 #> 2146 HG03882 #> 2147 HG03884 #> 2148 HG03885 #> 2149 HG03886 #> 2150 HG03887 #> 2151 HG03888 #> 2152 HG03890 #> 2153 HG03894 #> 2154 HG03895 #> 2155 HG03896 #> 2156 HG03897 #> 2157 HG03898 #> 2158 HG03899 #> 2159 HG03900 #> 2160 HG03901 #> 2161 HG03902 #> 2162 HG03903 #> 2163 HG03904 #> 2164 HG03905 #> 2165 HG03906 #> 2166 HG03907 #> 2167 HG03908 #> 2168 HG03909 #> 2169 HG03910 #> 2170 HG03911 #> 2171 HG03913 #> 2172 HG03914 #> 2173 HG03915 #> 2174 HG03916 #> 2175 HG03917 #> 2176 HG03919 #> 2177 HG03920 #> 2178 HG03922 #> 2179 HG03924 #> 2180 HG03925 #> 2181 HG03926 #> 2182 HG03927 #> 2183 HG03928 #> 2184 HG03929 #> 2185 HG03930 #> 2186 HG03931 #> 2187 HG03934 #> 2188 HG03937 #> 2189 HG03939 #> 2190 HG03940 #> 2191 HG03941 #> 2192 HG03942 #> 2193 HG03943 #> 2194 HG03944 #> 2195 HG03945 #> 2196 HG03947 #> 2197 HG03948 #> 2198 HG03949 #> 2199 HG03950 #> 2200 HG03951 #> 2201 HG03953 #> 2202 HG03955 #> 2203 HG03960 #> 2204 HG03963 #> 2205 HG03965 #> 2206 HG03967 #> 2207 HG03968 #> 2208 HG03969 #> 2209 HG03971 #> 2210 HG03972 #> 2211 HG03973 #> 2212 HG03974 #> 2213 HG03976 #> 2214 HG03977 #> 2215 HG03978 #> 2216 HG03982 #> 2217 HG03985 #> 2218 HG03986 #> 2219 HG03988 #> 2220 HG03989 #> 2221 HG03990 #> 2222 HG03991 #> 2223 HG03992 #> 2224 HG03995 #> 2225 HG03998 #> 2226 HG03999 #> 2227 HG04001 #> 2228 HG04002 #> 2229 HG04003 #> 2230 HG04006 #> 2231 HG04014 #> 2232 HG04015 #> 2233 HG04017 #> 2234 HG04018 #> 2235 HG04019 #> 2236 HG04020 #> 2237 HG04022 #> 2238 HG04023 #> 2239 HG04024 #> 2240 HG04025 #> 2241 HG04026 #> 2242 HG04029 #> 2243 HG04033 #> 2244 HG04035 #> 2245 HG04036 #> 2246 HG04037 #> 2247 HG04038 #> 2248 HG04039 #> 2249 HG04040 #> 2250 HG04042 #> 2251 HG04047 #> 2252 HG04050 #> 2253 HG04053 #> 2254 HG04054 #> 2255 HG04055 #> 2256 HG04056 #> 2257 HG04058 #> 2258 HG04059 #> 2259 HG04060 #> 2260 HG04061 #> 2261 HG04062 #> 2262 HG04063 #> 2263 HG04067 #> 2264 HG04070 #> 2265 HG04075 #> 2266 HG04076 #> 2267 HG04080 #> 2268 HG04090 #> 2269 HG04093 #> 2270 HG04094 #> 2271 HG04096 #> 2272 HG04098 #> 2273 HG04099 #> 2274 HG04100 #> 2275 HG04106 #> 2276 HG04107 #> 2277 HG04114 #> 2278 HG04115 #> 2279 HG04118 #> 2280 HG04122 #> 2281 HG04127 #> 2282 HG04128 #> 2283 HG04131 #> 2284 HG04132 #> 2285 HG04133 #> 2286 HG04134 #> 2287 HG04135 #> 2288 HG04136 #> 2289 HG04140 #> 2290 HG04141 #> 2291 HG04142 #> 2292 HG04144 #> 2293 HG04146 #> 2294 HG04147 #> 2295 HG04148 #> 2296 HG04149 #> 2297 HG04150 #> 2298 HG04151 #> 2299 HG04152 #> 2300 HG04153 #> 2301 HG04155 #> 2302 HG04156 #> 2303 HG04157 #> 2304 HG04158 #> 2305 HG04159 #> 2306 HG04160 #> 2307 HG04161 #> 2308 HG04162 #> 2309 HG04164 #> 2310 HG04171 #> 2311 HG04173 #> 2312 HG04174 #> 2313 HG04175 #> 2314 HG04176 #> 2315 HG04177 #> 2316 HG04180 #> 2317 HG04181 #> 2318 HG04182 #> 2319 HG04183 #> 2320 HG04184 #> 2321 HG04185 #> 2322 HG04186 #> 2323 HG04187 #> 2324 HG04188 #> 2325 HG04189 #> 2326 HG04191 #> 2327 HG04192 #> 2328 HG04193 #> 2329 HG04194 #> 2330 HG04195 #> 2331 HG04197 #> 2332 HG04198 #> 2333 HG04199 #> 2334 HG04200 #> 2335 HG04202 #> 2336 HG04204 #> 2337 HG04206 #> 2338 HG04208 #> 2339 HG04209 #> 2340 HG04210 #> 2341 HG04211 #> 2342 HG04212 #> 2343 HG04214 #> 2344 HG04215 #> 2345 HG04216 #> 2346 HG04217 #> 2347 HG04219 #> 2348 HG04222 #> 2349 HG04225 #> 2350 HG04227 #> 2351 HG04228 #> 2352 HG04229 #> 2353 HG04235 #> 2354 HG04238 #> 2355 HG04239 #> 2356 HG04301 #> 2357 HG04302 #> 2358 HG04303 #> 2359 NA06984 #> 2360 NA06985 #> 2361 NA06986 #> 2362 NA06989 #> 2363 NA06991 #> 2364 NA06993 #> 2365 NA06994 #> 2366 NA06995 #> 2367 NA06997 #> 2368 NA07000 #> 2369 NA07014 #> 2370 NA07019 #> 2371 NA07022 #> 2372 NA07029 #> 2373 NA07031 #> 2374 NA07034 #> 2375 NA07037 #> 2376 NA07045 #> 2377 NA07048 #> 2378 NA07051 #> 2379 NA07055 #> 2380 NA07056 #> 2381 NA07340 #> 2382 NA07345 #> 2383 NA07346 #> 2384 NA07347 #> 2385 NA07348 #> 2386 NA07349 #> 2387 NA07357 #> 2388 NA07435 #> 2389 NA10830 #> 2390 NA10831 #> 2391 NA10835 #> 2392 NA10836 #> 2393 NA10837 #> 2394 NA10838 #> 2395 NA10839 #> 2396 NA10840 #> 2397 NA10842 #> 2398 NA10843 #> 2399 NA10845 #> 2400 NA10846 #> 2401 NA10847 #> 2402 NA10850 #> 2403 NA10851 #> 2404 NA10852 #> 2405 NA10853 #> 2406 NA10854 #> 2407 NA10855 #> 2408 NA10856 #> 2409 NA10857 #> 2410 NA10859 #> 2411 NA10860 #> 2412 NA10861 #> 2413 NA10863 #> 2414 NA10864 #> 2415 NA10865 #> 2416 NA11829 #> 2417 NA11830 #> 2418 NA11831 #> 2419 NA11832 #> 2420 NA11839 #> 2421 NA11840 #> 2422 NA11843 #> 2423 NA11881 #> 2424 NA11882 #> 2425 NA11891 #> 2426 NA11892 #> 2427 NA11893 #> 2428 NA11894 #> 2429 NA11917 #> 2430 NA11918 #> 2431 NA11919 #> 2432 NA11920 #> 2433 NA11930 #> 2434 NA11931 #> 2435 NA11932 #> 2436 NA11933 #> 2437 NA11992 #> 2438 NA11993 #> 2439 NA11994 #> 2440 NA11995 #> 2441 NA12003 #> 2442 NA12004 #> 2443 NA12005 #> 2444 NA12006 #> 2445 NA12043 #> 2446 NA12044 #> 2447 NA12045 #> 2448 NA12046 #> 2449 NA12056 #> 2450 NA12057 #> 2451 NA12058 #> 2452 NA12144 #> 2453 NA12145 #> 2454 NA12146 #> 2455 NA12154 #> 2456 NA12155 #> 2457 NA12156 #> 2458 NA12234 #> 2459 NA12239 #> 2460 NA12248 #> 2461 NA12249 #> 2462 NA12264 #> 2463 NA12272 #> 2464 NA12273 #> 2465 NA12274 #> 2466 NA12275 #> 2467 NA12282 #> 2468 NA12283 #> 2469 NA12286 #> 2470 NA12287 #> 2471 NA12329 #> 2472 NA12335 #> 2473 NA12336 #> 2474 NA12340 #> 2475 NA12341 #> 2476 NA12342 #> 2477 NA12343 #> 2478 NA12344 #> 2479 NA12347 #> 2480 NA12348 #> 2481 NA12375 #> 2482 NA12376 #> 2483 NA12383 #> 2484 NA12386 #> 2485 NA12399 #> 2486 NA12400 #> 2487 NA12413 #> 2488 NA12414 #> 2489 NA12485 #> 2490 NA12489 #> 2491 NA12546 #> 2492 NA12707 #> 2493 NA12708 #> 2494 NA12716 #> 2495 NA12717 #> 2496 NA12718 #> 2497 NA12739 #> 2498 NA12740 #> 2499 NA12748 #> 2500 NA12749 #> 2501 NA12750 #> 2502 NA12751 #> 2503 NA12752 #> 2504 NA12753 #> 2505 NA12760 #> 2506 NA12761 #> 2507 NA12762 #> 2508 NA12763 #> 2509 NA12766 #> 2510 NA12767 #> 2511 NA12775 #> 2512 NA12776 #> 2513 NA12777 #> 2514 NA12778 #> 2515 NA12801 #> 2516 NA12802 #> 2517 NA12812 #> 2518 NA12813 #> 2519 NA12814 #> 2520 NA12815 #> 2521 NA12817 #> 2522 NA12818 #> 2523 NA12827 #> 2524 NA12828 #> 2525 NA12829 #> 2526 NA12830 #> 2527 NA12832 #> 2528 NA12842 #> 2529 NA12843 #> 2530 NA12864 #> 2531 NA12865 #> 2532 NA12872 #> 2533 NA12873 #> 2534 NA12874 #> 2535 NA12875 #> 2536 NA12877 #> 2537 NA12878 #> 2538 NA12889 #> 2539 NA12890 #> 2540 NA12891 #> 2541 NA12892 #> 2542 NA18484 #> 2543 NA18485 #> 2544 NA18486 #> 2545 NA18487 #> 2546 NA18488 #> 2547 NA18489 #> 2548 NA18497 #> 2549 NA18498 #> 2550 NA18499 #> 2551 NA18500 #> 2552 NA18501 #> 2553 NA18502 #> 2554 NA18503 #> 2555 NA18504 #> 2556 NA18505 #> 2557 NA18506 #> 2558 NA18507 #> 2559 NA18508 #> 2560 NA18509 #> 2561 NA18510 #> 2562 NA18511 #> 2563 NA18515 #> 2564 NA18516 #> 2565 NA18517 #> 2566 NA18518 #> 2567 NA18519 #> 2568 NA18520 #> 2569 NA18521 #> 2570 NA18522 #> 2571 NA18523 #> 2572 NA18525 #> 2573 NA18526 #> 2574 NA18527 #> 2575 NA18528 #> 2576 NA18530 #> 2577 NA18531 #> 2578 NA18532 #> 2579 NA18533 #> 2580 NA18534 #> 2581 NA18535 #> 2582 NA18536 #> 2583 NA18537 #> 2584 NA18538 #> 2585 NA18539 #> 2586 NA18541 #> 2587 NA18542 #> 2588 NA18543 #> 2589 NA18544 #> 2590 NA18545 #> 2591 NA18546 #> 2592 NA18547 #> 2593 NA18548 #> 2594 NA18549 #> 2595 NA18550 #> 2596 NA18552 #> 2597 NA18553 #> 2598 NA18555 #> 2599 NA18557 #> 2600 NA18558 #> 2601 NA18559 #> 2602 NA18560 #> 2603 NA18561 #> 2604 NA18562 #> 2605 NA18563 #> 2606 NA18564 #> 2607 NA18565 #> 2608 NA18566 #> 2609 NA18567 #> 2610 NA18570 #> 2611 NA18571 #> 2612 NA18572 #> 2613 NA18573 #> 2614 NA18574 #> 2615 NA18576 #> 2616 NA18577 #> 2617 NA18579 #> 2618 NA18582 #> 2619 NA18591 #> 2620 NA18592 #> 2621 NA18593 #> 2622 NA18595 #> 2623 NA18596 #> 2624 NA18597 #> 2625 NA18599 #> 2626 NA18602 #> 2627 NA18603 #> 2628 NA18605 #> 2629 NA18606 #> 2630 NA18608 #> 2631 NA18609 #> 2632 NA18610 #> 2633 NA18611 #> 2634 NA18612 #> 2635 NA18613 #> 2636 NA18614 #> 2637 NA18615 #> 2638 NA18616 #> 2639 NA18617 #> 2640 NA18618 #> 2641 NA18619 #> 2642 NA18620 #> 2643 NA18621 #> 2644 NA18622 #> 2645 NA18623 #> 2646 NA18624 #> 2647 NA18625 #> 2648 NA18626 #> 2649 NA18627 #> 2650 NA18628 #> 2651 NA18629 #> 2652 NA18630 #> 2653 NA18631 #> 2654 NA18632 #> 2655 NA18633 #> 2656 NA18634 #> 2657 NA18635 #> 2658 NA18636 #> 2659 NA18637 #> 2660 NA18638 #> 2661 NA18639 #> 2662 NA18640 #> 2663 NA18641 #> 2664 NA18642 #> 2665 NA18643 #> 2666 NA18644 #> 2667 NA18645 #> 2668 NA18646 #> 2669 NA18647 #> 2670 NA18648 #> 2671 NA18740 #> 2672 NA18745 #> 2673 NA18747 #> 2674 NA18748 #> 2675 NA18749 #> 2676 NA18757 #> 2677 NA18791 #> 2678 NA18794 #> 2679 NA18795 #> 2680 NA18852 #> 2681 NA18853 #> 2682 NA18854 #> 2683 NA18855 #> 2684 NA18856 #> 2685 NA18857 #> 2686 NA18858 #> 2687 NA18859 #> 2688 NA18860 #> 2689 NA18861 #> 2690 NA18862 #> 2691 NA18863 #> 2692 NA18864 #> 2693 NA18865 #> 2694 NA18867 #> 2695 NA18868 #> 2696 NA18869 #> 2697 NA18870 #> 2698 NA18871 #> 2699 NA18872 #> 2700 NA18873 #> 2701 NA18874 #> 2702 NA18875 #> 2703 NA18876 #> 2704 NA18877 #> 2705 NA18878 #> 2706 NA18879 #> 2707 NA18881 #> 2708 NA18906 #> 2709 NA18907 #> 2710 NA18908 #> 2711 NA18909 #> 2712 NA18910 #> 2713 NA18911 #> 2714 NA18912 #> 2715 NA18913 #> 2716 NA18914 #> 2717 NA18915 #> 2718 NA18916 #> 2719 NA18917 #> 2720 NA18923 #> 2721 NA18924 #> 2722 NA18925 #> 2723 NA18930 #> 2724 NA18933 #> 2725 NA18934 #> 2726 NA18935 #> 2727 NA18939 #> 2728 NA18940 #> 2729 NA18941 #> 2730 NA18942 #> 2731 NA18943 #> 2732 NA18944 #> 2733 NA18945 #> 2734 NA18946 #> 2735 NA18947 #> 2736 NA18948 #> 2737 NA18949 #> 2738 NA18950 #> 2739 NA18951 #> 2740 NA18952 #> 2741 NA18953 #> 2742 NA18954 #> 2743 NA18955 #> 2744 NA18956 #> 2745 NA18957 #> 2746 NA18959 #> 2747 NA18960 #> 2748 NA18961 #> 2749 NA18962 #> 2750 NA18963 #> 2751 NA18964 #> 2752 NA18965 #> 2753 NA18966 #> 2754 NA18967 #> 2755 NA18968 #> 2756 NA18969 #> 2757 NA18970 #> 2758 NA18971 #> 2759 NA18972 #> 2760 NA18973 #> 2761 NA18974 #> 2762 NA18975 #> 2763 NA18976 #> 2764 NA18977 #> 2765 NA18978 #> 2766 NA18979 #> 2767 NA18980 #> 2768 NA18981 #> 2769 NA18982 #> 2770 NA18983 #> 2771 NA18984 #> 2772 NA18985 #> 2773 NA18986 #> 2774 NA18987 #> 2775 NA18988 #> 2776 NA18989 #> 2777 NA18990 #> 2778 NA18991 #> 2779 NA18992 #> 2780 NA18993 #> 2781 NA18994 #> 2782 NA18995 #> 2783 NA18997 #> 2784 NA18998 #> 2785 NA18999 #> 2786 NA19000 #> 2787 NA19001 #> 2788 NA19002 #> 2789 NA19003 #> 2790 NA19004 #> 2791 NA19005 #> 2792 NA19006 #> 2793 NA19007 #> 2794 NA19009 #> 2795 NA19010 #> 2796 NA19011 #> 2797 NA19012 #> 2798 NA19017 #> 2799 NA19019 #> 2800 NA19020 #> 2801 NA19023 #> 2802 NA19024 #> 2803 NA19025 #> 2804 NA19026 #> 2805 NA19027 #> 2806 NA19028 #> 2807 NA19030 #> 2808 NA19031 #> 2809 NA19035 #> 2810 NA19036 #> 2811 NA19037 #> 2812 NA19038 #> 2813 NA19041 #> 2814 NA19042 #> 2815 NA19043 #> 2816 NA19044 #> 2817 NA19046 #> 2818 NA19054 #> 2819 NA19055 #> 2820 NA19056 #> 2821 NA19057 #> 2822 NA19058 #> 2823 NA19059 #> 2824 NA19060 #> 2825 NA19062 #> 2826 NA19063 #> 2827 NA19064 #> 2828 NA19065 #> 2829 NA19066 #> 2830 NA19067 #> 2831 NA19068 #> 2832 NA19070 #> 2833 NA19072 #> 2834 NA19074 #> 2835 NA19075 #> 2836 NA19076 #> 2837 NA19077 #> 2838 NA19078 #> 2839 NA19079 #> 2840 NA19080 #> 2841 NA19081 #> 2842 NA19082 #> 2843 NA19083 #> 2844 NA19084 #> 2845 NA19085 #> 2846 NA19086 #> 2847 NA19087 #> 2848 NA19088 #> 2849 NA19089 #> 2850 NA19090 #> 2851 NA19091 #> 2852 NA19092 #> 2853 NA19093 #> 2854 NA19094 #> 2855 NA19095 #> 2856 NA19096 #> 2857 NA19097 #> 2858 NA19098 #> 2859 NA19099 #> 2860 NA19100 #> 2861 NA19101 #> 2862 NA19102 #> 2863 NA19103 #> 2864 NA19104 #> 2865 NA19105 #> 2866 NA19107 #> 2867 NA19108 #> 2868 NA19109 #> 2869 NA19113 #> 2870 NA19114 #> 2871 NA19115 #> 2872 NA19116 #> 2873 NA19117 #> 2874 NA19118 #> 2875 NA19119 #> 2876 NA19120 #> 2877 NA19121 #> 2878 NA19122 #> 2879 NA19123 #> 2880 NA19127 #> 2881 NA19128 #> 2882 NA19129 #> 2883 NA19130 #> 2884 NA19131 #> 2885 NA19132 #> 2886 NA19137 #> 2887 NA19138 #> 2888 NA19139 #> 2889 NA19140 #> 2890 NA19141 #> 2891 NA19142 #> 2892 NA19143 #> 2893 NA19144 #> 2894 NA19145 #> 2895 NA19146 #> 2896 NA19147 #> 2897 NA19148 #> 2898 NA19149 #> 2899 NA19150 #> 2900 NA19151 #> 2901 NA19152 #> 2902 NA19153 #> 2903 NA19154 #> 2904 NA19159 #> 2905 NA19160 #> 2906 NA19161 #> 2907 NA19166 #> 2908 NA19171 #> 2909 NA19172 #> 2910 NA19173 #> 2911 NA19174 #> 2912 NA19175 #> 2913 NA19176 #> 2914 NA19177 #> 2915 NA19184 #> 2916 NA19185 #> 2917 NA19186 #> 2918 NA19189 #> 2919 NA19190 #> 2920 NA19191 #> 2921 NA19195 #> 2922 NA19196 #> 2923 NA19197 #> 2924 NA19198 #> 2925 NA19199 #> 2926 NA19200 #> 2927 NA19201 #> 2928 NA19202 #> 2929 NA19203 #> 2930 NA19204 #> 2931 NA19205 #> 2932 NA19206 #> 2933 NA19207 #> 2934 NA19208 #> 2935 NA19209 #> 2936 NA19210 #> 2937 NA19211 #> 2938 NA19213 #> 2939 NA19214 #> 2940 NA19215 #> 2941 NA19221 #> 2942 NA19222 #> 2943 NA19223 #> 2944 NA19224 #> 2945 NA19225 #> 2946 NA19226 #> 2947 NA19235 #> 2948 NA19236 #> 2949 NA19237 #> 2950 NA19238 #> 2951 NA19239 #> 2952 NA19240 #> 2953 NA19247 #> 2954 NA19248 #> 2955 NA19249 #> 2956 NA19252 #> 2957 NA19254 #> 2958 NA19256 #> 2959 NA19257 #> 2960 NA19258 #> 2961 NA19307 #> 2962 NA19308 #> 2963 NA19309 #> 2964 NA19310 #> 2965 NA19311 #> 2966 NA19312 #> 2967 NA19313 #> 2968 NA19314 #> 2969 NA19315 #> 2970 NA19316 #> 2971 NA19317 #> 2972 NA19318 #> 2973 NA19319 #> 2974 NA19320 #> 2975 NA19321 #> 2976 NA19323 #> 2977 NA19324 #> 2978 NA19327 #> 2979 NA19328 #> 2980 NA19331 #> 2981 NA19332 #> 2982 NA19334 #> 2983 NA19338 #> 2984 NA19346 #> 2985 NA19347 #> 2986 NA19350 #> 2987 NA19351 #> 2988 NA19352 #> 2989 NA19355 #> 2990 NA19359 #> 2991 NA19360 #> 2992 NA19371 #> 2993 NA19372 #> 2994 NA19373 #> 2995 NA19374 #> 2996 NA19375 #> 2997 NA19376 #> 2998 NA19377 #> 2999 NA19378 #> 3000 NA19379 #> 3001 NA19380 #> 3002 NA19381 #> 3003 NA19382 #> 3004 NA19383 #> 3005 NA19384 #> 3006 NA19385 #> 3007 NA19390 #> 3008 NA19391 #> 3009 NA19393 #> 3010 NA19394 #> 3011 NA19395 #> 3012 NA19396 #> 3013 NA19397 #> 3014 NA19398 #> 3015 NA19399 #> 3016 NA19401 #> 3017 NA19403 #> 3018 NA19404 #> 3019 NA19428 #> 3020 NA19429 #> 3021 NA19430 #> 3022 NA19431 #> 3023 NA19432 #> 3024 NA19434 #> 3025 NA19435 #> 3026 NA19436 #> 3027 NA19437 #> 3028 NA19438 #> 3029 NA19439 #> 3030 NA19440 #> 3031 NA19443 #> 3032 NA19444 #> 3033 NA19445 #> 3034 NA19446 #> 3035 NA19448 #> 3036 NA19449 #> 3037 NA19451 #> 3038 NA19452 #> 3039 NA19453 #> 3040 NA19454 #> 3041 NA19455 #> 3042 NA19456 #> 3043 NA19457 #> 3044 NA19461 #> 3045 NA19462 #> 3046 NA19463 #> 3047 NA19466 #> 3048 NA19467 #> 3049 NA19468 #> 3050 NA19469 #> 3051 NA19470 #> 3052 NA19471 #> 3053 NA19472 #> 3054 NA19473 #> 3055 NA19474 #> 3056 NA19475 #> 3057 NA19625 #> 3058 NA19648 #> 3059 NA19649 #> 3060 NA19650 #> 3061 NA19651 #> 3062 NA19652 #> 3063 NA19653 #> 3064 NA19654 #> 3065 NA19655 #> 3066 NA19656 #> 3067 NA19657 #> 3068 NA19658 #> 3069 NA19659 #> 3070 NA19660 #> 3071 NA19661 #> 3072 NA19662 #> 3073 NA19663 #> 3074 NA19664 #> 3075 NA19665 #> 3076 NA19669 #> 3077 NA19670 #> 3078 NA19671 #> 3079 NA19672 #> 3080 NA19674 #> 3081 NA19675 #> 3082 NA19676 #> 3083 NA19677 #> 3084 NA19678 #> 3085 NA19679 #> 3086 NA19680 #> 3087 NA19681 #> 3088 NA19682 #> 3089 NA19683 #> 3090 NA19684 #> 3091 NA19685 #> 3092 NA19686 #> 3093 NA19700 #> 3094 NA19701 #> 3095 NA19702 #> 3096 NA19703 #> 3097 NA19704 #> 3098 NA19705 #> 3099 NA19707 #> 3100 NA19708 #> 3101 NA19711 #> 3102 NA19712 #> 3103 NA19713 #> 3104 NA19714 #> 3105 NA19716 #> 3106 NA19717 #> 3107 NA19718 #> 3108 NA19719 #> 3109 NA19720 #> 3110 NA19721 #> 3111 NA19722 #> 3112 NA19723 #> 3113 NA19724 #> 3114 NA19725 #> 3115 NA19726 #> 3116 NA19727 #> 3117 NA19728 #> 3118 NA19729 #> 3119 NA19730 #> 3120 NA19731 #> 3121 NA19732 #> 3122 NA19733 #> 3123 NA19734 #> 3124 NA19735 #> 3125 NA19737 #> 3126 NA19738 #> 3127 NA19740 #> 3128 NA19741 #> 3129 NA19742 #> 3130 NA19746 #> 3131 NA19747 #> 3132 NA19748 #> 3133 NA19749 #> 3134 NA19750 #> 3135 NA19751 #> 3136 NA19752 #> 3137 NA19753 #> 3138 NA19754 #> 3139 NA19755 #> 3140 NA19756 #> 3141 NA19757 #> 3142 NA19758 #> 3143 NA19759 #> 3144 NA19760 #> 3145 NA19761 #> 3146 NA19762 #> 3147 NA19763 #> 3148 NA19764 #> 3149 NA19766 #> 3150 NA19770 #> 3151 NA19771 #> 3152 NA19772 #> 3153 NA19773 #> 3154 NA19774 #> 3155 NA19775 #> 3156 NA19776 #> 3157 NA19777 #> 3158 NA19778 #> 3159 NA19779 #> 3160 NA19780 #> 3161 NA19781 #> 3162 NA19782 #> 3163 NA19783 #> 3164 NA19784 #> 3165 NA19785 #> 3166 NA19786 #> 3167 NA19787 #> 3168 NA19788 #> 3169 NA19789 #> 3170 NA19790 #> 3171 NA19792 #> 3172 NA19794 #> 3173 NA19795 #> 3174 NA19796 #> 3175 NA19797 #> 3176 NA19798 #> 3177 NA19818 #> 3178 NA19819 #> 3179 NA19828 #> 3180 NA19834 #> 3181 NA19835 #> 3182 NA19836 #> 3183 NA19900 #> 3184 NA19901 #> 3185 NA19902 #> 3186 NA19904 #> 3187 NA19905 #> 3188 NA19908 #> 3189 NA19909 #> 3190 NA19913 #> 3191 NA19914 #> 3192 NA19915 #> 3193 NA19916 #> 3194 NA19917 #> 3195 NA19918 #> 3196 NA19919 #> 3197 NA19920 #> 3198 NA19921 #> 3199 NA19922 #> 3200 NA19923 #> 3201 NA19924 #> 3202 NA19982 #> 3203 NA19983 #> 3204 NA19984 #> 3205 NA19985 #> 3206 NA20126 #> 3207 NA20127 #> 3208 NA20128 #> 3209 NA20129 #> 3210 NA20274 #> 3211 NA20276 #> 3212 NA20277 #> 3213 NA20278 #> 3214 NA20279 #> 3215 NA20281 #> 3216 NA20282 #> 3217 NA20284 #> 3218 NA20285 #> 3219 NA20287 #> 3220 NA20288 #> 3221 NA20289 #> 3222 NA20290 #> 3223 NA20291 #> 3224 NA20292 #> 3225 NA20294 #> 3226 NA20295 #> 3227 NA20296 #> 3228 NA20297 #> 3229 NA20298 #> 3230 NA20299 #> 3231 NA20300 #> 3232 NA20301 #> 3233 NA20302 #> 3234 NA20312 #> 3235 NA20313 #> 3236 NA20314 #> 3237 NA20316 #> 3238 NA20317 #> 3239 NA20318 #> 3240 NA20319 #> 3241 NA20320 #> 3242 NA20321 #> 3243 NA20322 #> 3244 NA20332 #> 3245 NA20333 #> 3246 NA20334 #> 3247 NA20335 #> 3248 NA20336 #> 3249 NA20337 #> 3250 NA20339 #> 3251 NA20340 #> 3252 NA20341 #> 3253 NA20342 #> 3254 NA20343 #> 3255 NA20344 #> 3256 NA20345 #> 3257 NA20346 #> 3258 NA20347 #> 3259 NA20348 #> 3260 NA20349 #> 3261 NA20350 #> 3262 NA20351 #> 3263 NA20355 #> 3264 NA20356 #> 3265 NA20357 #> 3266 NA20358 #> 3267 NA20359 #> 3268 NA20360 #> 3269 NA20361 #> 3270 NA20362 #> 3271 NA20363 #> 3272 NA20364 #> 3273 NA20412 #> 3274 NA20413 #> 3275 NA20414 #> 3276 NA20502 #> 3277 NA20503 #> 3278 NA20504 #> 3279 NA20505 #> 3280 NA20506 #> 3281 NA20507 #> 3282 NA20508 #> 3283 NA20509 #> 3284 NA20510 #> 3285 NA20511 #> 3286 NA20512 #> 3287 NA20513 #> 3288 NA20514 #> 3289 NA20515 #> 3290 NA20516 #> 3291 NA20517 #> 3292 NA20518 #> 3293 NA20519 #> 3294 NA20520 #> 3295 NA20521 #> 3296 NA20522 #> 3297 NA20524 #> 3298 NA20525 #> 3299 NA20526 #> 3300 NA20527 #> 3301 NA20528 #> 3302 NA20529 #> 3303 NA20530 #> 3304 NA20531 #> 3305 NA20532 #> 3306 NA20533 #> 3307 NA20534 #> 3308 NA20535 #> 3309 NA20536 #> 3310 NA20537 #> 3311 NA20538 #> 3312 NA20539 #> 3313 NA20540 #> 3314 NA20541 #> 3315 NA20542 #> 3316 NA20543 #> 3317 NA20544 #> 3318 NA20581 #> 3319 NA20582 #> 3320 NA20585 #> 3321 NA20586 #> 3322 NA20587 #> 3323 NA20588 #> 3324 NA20589 #> 3325 NA20752 #> 3326 NA20753 #> 3327 NA20754 #> 3328 NA20755 #> 3329 NA20756 #> 3330 NA20757 #> 3331 NA20758 #> 3332 NA20759 #> 3333 NA20760 #> 3334 NA20761 #> 3335 NA20762 #> 3336 NA20763 #> 3337 NA20764 #> 3338 NA20765 #> 3339 NA20766 #> 3340 NA20767 #> 3341 NA20768 #> 3342 NA20769 #> 3343 NA20770 #> 3344 NA20771 #> 3345 NA20772 #> 3346 NA20773 #> 3347 NA20774 #> 3348 NA20775 #> 3349 NA20778 #> 3350 NA20783 #> 3351 NA20785 #> 3352 NA20786 #> 3353 NA20787 #> 3354 NA20790 #> 3355 NA20792 #> 3356 NA20795 #> 3357 NA20796 #> 3358 NA20797 #> 3359 NA20798 #> 3360 NA20799 #> 3361 NA20800 #> 3362 NA20801 #> 3363 NA20802 #> 3364 NA20803 #> 3365 NA20804 #> 3366 NA20805 #> 3367 NA20806 #> 3368 NA20807 #> 3369 NA20808 #> 3370 NA20809 #> 3371 NA20810 #> 3372 NA20811 #> 3373 NA20812 #> 3374 NA20813 #> 3375 NA20814 #> 3376 NA20815 #> 3377 NA20816 #> 3378 NA20818 #> 3379 NA20819 #> 3380 NA20821 #> 3381 NA20822 #> 3382 NA20826 #> 3383 NA20827 #> 3384 NA20828 #> 3385 NA20829 #> 3386 NA20831 #> 3387 NA20832 #> 3388 NA20845 #> 3389 NA20846 #> 3390 NA20847 #> 3391 NA20849 #> 3392 NA20850 #> 3393 NA20851 #> 3394 NA20852 #> 3395 NA20853 #> 3396 NA20854 #> 3397 NA20856 #> 3398 NA20858 #> 3399 NA20859 #> 3400 NA20861 #> 3401 NA20862 #> 3402 NA20863 #> 3403 NA20864 #> 3404 NA20866 #> 3405 NA20867 #> 3406 NA20868 #> 3407 NA20869 #> 3408 NA20870 #> 3409 NA20871 #> 3410 NA20872 #> 3411 NA20873 #> 3412 NA20874 #> 3413 NA20875 #> 3414 NA20876 #> 3415 NA20877 #> 3416 NA20878 #> 3417 NA20879 #> 3418 NA20881 #> 3419 NA20882 #> 3420 NA20883 #> 3421 NA20884 #> 3422 NA20885 #> 3423 NA20886 #> 3424 NA20887 #> 3425 NA20888 #> 3426 NA20889 #> 3427 NA20890 #> 3428 NA20891 #> 3429 NA20892 #> 3430 NA20893 #> 3431 NA20894 #> 3432 NA20895 #> 3433 NA20896 #> 3434 NA20897 #> 3435 NA20898 #> 3436 NA20899 #> 3437 NA20900 #> 3438 NA20901 #> 3439 NA20902 #> 3440 NA20903 #> 3441 NA20904 #> 3442 NA20905 #> 3443 NA20906 #> 3444 NA20907 #> 3445 NA20908 #> 3446 NA20909 #> 3447 NA20910 #> 3448 NA20911 #> 3449 NA21086 #> 3450 NA21087 #> 3451 NA21088 #> 3452 NA21089 #> 3453 NA21090 #> 3454 NA21091 #> 3455 NA21092 #> 3456 NA21093 #> 3457 NA21094 #> 3458 NA21095 #> 3459 NA21097 #> 3460 NA21098 #> 3461 NA21099 #> 3462 NA21100 #> 3463 NA21101 #> 3464 NA21102 #> 3465 NA21103 #> 3466 NA21104 #> 3467 NA21105 #> 3468 NA21106 #> 3469 NA21107 #> 3470 NA21108 #> 3471 NA21109 #> 3472 NA21110 #> 3473 NA21111 #> 3474 NA21112 #> 3475 NA21113 #> 3476 NA21114 #> 3477 NA21115 #> 3478 NA21116 #> 3479 NA21117 #> 3480 NA21118 #> 3481 NA21119 #> 3482 NA21120 #> 3483 NA21121 #> 3484 NA21122 #> 3485 NA21123 #> 3486 NA21124 #> 3487 NA21125 #> 3488 NA21126 #> 3489 NA21127 #> 3490 NA21128 #> 3491 NA21129 #> 3492 NA21130 #> 3493 NA21133 #> 3494 NA21134 #> 3495 NA21135 #> 3496 NA21137 #> 3497 NA21141 #> 3498 NA21142 #> 3499 NA21143 #> 3500 NA21144 #>"},{"path":"https://github.com/vjcitn/BiocHail/reference/get_key.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 generic for get_key — get_key","title":"S3 generic for get_key — get_key","text":"S3 generic get_key","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/get_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 generic for get_key — get_key","text":"","code":"get_key(x)"},{"path":"https://github.com/vjcitn/BiocHail/reference/get_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 generic for get_key — get_key","text":"x anything","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/get_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 generic for get_key — get_key","text":"typically list","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/get_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 generic for get_key — get_key","text":"","code":"hl <- hail_init() annopath <- path_1kg_annotations() tab <- hl$import_table(annopath, impute = TRUE)$key_by(\"Sample\") get_key(tab) #> $names #> [1] \"Sample\" #>  #> $key_df #>       Sample #> 1    HG00096 #> 2    HG00097 #> 3    HG00098 #> 4    HG00099 #> 5    HG00100 #> 6    HG00101 #> 7    HG00102 #> 8    HG00103 #> 9    HG00104 #> 10   HG00105 #> 11   HG00106 #> 12   HG00107 #> 13   HG00108 #> 14   HG00109 #> 15   HG00110 #> 16   HG00111 #> 17   HG00112 #> 18   HG00113 #> 19   HG00114 #> 20   HG00115 #> 21   HG00116 #> 22   HG00117 #> 23   HG00118 #> 24   HG00119 #> 25   HG00120 #> 26   HG00121 #> 27   HG00122 #> 28   HG00123 #> 29   HG00124 #> 30   HG00125 #> 31   HG00126 #> 32   HG00127 #> 33   HG00128 #> 34   HG00129 #> 35   HG00130 #> 36   HG00131 #> 37   HG00132 #> 38   HG00133 #> 39   HG00134 #> 40   HG00135 #> 41   HG00136 #> 42   HG00137 #> 43   HG00138 #> 44   HG00139 #> 45   HG00140 #> 46   HG00141 #> 47   HG00142 #> 48   HG00143 #> 49   HG00144 #> 50   HG00145 #> 51   HG00146 #> 52   HG00147 #> 53   HG00148 #> 54   HG00149 #> 55   HG00150 #> 56   HG00151 #> 57   HG00152 #> 58   HG00153 #> 59   HG00154 #> 60   HG00155 #> 61   HG00156 #> 62   HG00157 #> 63   HG00158 #> 64   HG00159 #> 65   HG00160 #> 66   HG00171 #> 67   HG00173 #> 68   HG00174 #> 69   HG00176 #> 70   HG00177 #> 71   HG00178 #> 72   HG00179 #> 73   HG00180 #> 74   HG00181 #> 75   HG00182 #> 76   HG00183 #> 77   HG00185 #> 78   HG00186 #> 79   HG00187 #> 80   HG00188 #> 81   HG00189 #> 82   HG00190 #> 83   HG00231 #> 84   HG00232 #> 85   HG00233 #> 86   HG00234 #> 87   HG00235 #> 88   HG00236 #> 89   HG00237 #> 90   HG00238 #> 91   HG00239 #> 92   HG00240 #> 93   HG00242 #> 94   HG00243 #> 95   HG00244 #> 96   HG00245 #> 97   HG00246 #> 98   HG00247 #> 99   HG00248 #> 100  HG00249 #> 101  HG00250 #> 102  HG00251 #> 103  HG00252 #> 104  HG00253 #> 105  HG00254 #> 106  HG00255 #> 107  HG00256 #> 108  HG00257 #> 109  HG00258 #> 110  HG00259 #> 111  HG00260 #> 112  HG00261 #> 113  HG00262 #> 114  HG00263 #> 115  HG00264 #> 116  HG00265 #> 117  HG00266 #> 118  HG00267 #> 119  HG00268 #> 120  HG00269 #> 121  HG00270 #> 122  HG00271 #> 123  HG00272 #> 124  HG00273 #> 125  HG00274 #> 126  HG00275 #> 127  HG00276 #> 128  HG00277 #> 129  HG00278 #> 130  HG00280 #> 131  HG00281 #> 132  HG00282 #> 133  HG00284 #> 134  HG00285 #> 135  HG00288 #> 136  HG00290 #> 137  HG00302 #> 138  HG00303 #> 139  HG00304 #> 140  HG00306 #> 141  HG00308 #> 142  HG00309 #> 143  HG00310 #> 144  HG00311 #> 145  HG00312 #> 146  HG00313 #> 147  HG00315 #> 148  HG00318 #> 149  HG00319 #> 150  HG00320 #> 151  HG00321 #> 152  HG00323 #> 153  HG00324 #> 154  HG00325 #> 155  HG00326 #> 156  HG00327 #> 157  HG00328 #> 158  HG00329 #> 159  HG00330 #> 160  HG00331 #> 161  HG00332 #> 162  HG00334 #> 163  HG00335 #> 164  HG00336 #> 165  HG00337 #> 166  HG00338 #> 167  HG00339 #> 168  HG00341 #> 169  HG00342 #> 170  HG00343 #> 171  HG00344 #> 172  HG00345 #> 173  HG00346 #> 174  HG00349 #> 175  HG00350 #> 176  HG00351 #> 177  HG00353 #> 178  HG00355 #> 179  HG00356 #> 180  HG00357 #> 181  HG00358 #> 182  HG00359 #> 183  HG00360 #> 184  HG00361 #> 185  HG00362 #> 186  HG00364 #> 187  HG00365 #> 188  HG00366 #> 189  HG00367 #> 190  HG00368 #> 191  HG00369 #> 192  HG00371 #> 193  HG00372 #> 194  HG00373 #> 195  HG00375 #> 196  HG00376 #> 197  HG00377 #> 198  HG00378 #> 199  HG00379 #> 200  HG00380 #> 201  HG00381 #> 202  HG00382 #> 203  HG00383 #> 204  HG00384 #> 205  HG00403 #> 206  HG00404 #> 207  HG00405 #> 208  HG00406 #> 209  HG00407 #> 210  HG00408 #> 211  HG00409 #> 212  HG00410 #> 213  HG00411 #> 214  HG00418 #> 215  HG00419 #> 216  HG00420 #> 217  HG00421 #> 218  HG00422 #> 219  HG00423 #> 220  HG00427 #> 221  HG00428 #> 222  HG00429 #> 223  HG00436 #> 224  HG00437 #> 225  HG00438 #> 226  HG00442 #> 227  HG00443 #> 228  HG00444 #> 229  HG00445 #> 230  HG00446 #> 231  HG00447 #> 232  HG00448 #> 233  HG00449 #> 234  HG00450 #> 235  HG00451 #> 236  HG00452 #> 237  HG00453 #> 238  HG00457 #> 239  HG00458 #> 240  HG00459 #> 241  HG00463 #> 242  HG00464 #> 243  HG00465 #> 244  HG00472 #> 245  HG00473 #> 246  HG00474 #> 247  HG00475 #> 248  HG00476 #> 249  HG00477 #> 250  HG00478 #> 251  HG00479 #> 252  HG00480 #> 253  HG00500 #> 254  HG00501 #> 255  HG00502 #> 256  HG00512 #> 257  HG00513 #> 258  HG00514 #> 259  HG00524 #> 260  HG00525 #> 261  HG00526 #> 262  HG00530 #> 263  HG00531 #> 264  HG00532 #> 265  HG00533 #> 266  HG00534 #> 267  HG00535 #> 268  HG00536 #> 269  HG00537 #> 270  HG00538 #> 271  HG00542 #> 272  HG00543 #> 273  HG00544 #> 274  HG00551 #> 275  HG00552 #> 276  HG00553 #> 277  HG00554 #> 278  HG00555 #> 279  HG00556 #> 280  HG00557 #> 281  HG00558 #> 282  HG00559 #> 283  HG00560 #> 284  HG00561 #> 285  HG00565 #> 286  HG00566 #> 287  HG00567 #> 288  HG00577 #> 289  HG00578 #> 290  HG00579 #> 291  HG00580 #> 292  HG00581 #> 293  HG00582 #> 294  HG00583 #> 295  HG00584 #> 296  HG00585 #> 297  HG00589 #> 298  HG00590 #> 299  HG00591 #> 300  HG00592 #> 301  HG00593 #> 302  HG00594 #> 303  HG00595 #> 304  HG00596 #> 305  HG00597 #> 306  HG00598 #> 307  HG00599 #> 308  HG00600 #> 309  HG00607 #> 310  HG00608 #> 311  HG00609 #> 312  HG00610 #> 313  HG00611 #> 314  HG00612 #> 315  HG00613 #> 316  HG00614 #> 317  HG00615 #> 318  HG00619 #> 319  HG00620 #> 320  HG00621 #> 321  HG00622 #> 322  HG00623 #> 323  HG00624 #> 324  HG00625 #> 325  HG00626 #> 326  HG00627 #> 327  HG00628 #> 328  HG00629 #> 329  HG00630 #> 330  HG00631 #> 331  HG00632 #> 332  HG00633 #> 333  HG00634 #> 334  HG00635 #> 335  HG00636 #> 336  HG00637 #> 337  HG00638 #> 338  HG00639 #> 339  HG00640 #> 340  HG00641 #> 341  HG00642 #> 342  HG00650 #> 343  HG00651 #> 344  HG00652 #> 345  HG00653 #> 346  HG00654 #> 347  HG00655 #> 348  HG00656 #> 349  HG00657 #> 350  HG00658 #> 351  HG00662 #> 352  HG00663 #> 353  HG00664 #> 354  HG00671 #> 355  HG00672 #> 356  HG00673 #> 357  HG00674 #> 358  HG00675 #> 359  HG00676 #> 360  HG00683 #> 361  HG00684 #> 362  HG00685 #> 363  HG00689 #> 364  HG00690 #> 365  HG00691 #> 366  HG00692 #> 367  HG00693 #> 368  HG00694 #> 369  HG00698 #> 370  HG00699 #> 371  HG00700 #> 372  HG00701 #> 373  HG00702 #> 374  HG00703 #> 375  HG00704 #> 376  HG00705 #> 377  HG00706 #> 378  HG00707 #> 379  HG00708 #> 380  HG00709 #> 381  HG00716 #> 382  HG00717 #> 383  HG00718 #> 384  HG00728 #> 385  HG00729 #> 386  HG00730 #> 387  HG00731 #> 388  HG00732 #> 389  HG00733 #> 390  HG00734 #> 391  HG00735 #> 392  HG00736 #> 393  HG00737 #> 394  HG00738 #> 395  HG00739 #> 396  HG00740 #> 397  HG00741 #> 398  HG00742 #> 399  HG00743 #> 400  HG00759 #> 401  HG00766 #> 402  HG00844 #> 403  HG00851 #> 404  HG00864 #> 405  HG00866 #> 406  HG00867 #> 407  HG00879 #> 408  HG00881 #> 409  HG00956 #> 410  HG00978 #> 411  HG00982 #> 412  HG00983 #> 413  HG01028 #> 414  HG01029 #> 415  HG01031 #> 416  HG01046 #> 417  HG01047 #> 418  HG01048 #> 419  HG01049 #> 420  HG01050 #> 421  HG01051 #> 422  HG01052 #> 423  HG01053 #> 424  HG01054 #> 425  HG01055 #> 426  HG01056 #> 427  HG01058 #> 428  HG01060 #> 429  HG01061 #> 430  HG01062 #> 431  HG01063 #> 432  HG01064 #> 433  HG01066 #> 434  HG01067 #> 435  HG01068 #> 436  HG01069 #> 437  HG01070 #> 438  HG01071 #> 439  HG01072 #> 440  HG01073 #> 441  HG01074 #> 442  HG01075 #> 443  HG01077 #> 444  HG01079 #> 445  HG01080 #> 446  HG01081 #> 447  HG01082 #> 448  HG01083 #> 449  HG01084 #> 450  HG01085 #> 451  HG01086 #> 452  HG01087 #> 453  HG01088 #> 454  HG01089 #> 455  HG01090 #> 456  HG01092 #> 457  HG01094 #> 458  HG01095 #> 459  HG01096 #> 460  HG01097 #> 461  HG01098 #> 462  HG01099 #> 463  HG01100 #> 464  HG01101 #> 465  HG01102 #> 466  HG01103 #> 467  HG01104 #> 468  HG01105 #> 469  HG01106 #> 470  HG01107 #> 471  HG01108 #> 472  HG01109 #> 473  HG01110 #> 474  HG01111 #> 475  HG01112 #> 476  HG01113 #> 477  HG01114 #> 478  HG01119 #> 479  HG01121 #> 480  HG01122 #> 481  HG01123 #> 482  HG01124 #> 483  HG01125 #> 484  HG01126 #> 485  HG01130 #> 486  HG01131 #> 487  HG01133 #> 488  HG01134 #> 489  HG01135 #> 490  HG01136 #> 491  HG01137 #> 492  HG01138 #> 493  HG01139 #> 494  HG01140 #> 495  HG01141 #> 496  HG01142 #> 497  HG01148 #> 498  HG01149 #> 499  HG01150 #> 500  HG01161 #> 501  HG01162 #> 502  HG01164 #> 503  HG01167 #> 504  HG01168 #> 505  HG01169 #> 506  HG01170 #> 507  HG01171 #> 508  HG01172 #> 509  HG01173 #> 510  HG01174 #> 511  HG01175 #> 512  HG01176 #> 513  HG01177 #> 514  HG01178 #> 515  HG01182 #> 516  HG01183 #> 517  HG01184 #> 518  HG01187 #> 519  HG01188 #> 520  HG01189 #> 521  HG01190 #> 522  HG01191 #> 523  HG01192 #> 524  HG01195 #> 525  HG01197 #> 526  HG01198 #> 527  HG01199 #> 528  HG01200 #> 529  HG01204 #> 530  HG01205 #> 531  HG01206 #> 532  HG01241 #> 533  HG01242 #> 534  HG01243 #> 535  HG01247 #> 536  HG01248 #> 537  HG01249 #> 538  HG01250 #> 539  HG01251 #> 540  HG01252 #> 541  HG01253 #> 542  HG01254 #> 543  HG01255 #> 544  HG01256 #> 545  HG01257 #> 546  HG01258 #> 547  HG01259 #> 548  HG01260 #> 549  HG01261 #> 550  HG01269 #> 551  HG01271 #> 552  HG01272 #> 553  HG01273 #> 554  HG01274 #> 555  HG01275 #> 556  HG01276 #> 557  HG01277 #> 558  HG01278 #> 559  HG01279 #> 560  HG01280 #> 561  HG01281 #> 562  HG01284 #> 563  HG01286 #> 564  HG01301 #> 565  HG01302 #> 566  HG01303 #> 567  HG01305 #> 568  HG01308 #> 569  HG01311 #> 570  HG01312 #> 571  HG01322 #> 572  HG01323 #> 573  HG01324 #> 574  HG01325 #> 575  HG01326 #> 576  HG01327 #> 577  HG01334 #> 578  HG01341 #> 579  HG01342 #> 580  HG01343 #> 581  HG01344 #> 582  HG01345 #> 583  HG01346 #> 584  HG01347 #> 585  HG01348 #> 586  HG01349 #> 587  HG01350 #> 588  HG01351 #> 589  HG01352 #> 590  HG01353 #> 591  HG01354 #> 592  HG01355 #> 593  HG01356 #> 594  HG01357 #> 595  HG01358 #> 596  HG01359 #> 597  HG01360 #> 598  HG01361 #> 599  HG01362 #> 600  HG01363 #> 601  HG01364 #> 602  HG01365 #> 603  HG01366 #> 604  HG01367 #> 605  HG01369 #> 606  HG01372 #> 607  HG01374 #> 608  HG01375 #> 609  HG01376 #> 610  HG01377 #> 611  HG01378 #> 612  HG01379 #> 613  HG01383 #> 614  HG01384 #> 615  HG01385 #> 616  HG01389 #> 617  HG01390 #> 618  HG01391 #> 619  HG01392 #> 620  HG01393 #> 621  HG01394 #> 622  HG01395 #> 623  HG01396 #> 624  HG01397 #> 625  HG01398 #> 626  HG01402 #> 627  HG01403 #> 628  HG01404 #> 629  HG01405 #> 630  HG01411 #> 631  HG01412 #> 632  HG01413 #> 633  HG01414 #> 634  HG01415 #> 635  HG01431 #> 636  HG01432 #> 637  HG01433 #> 638  HG01435 #> 639  HG01437 #> 640  HG01438 #> 641  HG01439 #> 642  HG01440 #> 643  HG01441 #> 644  HG01442 #> 645  HG01443 #> 646  HG01444 #> 647  HG01445 #> 648  HG01447 #> 649  HG01452 #> 650  HG01453 #> 651  HG01454 #> 652  HG01455 #> 653  HG01456 #> 654  HG01457 #> 655  HG01459 #> 656  HG01461 #> 657  HG01462 #> 658  HG01463 #> 659  HG01464 #> 660  HG01465 #> 661  HG01466 #> 662  HG01468 #> 663  HG01471 #> 664  HG01473 #> 665  HG01474 #> 666  HG01477 #> 667  HG01479 #> 668  HG01480 #> 669  HG01481 #> 670  HG01482 #> 671  HG01483 #> 672  HG01484 #> 673  HG01485 #> 674  HG01486 #> 675  HG01487 #> 676  HG01488 #> 677  HG01489 #> 678  HG01490 #> 679  HG01491 #> 680  HG01492 #> 681  HG01493 #> 682  HG01494 #> 683  HG01495 #> 684  HG01496 #> 685  HG01497 #> 686  HG01498 #> 687  HG01499 #> 688  HG01500 #> 689  HG01501 #> 690  HG01502 #> 691  HG01503 #> 692  HG01504 #> 693  HG01505 #> 694  HG01506 #> 695  HG01507 #> 696  HG01508 #> 697  HG01509 #> 698  HG01510 #> 699  HG01511 #> 700  HG01512 #> 701  HG01513 #> 702  HG01514 #> 703  HG01515 #> 704  HG01516 #> 705  HG01517 #> 706  HG01518 #> 707  HG01519 #> 708  HG01520 #> 709  HG01521 #> 710  HG01522 #> 711  HG01523 #> 712  HG01524 #> 713  HG01525 #> 714  HG01526 #> 715  HG01527 #> 716  HG01528 #> 717  HG01529 #> 718  HG01530 #> 719  HG01531 #> 720  HG01532 #> 721  HG01536 #> 722  HG01537 #> 723  HG01538 #> 724  HG01550 #> 725  HG01551 #> 726  HG01552 #> 727  HG01556 #> 728  HG01565 #> 729  HG01566 #> 730  HG01567 #> 731  HG01571 #> 732  HG01572 #> 733  HG01573 #> 734  HG01577 #> 735  HG01578 #> 736  HG01579 #> 737  HG01583 #> 738  HG01586 #> 739  HG01589 #> 740  HG01590 #> 741  HG01593 #> 742  HG01594 #> 743  HG01595 #> 744  HG01596 #> 745  HG01597 #> 746  HG01598 #> 747  HG01599 #> 748  HG01600 #> 749  HG01601 #> 750  HG01602 #> 751  HG01603 #> 752  HG01604 #> 753  HG01605 #> 754  HG01606 #> 755  HG01607 #> 756  HG01608 #> 757  HG01609 #> 758  HG01610 #> 759  HG01611 #> 760  HG01612 #> 761  HG01613 #> 762  HG01614 #> 763  HG01615 #> 764  HG01616 #> 765  HG01617 #> 766  HG01618 #> 767  HG01619 #> 768  HG01620 #> 769  HG01621 #> 770  HG01622 #> 771  HG01623 #> 772  HG01624 #> 773  HG01625 #> 774  HG01626 #> 775  HG01627 #> 776  HG01628 #> 777  HG01629 #> 778  HG01630 #> 779  HG01631 #> 780  HG01632 #> 781  HG01633 #> 782  HG01667 #> 783  HG01668 #> 784  HG01669 #> 785  HG01670 #> 786  HG01671 #> 787  HG01672 #> 788  HG01673 #> 789  HG01674 #> 790  HG01675 #> 791  HG01676 #> 792  HG01677 #> 793  HG01678 #> 794  HG01679 #> 795  HG01680 #> 796  HG01681 #> 797  HG01682 #> 798  HG01683 #> 799  HG01684 #> 800  HG01685 #> 801  HG01686 #> 802  HG01687 #> 803  HG01694 #> 804  HG01695 #> 805  HG01696 #> 806  HG01697 #> 807  HG01698 #> 808  HG01699 #> 809  HG01700 #> 810  HG01701 #> 811  HG01702 #> 812  HG01703 #> 813  HG01704 #> 814  HG01705 #> 815  HG01706 #> 816  HG01707 #> 817  HG01708 #> 818  HG01709 #> 819  HG01710 #> 820  HG01711 #> 821  HG01746 #> 822  HG01747 #> 823  HG01748 #> 824  HG01755 #> 825  HG01756 #> 826  HG01757 #> 827  HG01761 #> 828  HG01762 #> 829  HG01763 #> 830  HG01764 #> 831  HG01765 #> 832  HG01766 #> 833  HG01767 #> 834  HG01768 #> 835  HG01769 #> 836  HG01770 #> 837  HG01771 #> 838  HG01772 #> 839  HG01773 #> 840  HG01774 #> 841  HG01775 #> 842  HG01776 #> 843  HG01777 #> 844  HG01778 #> 845  HG01779 #> 846  HG01780 #> 847  HG01781 #> 848  HG01782 #> 849  HG01783 #> 850  HG01784 #> 851  HG01785 #> 852  HG01786 #> 853  HG01787 #> 854  HG01789 #> 855  HG01790 #> 856  HG01791 #> 857  HG01794 #> 858  HG01795 #> 859  HG01796 #> 860  HG01797 #> 861  HG01798 #> 862  HG01799 #> 863  HG01800 #> 864  HG01801 #> 865  HG01802 #> 866  HG01804 #> 867  HG01805 #> 868  HG01806 #> 869  HG01807 #> 870  HG01808 #> 871  HG01809 #> 872  HG01810 #> 873  HG01811 #> 874  HG01812 #> 875  HG01813 #> 876  HG01815 #> 877  HG01816 #> 878  HG01817 #> 879  HG01840 #> 880  HG01841 #> 881  HG01842 #> 882  HG01843 #> 883  HG01844 #> 884  HG01845 #> 885  HG01846 #> 886  HG01847 #> 887  HG01848 #> 888  HG01849 #> 889  HG01850 #> 890  HG01851 #> 891  HG01852 #> 892  HG01853 #> 893  HG01855 #> 894  HG01857 #> 895  HG01858 #> 896  HG01859 #> 897  HG01860 #> 898  HG01861 #> 899  HG01862 #> 900  HG01863 #> 901  HG01864 #> 902  HG01865 #> 903  HG01866 #> 904  HG01867 #> 905  HG01868 #> 906  HG01869 #> 907  HG01870 #> 908  HG01871 #> 909  HG01872 #> 910  HG01873 #> 911  HG01874 #> 912  HG01878 #> 913  HG01879 #> 914  HG01880 #> 915  HG01881 #> 916  HG01882 #> 917  HG01883 #> 918  HG01884 #> 919  HG01885 #> 920  HG01886 #> 921  HG01887 #> 922  HG01888 #> 923  HG01889 #> 924  HG01890 #> 925  HG01891 #> 926  HG01892 #> 927  HG01893 #> 928  HG01894 #> 929  HG01895 #> 930  HG01896 #> 931  HG01897 #> 932  HG01898 #> 933  HG01912 #> 934  HG01914 #> 935  HG01915 #> 936  HG01916 #> 937  HG01917 #> 938  HG01918 #> 939  HG01919 #> 940  HG01920 #> 941  HG01921 #> 942  HG01922 #> 943  HG01923 #> 944  HG01924 #> 945  HG01925 #> 946  HG01926 #> 947  HG01927 #> 948  HG01928 #> 949  HG01932 #> 950  HG01933 #> 951  HG01934 #> 952  HG01935 #> 953  HG01936 #> 954  HG01937 #> 955  HG01938 #> 956  HG01939 #> 957  HG01940 #> 958  HG01941 #> 959  HG01942 #> 960  HG01943 #> 961  HG01944 #> 962  HG01945 #> 963  HG01946 #> 964  HG01947 #> 965  HG01948 #> 966  HG01949 #> 967  HG01950 #> 968  HG01951 #> 969  HG01952 #> 970  HG01953 #> 971  HG01954 #> 972  HG01955 #> 973  HG01956 #> 974  HG01958 #> 975  HG01959 #> 976  HG01960 #> 977  HG01961 #> 978  HG01965 #> 979  HG01967 #> 980  HG01968 #> 981  HG01969 #> 982  HG01970 #> 983  HG01971 #> 984  HG01972 #> 985  HG01973 #> 986  HG01974 #> 987  HG01975 #> 988  HG01976 #> 989  HG01977 #> 990  HG01978 #> 991  HG01979 #> 992  HG01980 #> 993  HG01981 #> 994  HG01982 #> 995  HG01983 #> 996  HG01984 #> 997  HG01985 #> 998  HG01986 #> 999  HG01987 #> 1000 HG01988 #> 1001 HG01989 #> 1002 HG01990 #> 1003 HG01991 #> 1004 HG01992 #> 1005 HG01993 #> 1006 HG01995 #> 1007 HG01997 #> 1008 HG01998 #> 1009 HG02002 #> 1010 HG02003 #> 1011 HG02004 #> 1012 HG02006 #> 1013 HG02008 #> 1014 HG02009 #> 1015 HG02010 #> 1016 HG02011 #> 1017 HG02012 #> 1018 HG02013 #> 1019 HG02014 #> 1020 HG02015 #> 1021 HG02016 #> 1022 HG02017 #> 1023 HG02018 #> 1024 HG02019 #> 1025 HG02020 #> 1026 HG02021 #> 1027 HG02023 #> 1028 HG02024 #> 1029 HG02025 #> 1030 HG02026 #> 1031 HG02027 #> 1032 HG02028 #> 1033 HG02029 #> 1034 HG02030 #> 1035 HG02031 #> 1036 HG02032 #> 1037 HG02035 #> 1038 HG02040 #> 1039 HG02046 #> 1040 HG02047 #> 1041 HG02048 #> 1042 HG02049 #> 1043 HG02050 #> 1044 HG02051 #> 1045 HG02052 #> 1046 HG02053 #> 1047 HG02054 #> 1048 HG02055 #> 1049 HG02056 #> 1050 HG02057 #> 1051 HG02058 #> 1052 HG02059 #> 1053 HG02060 #> 1054 HG02061 #> 1055 HG02064 #> 1056 HG02067 #> 1057 HG02068 #> 1058 HG02069 #> 1059 HG02070 #> 1060 HG02071 #> 1061 HG02072 #> 1062 HG02073 #> 1063 HG02074 #> 1064 HG02075 #> 1065 HG02076 #> 1066 HG02077 #> 1067 HG02078 #> 1068 HG02079 #> 1069 HG02080 #> 1070 HG02081 #> 1071 HG02082 #> 1072 HG02083 #> 1073 HG02084 #> 1074 HG02085 #> 1075 HG02086 #> 1076 HG02087 #> 1077 HG02088 #> 1078 HG02089 #> 1079 HG02090 #> 1080 HG02091 #> 1081 HG02095 #> 1082 HG02102 #> 1083 HG02104 #> 1084 HG02105 #> 1085 HG02106 #> 1086 HG02107 #> 1087 HG02108 #> 1088 HG02111 #> 1089 HG02113 #> 1090 HG02116 #> 1091 HG02120 #> 1092 HG02121 #> 1093 HG02122 #> 1094 HG02126 #> 1095 HG02127 #> 1096 HG02128 #> 1097 HG02129 #> 1098 HG02130 #> 1099 HG02131 #> 1100 HG02132 #> 1101 HG02133 #> 1102 HG02134 #> 1103 HG02135 #> 1104 HG02136 #> 1105 HG02137 #> 1106 HG02138 #> 1107 HG02139 #> 1108 HG02140 #> 1109 HG02141 #> 1110 HG02142 #> 1111 HG02143 #> 1112 HG02144 #> 1113 HG02145 #> 1114 HG02146 #> 1115 HG02147 #> 1116 HG02148 #> 1117 HG02150 #> 1118 HG02151 #> 1119 HG02152 #> 1120 HG02153 #> 1121 HG02154 #> 1122 HG02155 #> 1123 HG02156 #> 1124 HG02164 #> 1125 HG02165 #> 1126 HG02166 #> 1127 HG02168 #> 1128 HG02169 #> 1129 HG02170 #> 1130 HG02173 #> 1131 HG02176 #> 1132 HG02178 #> 1133 HG02179 #> 1134 HG02180 #> 1135 HG02181 #> 1136 HG02182 #> 1137 HG02184 #> 1138 HG02185 #> 1139 HG02186 #> 1140 HG02187 #> 1141 HG02188 #> 1142 HG02189 #> 1143 HG02190 #> 1144 HG02215 #> 1145 HG02217 #> 1146 HG02218 #> 1147 HG02219 #> 1148 HG02220 #> 1149 HG02221 #> 1150 HG02222 #> 1151 HG02223 #> 1152 HG02224 #> 1153 HG02225 #> 1154 HG02229 #> 1155 HG02230 #> 1156 HG02231 #> 1157 HG02232 #> 1158 HG02233 #> 1159 HG02234 #> 1160 HG02235 #> 1161 HG02236 #> 1162 HG02237 #> 1163 HG02238 #> 1164 HG02239 #> 1165 HG02240 #> 1166 HG02250 #> 1167 HG02252 #> 1168 HG02253 #> 1169 HG02254 #> 1170 HG02255 #> 1171 HG02256 #> 1172 HG02257 #> 1173 HG02258 #> 1174 HG02259 #> 1175 HG02260 #> 1176 HG02261 #> 1177 HG02262 #> 1178 HG02265 #> 1179 HG02266 #> 1180 HG02267 #> 1181 HG02271 #> 1182 HG02272 #> 1183 HG02273 #> 1184 HG02274 #> 1185 HG02275 #> 1186 HG02276 #> 1187 HG02277 #> 1188 HG02278 #> 1189 HG02279 #> 1190 HG02280 #> 1191 HG02281 #> 1192 HG02282 #> 1193 HG02283 #> 1194 HG02284 #> 1195 HG02285 #> 1196 HG02286 #> 1197 HG02287 #> 1198 HG02288 #> 1199 HG02291 #> 1200 HG02292 #> 1201 HG02293 #> 1202 HG02298 #> 1203 HG02299 #> 1204 HG02300 #> 1205 HG02301 #> 1206 HG02302 #> 1207 HG02303 #> 1208 HG02304 #> 1209 HG02307 #> 1210 HG02308 #> 1211 HG02309 #> 1212 HG02312 #> 1213 HG02314 #> 1214 HG02315 #> 1215 HG02316 #> 1216 HG02317 #> 1217 HG02318 #> 1218 HG02321 #> 1219 HG02322 #> 1220 HG02323 #> 1221 HG02325 #> 1222 HG02330 #> 1223 HG02332 #> 1224 HG02334 #> 1225 HG02337 #> 1226 HG02339 #> 1227 HG02343 #> 1228 HG02344 #> 1229 HG02345 #> 1230 HG02347 #> 1231 HG02348 #> 1232 HG02351 #> 1233 HG02353 #> 1234 HG02355 #> 1235 HG02356 #> 1236 HG02358 #> 1237 HG02360 #> 1238 HG02363 #> 1239 HG02364 #> 1240 HG02367 #> 1241 HG02371 #> 1242 HG02372 #> 1243 HG02373 #> 1244 HG02374 #> 1245 HG02375 #> 1246 HG02377 #> 1247 HG02379 #> 1248 HG02380 #> 1249 HG02381 #> 1250 HG02382 #> 1251 HG02383 #> 1252 HG02384 #> 1253 HG02385 #> 1254 HG02386 #> 1255 HG02387 #> 1256 HG02388 #> 1257 HG02389 #> 1258 HG02390 #> 1259 HG02391 #> 1260 HG02392 #> 1261 HG02394 #> 1262 HG02395 #> 1263 HG02396 #> 1264 HG02397 #> 1265 HG02398 #> 1266 HG02399 #> 1267 HG02401 #> 1268 HG02402 #> 1269 HG02405 #> 1270 HG02406 #> 1271 HG02407 #> 1272 HG02408 #> 1273 HG02409 #> 1274 HG02410 #> 1275 HG02415 #> 1276 HG02419 #> 1277 HG02420 #> 1278 HG02425 #> 1279 HG02427 #> 1280 HG02428 #> 1281 HG02429 #> 1282 HG02433 #> 1283 HG02436 #> 1284 HG02439 #> 1285 HG02442 #> 1286 HG02445 #> 1287 HG02449 #> 1288 HG02450 #> 1289 HG02451 #> 1290 HG02455 #> 1291 HG02461 #> 1292 HG02462 #> 1293 HG02463 #> 1294 HG02464 #> 1295 HG02465 #> 1296 HG02466 #> 1297 HG02470 #> 1298 HG02471 #> 1299 HG02476 #> 1300 HG02477 #> 1301 HG02478 #> 1302 HG02479 #> 1303 HG02480 #> 1304 HG02481 #> 1305 HG02484 #> 1306 HG02485 #> 1307 HG02486 #> 1308 HG02489 #> 1309 HG02490 #> 1310 HG02491 #> 1311 HG02492 #> 1312 HG02493 #> 1313 HG02494 #> 1314 HG02495 #> 1315 HG02496 #> 1316 HG02497 #> 1317 HG02501 #> 1318 HG02502 #> 1319 HG02505 #> 1320 HG02508 #> 1321 HG02511 #> 1322 HG02512 #> 1323 HG02513 #> 1324 HG02514 #> 1325 HG02521 #> 1326 HG02522 #> 1327 HG02523 #> 1328 HG02524 #> 1329 HG02525 #> 1330 HG02526 #> 1331 HG02536 #> 1332 HG02537 #> 1333 HG02541 #> 1334 HG02545 #> 1335 HG02546 #> 1336 HG02547 #> 1337 HG02549 #> 1338 HG02554 #> 1339 HG02555 #> 1340 HG02557 #> 1341 HG02558 #> 1342 HG02559 #> 1343 HG02561 #> 1344 HG02562 #> 1345 HG02563 #> 1346 HG02567 #> 1347 HG02568 #> 1348 HG02569 #> 1349 HG02570 #> 1350 HG02571 #> 1351 HG02572 #> 1352 HG02573 #> 1353 HG02574 #> 1354 HG02575 #> 1355 HG02577 #> 1356 HG02580 #> 1357 HG02582 #> 1358 HG02583 #> 1359 HG02584 #> 1360 HG02585 #> 1361 HG02586 #> 1362 HG02587 #> 1363 HG02588 #> 1364 HG02589 #> 1365 HG02590 #> 1366 HG02594 #> 1367 HG02595 #> 1368 HG02596 #> 1369 HG02597 #> 1370 HG02599 #> 1371 HG02600 #> 1372 HG02601 #> 1373 HG02602 #> 1374 HG02603 #> 1375 HG02604 #> 1376 HG02605 #> 1377 HG02610 #> 1378 HG02611 #> 1379 HG02612 #> 1380 HG02613 #> 1381 HG02614 #> 1382 HG02615 #> 1383 HG02620 #> 1384 HG02621 #> 1385 HG02622 #> 1386 HG02623 #> 1387 HG02624 #> 1388 HG02625 #> 1389 HG02628 #> 1390 HG02629 #> 1391 HG02630 #> 1392 HG02634 #> 1393 HG02635 #> 1394 HG02636 #> 1395 HG02642 #> 1396 HG02643 #> 1397 HG02644 #> 1398 HG02645 #> 1399 HG02646 #> 1400 HG02647 #> 1401 HG02648 #> 1402 HG02649 #> 1403 HG02650 #> 1404 HG02651 #> 1405 HG02652 #> 1406 HG02653 #> 1407 HG02654 #> 1408 HG02655 #> 1409 HG02656 #> 1410 HG02657 #> 1411 HG02658 #> 1412 HG02659 #> 1413 HG02660 #> 1414 HG02661 #> 1415 HG02662 #> 1416 HG02666 #> 1417 HG02667 #> 1418 HG02668 #> 1419 HG02675 #> 1420 HG02676 #> 1421 HG02677 #> 1422 HG02678 #> 1423 HG02679 #> 1424 HG02680 #> 1425 HG02681 #> 1426 HG02682 #> 1427 HG02683 #> 1428 HG02684 #> 1429 HG02685 #> 1430 HG02686 #> 1431 HG02687 #> 1432 HG02688 #> 1433 HG02689 #> 1434 HG02690 #> 1435 HG02691 #> 1436 HG02692 #> 1437 HG02694 #> 1438 HG02696 #> 1439 HG02697 #> 1440 HG02698 #> 1441 HG02699 #> 1442 HG02700 #> 1443 HG02701 #> 1444 HG02702 #> 1445 HG02703 #> 1446 HG02704 #> 1447 HG02715 #> 1448 HG02716 #> 1449 HG02717 #> 1450 HG02721 #> 1451 HG02722 #> 1452 HG02723 #> 1453 HG02724 #> 1454 HG02725 #> 1455 HG02726 #> 1456 HG02727 #> 1457 HG02728 #> 1458 HG02729 #> 1459 HG02731 #> 1460 HG02733 #> 1461 HG02734 #> 1462 HG02735 #> 1463 HG02736 #> 1464 HG02737 #> 1465 HG02738 #> 1466 HG02756 #> 1467 HG02757 #> 1468 HG02758 #> 1469 HG02759 #> 1470 HG02760 #> 1471 HG02761 #> 1472 HG02762 #> 1473 HG02763 #> 1474 HG02764 #> 1475 HG02768 #> 1476 HG02769 #> 1477 HG02770 #> 1478 HG02771 #> 1479 HG02772 #> 1480 HG02773 #> 1481 HG02774 #> 1482 HG02775 #> 1483 HG02776 #> 1484 HG02778 #> 1485 HG02779 #> 1486 HG02780 #> 1487 HG02781 #> 1488 HG02783 #> 1489 HG02784 #> 1490 HG02785 #> 1491 HG02786 #> 1492 HG02787 #> 1493 HG02788 #> 1494 HG02789 #> 1495 HG02790 #> 1496 HG02791 #> 1497 HG02792 #> 1498 HG02793 #> 1499 HG02794 #> 1500 HG02798 #> 1501 HG02799 #> 1502 HG02800 #> 1503 HG02804 #> 1504 HG02805 #> 1505 HG02806 #> 1506 HG02807 #> 1507 HG02808 #> 1508 HG02809 #> 1509 HG02810 #> 1510 HG02811 #> 1511 HG02812 #> 1512 HG02813 #> 1513 HG02814 #> 1514 HG02815 #> 1515 HG02816 #> 1516 HG02817 #> 1517 HG02818 #> 1518 HG02819 #> 1519 HG02820 #> 1520 HG02821 #> 1521 HG02836 #> 1522 HG02837 #> 1523 HG02838 #> 1524 HG02839 #> 1525 HG02840 #> 1526 HG02841 #> 1527 HG02851 #> 1528 HG02852 #> 1529 HG02853 #> 1530 HG02854 #> 1531 HG02855 #> 1532 HG02856 #> 1533 HG02860 #> 1534 HG02861 #> 1535 HG02862 #> 1536 HG02869 #> 1537 HG02870 #> 1538 HG02871 #> 1539 HG02878 #> 1540 HG02879 #> 1541 HG02880 #> 1542 HG02881 #> 1543 HG02882 #> 1544 HG02883 #> 1545 HG02884 #> 1546 HG02885 #> 1547 HG02886 #> 1548 HG02887 #> 1549 HG02888 #> 1550 HG02889 #> 1551 HG02890 #> 1552 HG02891 #> 1553 HG02892 #> 1554 HG02895 #> 1555 HG02896 #> 1556 HG02897 #> 1557 HG02922 #> 1558 HG02923 #> 1559 HG02924 #> 1560 HG02938 #> 1561 HG02939 #> 1562 HG02941 #> 1563 HG02942 #> 1564 HG02943 #> 1565 HG02944 #> 1566 HG02945 #> 1567 HG02946 #> 1568 HG02947 #> 1569 HG02948 #> 1570 HG02952 #> 1571 HG02953 #> 1572 HG02954 #> 1573 HG02964 #> 1574 HG02965 #> 1575 HG02966 #> 1576 HG02968 #> 1577 HG02969 #> 1578 HG02970 #> 1579 HG02971 #> 1580 HG02972 #> 1581 HG02973 #> 1582 HG02974 #> 1583 HG02975 #> 1584 HG02976 #> 1585 HG02977 #> 1586 HG02978 #> 1587 HG02979 #> 1588 HG02980 #> 1589 HG02981 #> 1590 HG02982 #> 1591 HG02983 #> 1592 HG02984 #> 1593 HG03006 #> 1594 HG03007 #> 1595 HG03008 #> 1596 HG03009 #> 1597 HG03012 #> 1598 HG03015 #> 1599 HG03016 #> 1600 HG03017 #> 1601 HG03018 #> 1602 HG03019 #> 1603 HG03021 #> 1604 HG03022 #> 1605 HG03023 #> 1606 HG03024 #> 1607 HG03025 #> 1608 HG03026 #> 1609 HG03027 #> 1610 HG03028 #> 1611 HG03029 #> 1612 HG03033 #> 1613 HG03034 #> 1614 HG03035 #> 1615 HG03039 #> 1616 HG03040 #> 1617 HG03041 #> 1618 HG03045 #> 1619 HG03046 #> 1620 HG03047 #> 1621 HG03048 #> 1622 HG03049 #> 1623 HG03050 #> 1624 HG03052 #> 1625 HG03053 #> 1626 HG03054 #> 1627 HG03055 #> 1628 HG03056 #> 1629 HG03057 #> 1630 HG03058 #> 1631 HG03059 #> 1632 HG03060 #> 1633 HG03061 #> 1634 HG03062 #> 1635 HG03063 #> 1636 HG03064 #> 1637 HG03065 #> 1638 HG03066 #> 1639 HG03069 #> 1640 HG03072 #> 1641 HG03073 #> 1642 HG03074 #> 1643 HG03076 #> 1644 HG03077 #> 1645 HG03078 #> 1646 HG03079 #> 1647 HG03080 #> 1648 HG03081 #> 1649 HG03082 #> 1650 HG03084 #> 1651 HG03085 #> 1652 HG03086 #> 1653 HG03088 #> 1654 HG03091 #> 1655 HG03095 #> 1656 HG03096 #> 1657 HG03097 #> 1658 HG03098 #> 1659 HG03099 #> 1660 HG03100 #> 1661 HG03101 #> 1662 HG03103 #> 1663 HG03104 #> 1664 HG03105 #> 1665 HG03107 #> 1666 HG03108 #> 1667 HG03109 #> 1668 HG03110 #> 1669 HG03111 #> 1670 HG03112 #> 1671 HG03113 #> 1672 HG03114 #> 1673 HG03115 #> 1674 HG03116 #> 1675 HG03117 #> 1676 HG03118 #> 1677 HG03119 #> 1678 HG03120 #> 1679 HG03121 #> 1680 HG03122 #> 1681 HG03123 #> 1682 HG03124 #> 1683 HG03125 #> 1684 HG03126 #> 1685 HG03127 #> 1686 HG03128 #> 1687 HG03129 #> 1688 HG03130 #> 1689 HG03131 #> 1690 HG03132 #> 1691 HG03133 #> 1692 HG03134 #> 1693 HG03135 #> 1694 HG03136 #> 1695 HG03137 #> 1696 HG03139 #> 1697 HG03140 #> 1698 HG03157 #> 1699 HG03158 #> 1700 HG03159 #> 1701 HG03160 #> 1702 HG03161 #> 1703 HG03162 #> 1704 HG03163 #> 1705 HG03164 #> 1706 HG03166 #> 1707 HG03167 #> 1708 HG03168 #> 1709 HG03169 #> 1710 HG03170 #> 1711 HG03171 #> 1712 HG03172 #> 1713 HG03173 #> 1714 HG03175 #> 1715 HG03176 #> 1716 HG03189 #> 1717 HG03190 #> 1718 HG03191 #> 1719 HG03193 #> 1720 HG03194 #> 1721 HG03195 #> 1722 HG03196 #> 1723 HG03197 #> 1724 HG03198 #> 1725 HG03199 #> 1726 HG03200 #> 1727 HG03202 #> 1728 HG03203 #> 1729 HG03209 #> 1730 HG03212 #> 1731 HG03224 #> 1732 HG03225 #> 1733 HG03228 #> 1734 HG03229 #> 1735 HG03230 #> 1736 HG03234 #> 1737 HG03235 #> 1738 HG03236 #> 1739 HG03237 #> 1740 HG03238 #> 1741 HG03239 #> 1742 HG03240 #> 1743 HG03241 #> 1744 HG03242 #> 1745 HG03246 #> 1746 HG03247 #> 1747 HG03248 #> 1748 HG03249 #> 1749 HG03250 #> 1750 HG03251 #> 1751 HG03258 #> 1752 HG03259 #> 1753 HG03260 #> 1754 HG03265 #> 1755 HG03266 #> 1756 HG03267 #> 1757 HG03268 #> 1758 HG03269 #> 1759 HG03270 #> 1760 HG03271 #> 1761 HG03272 #> 1762 HG03279 #> 1763 HG03280 #> 1764 HG03291 #> 1765 HG03293 #> 1766 HG03294 #> 1767 HG03295 #> 1768 HG03296 #> 1769 HG03297 #> 1770 HG03298 #> 1771 HG03299 #> 1772 HG03300 #> 1773 HG03301 #> 1774 HG03302 #> 1775 HG03303 #> 1776 HG03304 #> 1777 HG03305 #> 1778 HG03306 #> 1779 HG03307 #> 1780 HG03308 #> 1781 HG03309 #> 1782 HG03310 #> 1783 HG03311 #> 1784 HG03312 #> 1785 HG03313 #> 1786 HG03314 #> 1787 HG03339 #> 1788 HG03341 #> 1789 HG03342 #> 1790 HG03343 #> 1791 HG03344 #> 1792 HG03350 #> 1793 HG03351 #> 1794 HG03352 #> 1795 HG03354 #> 1796 HG03361 #> 1797 HG03362 #> 1798 HG03363 #> 1799 HG03365 #> 1800 HG03366 #> 1801 HG03367 #> 1802 HG03368 #> 1803 HG03369 #> 1804 HG03370 #> 1805 HG03371 #> 1806 HG03372 #> 1807 HG03373 #> 1808 HG03374 #> 1809 HG03376 #> 1810 HG03378 #> 1811 HG03380 #> 1812 HG03381 #> 1813 HG03382 #> 1814 HG03383 #> 1815 HG03384 #> 1816 HG03385 #> 1817 HG03388 #> 1818 HG03390 #> 1819 HG03391 #> 1820 HG03393 #> 1821 HG03394 #> 1822 HG03397 #> 1823 HG03398 #> 1824 HG03399 #> 1825 HG03401 #> 1826 HG03402 #> 1827 HG03408 #> 1828 HG03410 #> 1829 HG03411 #> 1830 HG03419 #> 1831 HG03428 #> 1832 HG03431 #> 1833 HG03432 #> 1834 HG03433 #> 1835 HG03436 #> 1836 HG03437 #> 1837 HG03438 #> 1838 HG03439 #> 1839 HG03442 #> 1840 HG03445 #> 1841 HG03446 #> 1842 HG03449 #> 1843 HG03450 #> 1844 HG03451 #> 1845 HG03452 #> 1846 HG03453 #> 1847 HG03454 #> 1848 HG03455 #> 1849 HG03456 #> 1850 HG03457 #> 1851 HG03458 #> 1852 HG03459 #> 1853 HG03460 #> 1854 HG03461 #> 1855 HG03462 #> 1856 HG03464 #> 1857 HG03465 #> 1858 HG03466 #> 1859 HG03468 #> 1860 HG03469 #> 1861 HG03470 #> 1862 HG03471 #> 1863 HG03472 #> 1864 HG03473 #> 1865 HG03474 #> 1866 HG03476 #> 1867 HG03477 #> 1868 HG03478 #> 1869 HG03479 #> 1870 HG03480 #> 1871 HG03484 #> 1872 HG03485 #> 1873 HG03486 #> 1874 HG03487 #> 1875 HG03488 #> 1876 HG03489 #> 1877 HG03490 #> 1878 HG03491 #> 1879 HG03492 #> 1880 HG03493 #> 1881 HG03499 #> 1882 HG03508 #> 1883 HG03510 #> 1884 HG03511 #> 1885 HG03513 #> 1886 HG03514 #> 1887 HG03515 #> 1888 HG03516 #> 1889 HG03517 #> 1890 HG03518 #> 1891 HG03519 #> 1892 HG03520 #> 1893 HG03521 #> 1894 HG03522 #> 1895 HG03538 #> 1896 HG03539 #> 1897 HG03540 #> 1898 HG03547 #> 1899 HG03548 #> 1900 HG03549 #> 1901 HG03556 #> 1902 HG03557 #> 1903 HG03558 #> 1904 HG03559 #> 1905 HG03563 #> 1906 HG03564 #> 1907 HG03565 #> 1908 HG03566 #> 1909 HG03567 #> 1910 HG03569 #> 1911 HG03571 #> 1912 HG03572 #> 1913 HG03574 #> 1914 HG03575 #> 1915 HG03576 #> 1916 HG03577 #> 1917 HG03578 #> 1918 HG03579 #> 1919 HG03582 #> 1920 HG03583 #> 1921 HG03584 #> 1922 HG03585 #> 1923 HG03587 #> 1924 HG03589 #> 1925 HG03590 #> 1926 HG03593 #> 1927 HG03594 #> 1928 HG03595 #> 1929 HG03596 #> 1930 HG03598 #> 1931 HG03599 #> 1932 HG03600 #> 1933 HG03602 #> 1934 HG03603 #> 1935 HG03604 #> 1936 HG03605 #> 1937 HG03606 #> 1938 HG03607 #> 1939 HG03611 #> 1940 HG03615 #> 1941 HG03616 #> 1942 HG03617 #> 1943 HG03618 #> 1944 HG03619 #> 1945 HG03620 #> 1946 HG03621 #> 1947 HG03624 #> 1948 HG03625 #> 1949 HG03626 #> 1950 HG03629 #> 1951 HG03631 #> 1952 HG03633 #> 1953 HG03634 #> 1954 HG03635 #> 1955 HG03636 #> 1956 HG03638 #> 1957 HG03639 #> 1958 HG03640 #> 1959 HG03641 #> 1960 HG03642 #> 1961 HG03643 #> 1962 HG03644 #> 1963 HG03645 #> 1964 HG03646 #> 1965 HG03649 #> 1966 HG03650 #> 1967 HG03651 #> 1968 HG03652 #> 1969 HG03653 #> 1970 HG03654 #> 1971 HG03656 #> 1972 HG03657 #> 1973 HG03660 #> 1974 HG03663 #> 1975 HG03667 #> 1976 HG03668 #> 1977 HG03669 #> 1978 HG03672 #> 1979 HG03673 #> 1980 HG03679 #> 1981 HG03680 #> 1982 HG03681 #> 1983 HG03682 #> 1984 HG03683 #> 1985 HG03684 #> 1986 HG03685 #> 1987 HG03686 #> 1988 HG03687 #> 1989 HG03688 #> 1990 HG03689 #> 1991 HG03690 #> 1992 HG03691 #> 1993 HG03692 #> 1994 HG03693 #> 1995 HG03694 #> 1996 HG03695 #> 1997 HG03696 #> 1998 HG03697 #> 1999 HG03698 #> 2000 HG03699 #> 2001 HG03700 #> 2002 HG03701 #> 2003 HG03702 #> 2004 HG03703 #> 2005 HG03704 #> 2006 HG03705 #> 2007 HG03706 #> 2008 HG03707 #> 2009 HG03708 #> 2010 HG03709 #> 2011 HG03710 #> 2012 HG03711 #> 2013 HG03713 #> 2014 HG03714 #> 2015 HG03715 #> 2016 HG03716 #> 2017 HG03717 #> 2018 HG03718 #> 2019 HG03719 #> 2020 HG03720 #> 2021 HG03721 #> 2022 HG03722 #> 2023 HG03723 #> 2024 HG03725 #> 2025 HG03727 #> 2026 HG03729 #> 2027 HG03730 #> 2028 HG03731 #> 2029 HG03732 #> 2030 HG03733 #> 2031 HG03736 #> 2032 HG03738 #> 2033 HG03740 #> 2034 HG03741 #> 2035 HG03742 #> 2036 HG03743 #> 2037 HG03744 #> 2038 HG03745 #> 2039 HG03746 #> 2040 HG03750 #> 2041 HG03752 #> 2042 HG03753 #> 2043 HG03754 #> 2044 HG03755 #> 2045 HG03756 #> 2046 HG03757 #> 2047 HG03760 #> 2048 HG03761 #> 2049 HG03762 #> 2050 HG03763 #> 2051 HG03765 #> 2052 HG03766 #> 2053 HG03767 #> 2054 HG03769 #> 2055 HG03770 #> 2056 HG03771 #> 2057 HG03772 #> 2058 HG03773 #> 2059 HG03774 #> 2060 HG03775 #> 2061 HG03777 #> 2062 HG03778 #> 2063 HG03779 #> 2064 HG03780 #> 2065 HG03781 #> 2066 HG03782 #> 2067 HG03783 #> 2068 HG03784 #> 2069 HG03785 #> 2070 HG03786 #> 2071 HG03787 #> 2072 HG03788 #> 2073 HG03789 #> 2074 HG03790 #> 2075 HG03792 #> 2076 HG03793 #> 2077 HG03794 #> 2078 HG03795 #> 2079 HG03796 #> 2080 HG03797 #> 2081 HG03798 #> 2082 HG03799 #> 2083 HG03800 #> 2084 HG03801 #> 2085 HG03802 #> 2086 HG03803 #> 2087 HG03804 #> 2088 HG03805 #> 2089 HG03806 #> 2090 HG03807 #> 2091 HG03808 #> 2092 HG03809 #> 2093 HG03811 #> 2094 HG03812 #> 2095 HG03813 #> 2096 HG03814 #> 2097 HG03815 #> 2098 HG03816 #> 2099 HG03817 #> 2100 HG03821 #> 2101 HG03822 #> 2102 HG03823 #> 2103 HG03824 #> 2104 HG03825 #> 2105 HG03826 #> 2106 HG03829 #> 2107 HG03830 #> 2108 HG03831 #> 2109 HG03832 #> 2110 HG03833 #> 2111 HG03834 #> 2112 HG03835 #> 2113 HG03836 #> 2114 HG03837 #> 2115 HG03838 #> 2116 HG03840 #> 2117 HG03842 #> 2118 HG03844 #> 2119 HG03845 #> 2120 HG03846 #> 2121 HG03847 #> 2122 HG03848 #> 2123 HG03849 #> 2124 HG03850 #> 2125 HG03851 #> 2126 HG03854 #> 2127 HG03856 #> 2128 HG03857 #> 2129 HG03858 #> 2130 HG03861 #> 2131 HG03862 #> 2132 HG03863 #> 2133 HG03864 #> 2134 HG03866 #> 2135 HG03867 #> 2136 HG03868 #> 2137 HG03869 #> 2138 HG03870 #> 2139 HG03871 #> 2140 HG03872 #> 2141 HG03873 #> 2142 HG03874 #> 2143 HG03875 #> 2144 HG03876 #> 2145 HG03879 #> 2146 HG03882 #> 2147 HG03884 #> 2148 HG03885 #> 2149 HG03886 #> 2150 HG03887 #> 2151 HG03888 #> 2152 HG03890 #> 2153 HG03894 #> 2154 HG03895 #> 2155 HG03896 #> 2156 HG03897 #> 2157 HG03898 #> 2158 HG03899 #> 2159 HG03900 #> 2160 HG03901 #> 2161 HG03902 #> 2162 HG03903 #> 2163 HG03904 #> 2164 HG03905 #> 2165 HG03906 #> 2166 HG03907 #> 2167 HG03908 #> 2168 HG03909 #> 2169 HG03910 #> 2170 HG03911 #> 2171 HG03913 #> 2172 HG03914 #> 2173 HG03915 #> 2174 HG03916 #> 2175 HG03917 #> 2176 HG03919 #> 2177 HG03920 #> 2178 HG03922 #> 2179 HG03924 #> 2180 HG03925 #> 2181 HG03926 #> 2182 HG03927 #> 2183 HG03928 #> 2184 HG03929 #> 2185 HG03930 #> 2186 HG03931 #> 2187 HG03934 #> 2188 HG03937 #> 2189 HG03939 #> 2190 HG03940 #> 2191 HG03941 #> 2192 HG03942 #> 2193 HG03943 #> 2194 HG03944 #> 2195 HG03945 #> 2196 HG03947 #> 2197 HG03948 #> 2198 HG03949 #> 2199 HG03950 #> 2200 HG03951 #> 2201 HG03953 #> 2202 HG03955 #> 2203 HG03960 #> 2204 HG03963 #> 2205 HG03965 #> 2206 HG03967 #> 2207 HG03968 #> 2208 HG03969 #> 2209 HG03971 #> 2210 HG03972 #> 2211 HG03973 #> 2212 HG03974 #> 2213 HG03976 #> 2214 HG03977 #> 2215 HG03978 #> 2216 HG03982 #> 2217 HG03985 #> 2218 HG03986 #> 2219 HG03988 #> 2220 HG03989 #> 2221 HG03990 #> 2222 HG03991 #> 2223 HG03992 #> 2224 HG03995 #> 2225 HG03998 #> 2226 HG03999 #> 2227 HG04001 #> 2228 HG04002 #> 2229 HG04003 #> 2230 HG04006 #> 2231 HG04014 #> 2232 HG04015 #> 2233 HG04017 #> 2234 HG04018 #> 2235 HG04019 #> 2236 HG04020 #> 2237 HG04022 #> 2238 HG04023 #> 2239 HG04024 #> 2240 HG04025 #> 2241 HG04026 #> 2242 HG04029 #> 2243 HG04033 #> 2244 HG04035 #> 2245 HG04036 #> 2246 HG04037 #> 2247 HG04038 #> 2248 HG04039 #> 2249 HG04040 #> 2250 HG04042 #> 2251 HG04047 #> 2252 HG04050 #> 2253 HG04053 #> 2254 HG04054 #> 2255 HG04055 #> 2256 HG04056 #> 2257 HG04058 #> 2258 HG04059 #> 2259 HG04060 #> 2260 HG04061 #> 2261 HG04062 #> 2262 HG04063 #> 2263 HG04067 #> 2264 HG04070 #> 2265 HG04075 #> 2266 HG04076 #> 2267 HG04080 #> 2268 HG04090 #> 2269 HG04093 #> 2270 HG04094 #> 2271 HG04096 #> 2272 HG04098 #> 2273 HG04099 #> 2274 HG04100 #> 2275 HG04106 #> 2276 HG04107 #> 2277 HG04114 #> 2278 HG04115 #> 2279 HG04118 #> 2280 HG04122 #> 2281 HG04127 #> 2282 HG04128 #> 2283 HG04131 #> 2284 HG04132 #> 2285 HG04133 #> 2286 HG04134 #> 2287 HG04135 #> 2288 HG04136 #> 2289 HG04140 #> 2290 HG04141 #> 2291 HG04142 #> 2292 HG04144 #> 2293 HG04146 #> 2294 HG04147 #> 2295 HG04148 #> 2296 HG04149 #> 2297 HG04150 #> 2298 HG04151 #> 2299 HG04152 #> 2300 HG04153 #> 2301 HG04155 #> 2302 HG04156 #> 2303 HG04157 #> 2304 HG04158 #> 2305 HG04159 #> 2306 HG04160 #> 2307 HG04161 #> 2308 HG04162 #> 2309 HG04164 #> 2310 HG04171 #> 2311 HG04173 #> 2312 HG04174 #> 2313 HG04175 #> 2314 HG04176 #> 2315 HG04177 #> 2316 HG04180 #> 2317 HG04181 #> 2318 HG04182 #> 2319 HG04183 #> 2320 HG04184 #> 2321 HG04185 #> 2322 HG04186 #> 2323 HG04187 #> 2324 HG04188 #> 2325 HG04189 #> 2326 HG04191 #> 2327 HG04192 #> 2328 HG04193 #> 2329 HG04194 #> 2330 HG04195 #> 2331 HG04197 #> 2332 HG04198 #> 2333 HG04199 #> 2334 HG04200 #> 2335 HG04202 #> 2336 HG04204 #> 2337 HG04206 #> 2338 HG04208 #> 2339 HG04209 #> 2340 HG04210 #> 2341 HG04211 #> 2342 HG04212 #> 2343 HG04214 #> 2344 HG04215 #> 2345 HG04216 #> 2346 HG04217 #> 2347 HG04219 #> 2348 HG04222 #> 2349 HG04225 #> 2350 HG04227 #> 2351 HG04228 #> 2352 HG04229 #> 2353 HG04235 #> 2354 HG04238 #> 2355 HG04239 #> 2356 HG04301 #> 2357 HG04302 #> 2358 HG04303 #> 2359 NA06984 #> 2360 NA06985 #> 2361 NA06986 #> 2362 NA06989 #> 2363 NA06991 #> 2364 NA06993 #> 2365 NA06994 #> 2366 NA06995 #> 2367 NA06997 #> 2368 NA07000 #> 2369 NA07014 #> 2370 NA07019 #> 2371 NA07022 #> 2372 NA07029 #> 2373 NA07031 #> 2374 NA07034 #> 2375 NA07037 #> 2376 NA07045 #> 2377 NA07048 #> 2378 NA07051 #> 2379 NA07055 #> 2380 NA07056 #> 2381 NA07340 #> 2382 NA07345 #> 2383 NA07346 #> 2384 NA07347 #> 2385 NA07348 #> 2386 NA07349 #> 2387 NA07357 #> 2388 NA07435 #> 2389 NA10830 #> 2390 NA10831 #> 2391 NA10835 #> 2392 NA10836 #> 2393 NA10837 #> 2394 NA10838 #> 2395 NA10839 #> 2396 NA10840 #> 2397 NA10842 #> 2398 NA10843 #> 2399 NA10845 #> 2400 NA10846 #> 2401 NA10847 #> 2402 NA10850 #> 2403 NA10851 #> 2404 NA10852 #> 2405 NA10853 #> 2406 NA10854 #> 2407 NA10855 #> 2408 NA10856 #> 2409 NA10857 #> 2410 NA10859 #> 2411 NA10860 #> 2412 NA10861 #> 2413 NA10863 #> 2414 NA10864 #> 2415 NA10865 #> 2416 NA11829 #> 2417 NA11830 #> 2418 NA11831 #> 2419 NA11832 #> 2420 NA11839 #> 2421 NA11840 #> 2422 NA11843 #> 2423 NA11881 #> 2424 NA11882 #> 2425 NA11891 #> 2426 NA11892 #> 2427 NA11893 #> 2428 NA11894 #> 2429 NA11917 #> 2430 NA11918 #> 2431 NA11919 #> 2432 NA11920 #> 2433 NA11930 #> 2434 NA11931 #> 2435 NA11932 #> 2436 NA11933 #> 2437 NA11992 #> 2438 NA11993 #> 2439 NA11994 #> 2440 NA11995 #> 2441 NA12003 #> 2442 NA12004 #> 2443 NA12005 #> 2444 NA12006 #> 2445 NA12043 #> 2446 NA12044 #> 2447 NA12045 #> 2448 NA12046 #> 2449 NA12056 #> 2450 NA12057 #> 2451 NA12058 #> 2452 NA12144 #> 2453 NA12145 #> 2454 NA12146 #> 2455 NA12154 #> 2456 NA12155 #> 2457 NA12156 #> 2458 NA12234 #> 2459 NA12239 #> 2460 NA12248 #> 2461 NA12249 #> 2462 NA12264 #> 2463 NA12272 #> 2464 NA12273 #> 2465 NA12274 #> 2466 NA12275 #> 2467 NA12282 #> 2468 NA12283 #> 2469 NA12286 #> 2470 NA12287 #> 2471 NA12329 #> 2472 NA12335 #> 2473 NA12336 #> 2474 NA12340 #> 2475 NA12341 #> 2476 NA12342 #> 2477 NA12343 #> 2478 NA12344 #> 2479 NA12347 #> 2480 NA12348 #> 2481 NA12375 #> 2482 NA12376 #> 2483 NA12383 #> 2484 NA12386 #> 2485 NA12399 #> 2486 NA12400 #> 2487 NA12413 #> 2488 NA12414 #> 2489 NA12485 #> 2490 NA12489 #> 2491 NA12546 #> 2492 NA12707 #> 2493 NA12708 #> 2494 NA12716 #> 2495 NA12717 #> 2496 NA12718 #> 2497 NA12739 #> 2498 NA12740 #> 2499 NA12748 #> 2500 NA12749 #> 2501 NA12750 #> 2502 NA12751 #> 2503 NA12752 #> 2504 NA12753 #> 2505 NA12760 #> 2506 NA12761 #> 2507 NA12762 #> 2508 NA12763 #> 2509 NA12766 #> 2510 NA12767 #> 2511 NA12775 #> 2512 NA12776 #> 2513 NA12777 #> 2514 NA12778 #> 2515 NA12801 #> 2516 NA12802 #> 2517 NA12812 #> 2518 NA12813 #> 2519 NA12814 #> 2520 NA12815 #> 2521 NA12817 #> 2522 NA12818 #> 2523 NA12827 #> 2524 NA12828 #> 2525 NA12829 #> 2526 NA12830 #> 2527 NA12832 #> 2528 NA12842 #> 2529 NA12843 #> 2530 NA12864 #> 2531 NA12865 #> 2532 NA12872 #> 2533 NA12873 #> 2534 NA12874 #> 2535 NA12875 #> 2536 NA12877 #> 2537 NA12878 #> 2538 NA12889 #> 2539 NA12890 #> 2540 NA12891 #> 2541 NA12892 #> 2542 NA18484 #> 2543 NA18485 #> 2544 NA18486 #> 2545 NA18487 #> 2546 NA18488 #> 2547 NA18489 #> 2548 NA18497 #> 2549 NA18498 #> 2550 NA18499 #> 2551 NA18500 #> 2552 NA18501 #> 2553 NA18502 #> 2554 NA18503 #> 2555 NA18504 #> 2556 NA18505 #> 2557 NA18506 #> 2558 NA18507 #> 2559 NA18508 #> 2560 NA18509 #> 2561 NA18510 #> 2562 NA18511 #> 2563 NA18515 #> 2564 NA18516 #> 2565 NA18517 #> 2566 NA18518 #> 2567 NA18519 #> 2568 NA18520 #> 2569 NA18521 #> 2570 NA18522 #> 2571 NA18523 #> 2572 NA18525 #> 2573 NA18526 #> 2574 NA18527 #> 2575 NA18528 #> 2576 NA18530 #> 2577 NA18531 #> 2578 NA18532 #> 2579 NA18533 #> 2580 NA18534 #> 2581 NA18535 #> 2582 NA18536 #> 2583 NA18537 #> 2584 NA18538 #> 2585 NA18539 #> 2586 NA18541 #> 2587 NA18542 #> 2588 NA18543 #> 2589 NA18544 #> 2590 NA18545 #> 2591 NA18546 #> 2592 NA18547 #> 2593 NA18548 #> 2594 NA18549 #> 2595 NA18550 #> 2596 NA18552 #> 2597 NA18553 #> 2598 NA18555 #> 2599 NA18557 #> 2600 NA18558 #> 2601 NA18559 #> 2602 NA18560 #> 2603 NA18561 #> 2604 NA18562 #> 2605 NA18563 #> 2606 NA18564 #> 2607 NA18565 #> 2608 NA18566 #> 2609 NA18567 #> 2610 NA18570 #> 2611 NA18571 #> 2612 NA18572 #> 2613 NA18573 #> 2614 NA18574 #> 2615 NA18576 #> 2616 NA18577 #> 2617 NA18579 #> 2618 NA18582 #> 2619 NA18591 #> 2620 NA18592 #> 2621 NA18593 #> 2622 NA18595 #> 2623 NA18596 #> 2624 NA18597 #> 2625 NA18599 #> 2626 NA18602 #> 2627 NA18603 #> 2628 NA18605 #> 2629 NA18606 #> 2630 NA18608 #> 2631 NA18609 #> 2632 NA18610 #> 2633 NA18611 #> 2634 NA18612 #> 2635 NA18613 #> 2636 NA18614 #> 2637 NA18615 #> 2638 NA18616 #> 2639 NA18617 #> 2640 NA18618 #> 2641 NA18619 #> 2642 NA18620 #> 2643 NA18621 #> 2644 NA18622 #> 2645 NA18623 #> 2646 NA18624 #> 2647 NA18625 #> 2648 NA18626 #> 2649 NA18627 #> 2650 NA18628 #> 2651 NA18629 #> 2652 NA18630 #> 2653 NA18631 #> 2654 NA18632 #> 2655 NA18633 #> 2656 NA18634 #> 2657 NA18635 #> 2658 NA18636 #> 2659 NA18637 #> 2660 NA18638 #> 2661 NA18639 #> 2662 NA18640 #> 2663 NA18641 #> 2664 NA18642 #> 2665 NA18643 #> 2666 NA18644 #> 2667 NA18645 #> 2668 NA18646 #> 2669 NA18647 #> 2670 NA18648 #> 2671 NA18740 #> 2672 NA18745 #> 2673 NA18747 #> 2674 NA18748 #> 2675 NA18749 #> 2676 NA18757 #> 2677 NA18791 #> 2678 NA18794 #> 2679 NA18795 #> 2680 NA18852 #> 2681 NA18853 #> 2682 NA18854 #> 2683 NA18855 #> 2684 NA18856 #> 2685 NA18857 #> 2686 NA18858 #> 2687 NA18859 #> 2688 NA18860 #> 2689 NA18861 #> 2690 NA18862 #> 2691 NA18863 #> 2692 NA18864 #> 2693 NA18865 #> 2694 NA18867 #> 2695 NA18868 #> 2696 NA18869 #> 2697 NA18870 #> 2698 NA18871 #> 2699 NA18872 #> 2700 NA18873 #> 2701 NA18874 #> 2702 NA18875 #> 2703 NA18876 #> 2704 NA18877 #> 2705 NA18878 #> 2706 NA18879 #> 2707 NA18881 #> 2708 NA18906 #> 2709 NA18907 #> 2710 NA18908 #> 2711 NA18909 #> 2712 NA18910 #> 2713 NA18911 #> 2714 NA18912 #> 2715 NA18913 #> 2716 NA18914 #> 2717 NA18915 #> 2718 NA18916 #> 2719 NA18917 #> 2720 NA18923 #> 2721 NA18924 #> 2722 NA18925 #> 2723 NA18930 #> 2724 NA18933 #> 2725 NA18934 #> 2726 NA18935 #> 2727 NA18939 #> 2728 NA18940 #> 2729 NA18941 #> 2730 NA18942 #> 2731 NA18943 #> 2732 NA18944 #> 2733 NA18945 #> 2734 NA18946 #> 2735 NA18947 #> 2736 NA18948 #> 2737 NA18949 #> 2738 NA18950 #> 2739 NA18951 #> 2740 NA18952 #> 2741 NA18953 #> 2742 NA18954 #> 2743 NA18955 #> 2744 NA18956 #> 2745 NA18957 #> 2746 NA18959 #> 2747 NA18960 #> 2748 NA18961 #> 2749 NA18962 #> 2750 NA18963 #> 2751 NA18964 #> 2752 NA18965 #> 2753 NA18966 #> 2754 NA18967 #> 2755 NA18968 #> 2756 NA18969 #> 2757 NA18970 #> 2758 NA18971 #> 2759 NA18972 #> 2760 NA18973 #> 2761 NA18974 #> 2762 NA18975 #> 2763 NA18976 #> 2764 NA18977 #> 2765 NA18978 #> 2766 NA18979 #> 2767 NA18980 #> 2768 NA18981 #> 2769 NA18982 #> 2770 NA18983 #> 2771 NA18984 #> 2772 NA18985 #> 2773 NA18986 #> 2774 NA18987 #> 2775 NA18988 #> 2776 NA18989 #> 2777 NA18990 #> 2778 NA18991 #> 2779 NA18992 #> 2780 NA18993 #> 2781 NA18994 #> 2782 NA18995 #> 2783 NA18997 #> 2784 NA18998 #> 2785 NA18999 #> 2786 NA19000 #> 2787 NA19001 #> 2788 NA19002 #> 2789 NA19003 #> 2790 NA19004 #> 2791 NA19005 #> 2792 NA19006 #> 2793 NA19007 #> 2794 NA19009 #> 2795 NA19010 #> 2796 NA19011 #> 2797 NA19012 #> 2798 NA19017 #> 2799 NA19019 #> 2800 NA19020 #> 2801 NA19023 #> 2802 NA19024 #> 2803 NA19025 #> 2804 NA19026 #> 2805 NA19027 #> 2806 NA19028 #> 2807 NA19030 #> 2808 NA19031 #> 2809 NA19035 #> 2810 NA19036 #> 2811 NA19037 #> 2812 NA19038 #> 2813 NA19041 #> 2814 NA19042 #> 2815 NA19043 #> 2816 NA19044 #> 2817 NA19046 #> 2818 NA19054 #> 2819 NA19055 #> 2820 NA19056 #> 2821 NA19057 #> 2822 NA19058 #> 2823 NA19059 #> 2824 NA19060 #> 2825 NA19062 #> 2826 NA19063 #> 2827 NA19064 #> 2828 NA19065 #> 2829 NA19066 #> 2830 NA19067 #> 2831 NA19068 #> 2832 NA19070 #> 2833 NA19072 #> 2834 NA19074 #> 2835 NA19075 #> 2836 NA19076 #> 2837 NA19077 #> 2838 NA19078 #> 2839 NA19079 #> 2840 NA19080 #> 2841 NA19081 #> 2842 NA19082 #> 2843 NA19083 #> 2844 NA19084 #> 2845 NA19085 #> 2846 NA19086 #> 2847 NA19087 #> 2848 NA19088 #> 2849 NA19089 #> 2850 NA19090 #> 2851 NA19091 #> 2852 NA19092 #> 2853 NA19093 #> 2854 NA19094 #> 2855 NA19095 #> 2856 NA19096 #> 2857 NA19097 #> 2858 NA19098 #> 2859 NA19099 #> 2860 NA19100 #> 2861 NA19101 #> 2862 NA19102 #> 2863 NA19103 #> 2864 NA19104 #> 2865 NA19105 #> 2866 NA19107 #> 2867 NA19108 #> 2868 NA19109 #> 2869 NA19113 #> 2870 NA19114 #> 2871 NA19115 #> 2872 NA19116 #> 2873 NA19117 #> 2874 NA19118 #> 2875 NA19119 #> 2876 NA19120 #> 2877 NA19121 #> 2878 NA19122 #> 2879 NA19123 #> 2880 NA19127 #> 2881 NA19128 #> 2882 NA19129 #> 2883 NA19130 #> 2884 NA19131 #> 2885 NA19132 #> 2886 NA19137 #> 2887 NA19138 #> 2888 NA19139 #> 2889 NA19140 #> 2890 NA19141 #> 2891 NA19142 #> 2892 NA19143 #> 2893 NA19144 #> 2894 NA19145 #> 2895 NA19146 #> 2896 NA19147 #> 2897 NA19148 #> 2898 NA19149 #> 2899 NA19150 #> 2900 NA19151 #> 2901 NA19152 #> 2902 NA19153 #> 2903 NA19154 #> 2904 NA19159 #> 2905 NA19160 #> 2906 NA19161 #> 2907 NA19166 #> 2908 NA19171 #> 2909 NA19172 #> 2910 NA19173 #> 2911 NA19174 #> 2912 NA19175 #> 2913 NA19176 #> 2914 NA19177 #> 2915 NA19184 #> 2916 NA19185 #> 2917 NA19186 #> 2918 NA19189 #> 2919 NA19190 #> 2920 NA19191 #> 2921 NA19195 #> 2922 NA19196 #> 2923 NA19197 #> 2924 NA19198 #> 2925 NA19199 #> 2926 NA19200 #> 2927 NA19201 #> 2928 NA19202 #> 2929 NA19203 #> 2930 NA19204 #> 2931 NA19205 #> 2932 NA19206 #> 2933 NA19207 #> 2934 NA19208 #> 2935 NA19209 #> 2936 NA19210 #> 2937 NA19211 #> 2938 NA19213 #> 2939 NA19214 #> 2940 NA19215 #> 2941 NA19221 #> 2942 NA19222 #> 2943 NA19223 #> 2944 NA19224 #> 2945 NA19225 #> 2946 NA19226 #> 2947 NA19235 #> 2948 NA19236 #> 2949 NA19237 #> 2950 NA19238 #> 2951 NA19239 #> 2952 NA19240 #> 2953 NA19247 #> 2954 NA19248 #> 2955 NA19249 #> 2956 NA19252 #> 2957 NA19254 #> 2958 NA19256 #> 2959 NA19257 #> 2960 NA19258 #> 2961 NA19307 #> 2962 NA19308 #> 2963 NA19309 #> 2964 NA19310 #> 2965 NA19311 #> 2966 NA19312 #> 2967 NA19313 #> 2968 NA19314 #> 2969 NA19315 #> 2970 NA19316 #> 2971 NA19317 #> 2972 NA19318 #> 2973 NA19319 #> 2974 NA19320 #> 2975 NA19321 #> 2976 NA19323 #> 2977 NA19324 #> 2978 NA19327 #> 2979 NA19328 #> 2980 NA19331 #> 2981 NA19332 #> 2982 NA19334 #> 2983 NA19338 #> 2984 NA19346 #> 2985 NA19347 #> 2986 NA19350 #> 2987 NA19351 #> 2988 NA19352 #> 2989 NA19355 #> 2990 NA19359 #> 2991 NA19360 #> 2992 NA19371 #> 2993 NA19372 #> 2994 NA19373 #> 2995 NA19374 #> 2996 NA19375 #> 2997 NA19376 #> 2998 NA19377 #> 2999 NA19378 #> 3000 NA19379 #> 3001 NA19380 #> 3002 NA19381 #> 3003 NA19382 #> 3004 NA19383 #> 3005 NA19384 #> 3006 NA19385 #> 3007 NA19390 #> 3008 NA19391 #> 3009 NA19393 #> 3010 NA19394 #> 3011 NA19395 #> 3012 NA19396 #> 3013 NA19397 #> 3014 NA19398 #> 3015 NA19399 #> 3016 NA19401 #> 3017 NA19403 #> 3018 NA19404 #> 3019 NA19428 #> 3020 NA19429 #> 3021 NA19430 #> 3022 NA19431 #> 3023 NA19432 #> 3024 NA19434 #> 3025 NA19435 #> 3026 NA19436 #> 3027 NA19437 #> 3028 NA19438 #> 3029 NA19439 #> 3030 NA19440 #> 3031 NA19443 #> 3032 NA19444 #> 3033 NA19445 #> 3034 NA19446 #> 3035 NA19448 #> 3036 NA19449 #> 3037 NA19451 #> 3038 NA19452 #> 3039 NA19453 #> 3040 NA19454 #> 3041 NA19455 #> 3042 NA19456 #> 3043 NA19457 #> 3044 NA19461 #> 3045 NA19462 #> 3046 NA19463 #> 3047 NA19466 #> 3048 NA19467 #> 3049 NA19468 #> 3050 NA19469 #> 3051 NA19470 #> 3052 NA19471 #> 3053 NA19472 #> 3054 NA19473 #> 3055 NA19474 #> 3056 NA19475 #> 3057 NA19625 #> 3058 NA19648 #> 3059 NA19649 #> 3060 NA19650 #> 3061 NA19651 #> 3062 NA19652 #> 3063 NA19653 #> 3064 NA19654 #> 3065 NA19655 #> 3066 NA19656 #> 3067 NA19657 #> 3068 NA19658 #> 3069 NA19659 #> 3070 NA19660 #> 3071 NA19661 #> 3072 NA19662 #> 3073 NA19663 #> 3074 NA19664 #> 3075 NA19665 #> 3076 NA19669 #> 3077 NA19670 #> 3078 NA19671 #> 3079 NA19672 #> 3080 NA19674 #> 3081 NA19675 #> 3082 NA19676 #> 3083 NA19677 #> 3084 NA19678 #> 3085 NA19679 #> 3086 NA19680 #> 3087 NA19681 #> 3088 NA19682 #> 3089 NA19683 #> 3090 NA19684 #> 3091 NA19685 #> 3092 NA19686 #> 3093 NA19700 #> 3094 NA19701 #> 3095 NA19702 #> 3096 NA19703 #> 3097 NA19704 #> 3098 NA19705 #> 3099 NA19707 #> 3100 NA19708 #> 3101 NA19711 #> 3102 NA19712 #> 3103 NA19713 #> 3104 NA19714 #> 3105 NA19716 #> 3106 NA19717 #> 3107 NA19718 #> 3108 NA19719 #> 3109 NA19720 #> 3110 NA19721 #> 3111 NA19722 #> 3112 NA19723 #> 3113 NA19724 #> 3114 NA19725 #> 3115 NA19726 #> 3116 NA19727 #> 3117 NA19728 #> 3118 NA19729 #> 3119 NA19730 #> 3120 NA19731 #> 3121 NA19732 #> 3122 NA19733 #> 3123 NA19734 #> 3124 NA19735 #> 3125 NA19737 #> 3126 NA19738 #> 3127 NA19740 #> 3128 NA19741 #> 3129 NA19742 #> 3130 NA19746 #> 3131 NA19747 #> 3132 NA19748 #> 3133 NA19749 #> 3134 NA19750 #> 3135 NA19751 #> 3136 NA19752 #> 3137 NA19753 #> 3138 NA19754 #> 3139 NA19755 #> 3140 NA19756 #> 3141 NA19757 #> 3142 NA19758 #> 3143 NA19759 #> 3144 NA19760 #> 3145 NA19761 #> 3146 NA19762 #> 3147 NA19763 #> 3148 NA19764 #> 3149 NA19766 #> 3150 NA19770 #> 3151 NA19771 #> 3152 NA19772 #> 3153 NA19773 #> 3154 NA19774 #> 3155 NA19775 #> 3156 NA19776 #> 3157 NA19777 #> 3158 NA19778 #> 3159 NA19779 #> 3160 NA19780 #> 3161 NA19781 #> 3162 NA19782 #> 3163 NA19783 #> 3164 NA19784 #> 3165 NA19785 #> 3166 NA19786 #> 3167 NA19787 #> 3168 NA19788 #> 3169 NA19789 #> 3170 NA19790 #> 3171 NA19792 #> 3172 NA19794 #> 3173 NA19795 #> 3174 NA19796 #> 3175 NA19797 #> 3176 NA19798 #> 3177 NA19818 #> 3178 NA19819 #> 3179 NA19828 #> 3180 NA19834 #> 3181 NA19835 #> 3182 NA19836 #> 3183 NA19900 #> 3184 NA19901 #> 3185 NA19902 #> 3186 NA19904 #> 3187 NA19905 #> 3188 NA19908 #> 3189 NA19909 #> 3190 NA19913 #> 3191 NA19914 #> 3192 NA19915 #> 3193 NA19916 #> 3194 NA19917 #> 3195 NA19918 #> 3196 NA19919 #> 3197 NA19920 #> 3198 NA19921 #> 3199 NA19922 #> 3200 NA19923 #> 3201 NA19924 #> 3202 NA19982 #> 3203 NA19983 #> 3204 NA19984 #> 3205 NA19985 #> 3206 NA20126 #> 3207 NA20127 #> 3208 NA20128 #> 3209 NA20129 #> 3210 NA20274 #> 3211 NA20276 #> 3212 NA20277 #> 3213 NA20278 #> 3214 NA20279 #> 3215 NA20281 #> 3216 NA20282 #> 3217 NA20284 #> 3218 NA20285 #> 3219 NA20287 #> 3220 NA20288 #> 3221 NA20289 #> 3222 NA20290 #> 3223 NA20291 #> 3224 NA20292 #> 3225 NA20294 #> 3226 NA20295 #> 3227 NA20296 #> 3228 NA20297 #> 3229 NA20298 #> 3230 NA20299 #> 3231 NA20300 #> 3232 NA20301 #> 3233 NA20302 #> 3234 NA20312 #> 3235 NA20313 #> 3236 NA20314 #> 3237 NA20316 #> 3238 NA20317 #> 3239 NA20318 #> 3240 NA20319 #> 3241 NA20320 #> 3242 NA20321 #> 3243 NA20322 #> 3244 NA20332 #> 3245 NA20333 #> 3246 NA20334 #> 3247 NA20335 #> 3248 NA20336 #> 3249 NA20337 #> 3250 NA20339 #> 3251 NA20340 #> 3252 NA20341 #> 3253 NA20342 #> 3254 NA20343 #> 3255 NA20344 #> 3256 NA20345 #> 3257 NA20346 #> 3258 NA20347 #> 3259 NA20348 #> 3260 NA20349 #> 3261 NA20350 #> 3262 NA20351 #> 3263 NA20355 #> 3264 NA20356 #> 3265 NA20357 #> 3266 NA20358 #> 3267 NA20359 #> 3268 NA20360 #> 3269 NA20361 #> 3270 NA20362 #> 3271 NA20363 #> 3272 NA20364 #> 3273 NA20412 #> 3274 NA20413 #> 3275 NA20414 #> 3276 NA20502 #> 3277 NA20503 #> 3278 NA20504 #> 3279 NA20505 #> 3280 NA20506 #> 3281 NA20507 #> 3282 NA20508 #> 3283 NA20509 #> 3284 NA20510 #> 3285 NA20511 #> 3286 NA20512 #> 3287 NA20513 #> 3288 NA20514 #> 3289 NA20515 #> 3290 NA20516 #> 3291 NA20517 #> 3292 NA20518 #> 3293 NA20519 #> 3294 NA20520 #> 3295 NA20521 #> 3296 NA20522 #> 3297 NA20524 #> 3298 NA20525 #> 3299 NA20526 #> 3300 NA20527 #> 3301 NA20528 #> 3302 NA20529 #> 3303 NA20530 #> 3304 NA20531 #> 3305 NA20532 #> 3306 NA20533 #> 3307 NA20534 #> 3308 NA20535 #> 3309 NA20536 #> 3310 NA20537 #> 3311 NA20538 #> 3312 NA20539 #> 3313 NA20540 #> 3314 NA20541 #> 3315 NA20542 #> 3316 NA20543 #> 3317 NA20544 #> 3318 NA20581 #> 3319 NA20582 #> 3320 NA20585 #> 3321 NA20586 #> 3322 NA20587 #> 3323 NA20588 #> 3324 NA20589 #> 3325 NA20752 #> 3326 NA20753 #> 3327 NA20754 #> 3328 NA20755 #> 3329 NA20756 #> 3330 NA20757 #> 3331 NA20758 #> 3332 NA20759 #> 3333 NA20760 #> 3334 NA20761 #> 3335 NA20762 #> 3336 NA20763 #> 3337 NA20764 #> 3338 NA20765 #> 3339 NA20766 #> 3340 NA20767 #> 3341 NA20768 #> 3342 NA20769 #> 3343 NA20770 #> 3344 NA20771 #> 3345 NA20772 #> 3346 NA20773 #> 3347 NA20774 #> 3348 NA20775 #> 3349 NA20778 #> 3350 NA20783 #> 3351 NA20785 #> 3352 NA20786 #> 3353 NA20787 #> 3354 NA20790 #> 3355 NA20792 #> 3356 NA20795 #> 3357 NA20796 #> 3358 NA20797 #> 3359 NA20798 #> 3360 NA20799 #> 3361 NA20800 #> 3362 NA20801 #> 3363 NA20802 #> 3364 NA20803 #> 3365 NA20804 #> 3366 NA20805 #> 3367 NA20806 #> 3368 NA20807 #> 3369 NA20808 #> 3370 NA20809 #> 3371 NA20810 #> 3372 NA20811 #> 3373 NA20812 #> 3374 NA20813 #> 3375 NA20814 #> 3376 NA20815 #> 3377 NA20816 #> 3378 NA20818 #> 3379 NA20819 #> 3380 NA20821 #> 3381 NA20822 #> 3382 NA20826 #> 3383 NA20827 #> 3384 NA20828 #> 3385 NA20829 #> 3386 NA20831 #> 3387 NA20832 #> 3388 NA20845 #> 3389 NA20846 #> 3390 NA20847 #> 3391 NA20849 #> 3392 NA20850 #> 3393 NA20851 #> 3394 NA20852 #> 3395 NA20853 #> 3396 NA20854 #> 3397 NA20856 #> 3398 NA20858 #> 3399 NA20859 #> 3400 NA20861 #> 3401 NA20862 #> 3402 NA20863 #> 3403 NA20864 #> 3404 NA20866 #> 3405 NA20867 #> 3406 NA20868 #> 3407 NA20869 #> 3408 NA20870 #> 3409 NA20871 #> 3410 NA20872 #> 3411 NA20873 #> 3412 NA20874 #> 3413 NA20875 #> 3414 NA20876 #> 3415 NA20877 #> 3416 NA20878 #> 3417 NA20879 #> 3418 NA20881 #> 3419 NA20882 #> 3420 NA20883 #> 3421 NA20884 #> 3422 NA20885 #> 3423 NA20886 #> 3424 NA20887 #> 3425 NA20888 #> 3426 NA20889 #> 3427 NA20890 #> 3428 NA20891 #> 3429 NA20892 #> 3430 NA20893 #> 3431 NA20894 #> 3432 NA20895 #> 3433 NA20896 #> 3434 NA20897 #> 3435 NA20898 #> 3436 NA20899 #> 3437 NA20900 #> 3438 NA20901 #> 3439 NA20902 #> 3440 NA20903 #> 3441 NA20904 #> 3442 NA20905 #> 3443 NA20906 #> 3444 NA20907 #> 3445 NA20908 #> 3446 NA20909 #> 3447 NA20910 #> 3448 NA20911 #> 3449 NA21086 #> 3450 NA21087 #> 3451 NA21088 #> 3452 NA21089 #> 3453 NA21090 #> 3454 NA21091 #> 3455 NA21092 #> 3456 NA21093 #> 3457 NA21094 #> 3458 NA21095 #> 3459 NA21097 #> 3460 NA21098 #> 3461 NA21099 #> 3462 NA21100 #> 3463 NA21101 #> 3464 NA21102 #> 3465 NA21103 #> 3466 NA21104 #> 3467 NA21105 #> 3468 NA21106 #> 3469 NA21107 #> 3470 NA21108 #> 3471 NA21109 #> 3472 NA21110 #> 3473 NA21111 #> 3474 NA21112 #> 3475 NA21113 #> 3476 NA21114 #> 3477 NA21115 #> 3478 NA21116 #> 3479 NA21117 #> 3480 NA21118 #> 3481 NA21119 #> 3482 NA21120 #> 3483 NA21121 #> 3484 NA21122 #> 3485 NA21123 #> 3486 NA21124 #> 3487 NA21125 #> 3488 NA21126 #> 3489 NA21127 #> 3490 NA21128 #> 3491 NA21129 #> 3492 NA21130 #> 3493 NA21133 #> 3494 NA21134 #> 3495 NA21135 #> 3496 NA21137 #> 3497 NA21141 #> 3498 NA21142 #> 3499 NA21143 #> 3500 NA21144 #>"},{"path":"https://github.com/vjcitn/BiocHail/reference/get_ukbb_sumstat_10kloci_mt.html","id":null,"dir":"Reference","previous_headings":"","what":"interface to a small subset of UKBB summary stats in MatrixTable format — get_ukbb_sumstat_10kloci_mt","title":"interface to a small subset of UKBB summary stats in MatrixTable format — get_ukbb_sumstat_10kloci_mt","text":"interface small subset UKBB summary stats MatrixTable format","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/get_ukbb_sumstat_10kloci_mt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interface to a small subset of UKBB summary stats in MatrixTable format — get_ukbb_sumstat_10kloci_mt","text":"","code":"get_ukbb_sumstat_10kloci_mt(   hl,   folder = tempdir(),   cache = BiocFileCache::BiocFileCache(),   timeout.ukbb = 3600,   simple = FALSE )"},{"path":"https://github.com/vjcitn/BiocHail/reference/get_ukbb_sumstat_10kloci_mt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"interface to a small subset of UKBB summary stats in MatrixTable format — get_ukbb_sumstat_10kloci_mt","text":"hl hail object folder character(1) destination 1kg.mt retrieved using hl.utils.get_1kg, import_vcf, write cache BiocFileCache-type cache timeout.ukbb numeric(1) defaults 3600 timeout setting `options()`; option value reset exit simple logical(1) avoids basilisk TRUE","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/get_ukbb_sumstat_10kloci_mt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"interface to a small subset of UKBB summary stats in MatrixTable format — get_ukbb_sumstat_10kloci_mt","text":"\"hail.matrixtable.MatrixTable\" instance","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/get_ukbb_sumstat_10kloci_mt.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"interface to a small subset of UKBB summary stats in MatrixTable format — get_ukbb_sumstat_10kloci_mt","text":"loci selected using .000345 28 million loci recorded UKBB pan-ancestry record.  sample made available ) assess issues data volume (full resource 12.78 TB according [doc](https://pan-dev.ukbb.broadinstitute.org/docs/hail-format/index.html), b) provide full information scope phenotypes populations available. function unzip 5GB MatrixTable data.  may desirable cache unzipped image persistent location.  done environment variable `HAIL_UKBB_SUMSTAT_10K_PATH` set location, function use MatrixTable content found .","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/get_ukbb_sumstat_10kloci_mt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"interface to a small subset of UKBB summary stats in MatrixTable format — get_ukbb_sumstat_10kloci_mt","text":"","code":"hl <- hail_init() ss <- get_ukbb_sumstat_10kloci_mt(hl) # consider saving the unzipped image and recaching ss$count() #> [[1]] #> [1] 9888 #>  #> [[2]] #> [1] 7271 #>"},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_init.html","id":null,"dir":"Reference","previous_headings":"","what":"initialize hail, using more options — hail_init","title":"initialize hail, using more options — hail_init","text":"initialize hail, using options","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"initialize hail, using more options — hail_init","text":"","code":"hail_init(   quiet = FALSE,   min_block_size = 0L,   branching_factor = 50L,   default_reference = \"GRCh37\",   global_seed = 1234L,   log = tempfile(),   spark_conf = NULL,   gcs_requester_pays_configuration = NULL )"},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"initialize hail, using more options — hail_init","text":"quiet logical(1) defaults FALSE min_block_size integer(1) defaults 0L branching_factor integer(1) defaults 50L default_reference character(1) defaults \"GRCh37\", compatibility earlier `hail_init` global_seed integer(1) defaults 1234L log character(1) target folder logging, defaults tempfile() spark_conf list, defaults NULL gcs_requester_pays_configuration list, defaults NULL","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"initialize hail, using more options — hail_init","text":"python reference hail module","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_init.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"initialize hail, using more options — hail_init","text":"hail object may passed around.  See hail documentation details args.","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"initialize hail, using more options — hail_init","text":"","code":"proj = Sys.getenv(\"GOOGLE_PROJECT\") buck = Sys.getenv(\"GCS_BUCKET\") if (nchar(buck)>0) {   # conf = list(proj, c(buck)) doesn't seem to generate tuple[str,Sequence[str]]   hl <- hail_init()   #gcs_requester_pays_configuration=conf)   hl$default_reference() }"},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_init_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"initialize hail — hail_init_simple","title":"initialize hail — hail_init_simple","text":"initialize hail","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_init_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"initialize hail — hail_init_simple","text":"","code":"hail_init_simple()"},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_init_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"initialize hail — hail_init_simple","text":"python reference hail module","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_init_simple.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"initialize hail — hail_init_simple","text":"hail object may passed around","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_init_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"initialize hail — hail_init_simple","text":"","code":"hc <- hail_init_simple() hc #> Module(hail)"},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_stop.html","id":null,"dir":"Reference","previous_headings":"","what":"stop hail — hail_stop","title":"stop hail — hail_stop","text":"stop hail","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_stop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stop hail — hail_stop","text":"","code":"hail_stop(hl)"},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_stop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stop hail — hail_stop","text":"hl hail object produced hail_init()","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_stop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"stop hail — hail_stop","text":"result stop() method Hail module","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/hail_stop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stop hail — hail_stop","text":"","code":"hail_stop #> function (hl)  #> hl$stop() #> <bytecode: 0x129a424e0> #> <environment: namespace:BiocHail>"},{"path":"https://github.com/vjcitn/BiocHail/reference/kg_3202.html","id":null,"dir":"Reference","previous_headings":"","what":"data.frame with metadata about 3202 samples genotyped against T2T reference — kg_3202","title":"data.frame with metadata about 3202 samples genotyped against T2T reference — kg_3202","text":"data.frame metadata 3202 samples genotyped T2T reference","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/kg_3202.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"data.frame with metadata about 3202 samples genotyped against T2T reference — kg_3202","text":"","code":"data(\"kg_3202\")"},{"path":"https://github.com/vjcitn/BiocHail/reference/kg_3202.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"data.frame with metadata about 3202 samples genotyped against T2T reference — kg_3202","text":"data.frame","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/kg_3202.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"data.frame with metadata about 3202 samples genotyped against T2T reference — kg_3202","text":"data.frame","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/kg_3202.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"data.frame with metadata about 3202 samples genotyped against T2T reference — kg_3202","text":"Source: index files described `https://www.internationalgenome.org/data-portal/data-collection/30x-grch38`","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/kg_3202.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"data.frame with metadata about 3202 samples genotyped against T2T reference — kg_3202","text":"","code":"data(kg_3202) dim(kg_3202) #> [1] 3202   22"},{"path":"https://github.com/vjcitn/BiocHail/reference/multipop_df.html","id":null,"dir":"Reference","previous_headings":"","what":"pheno_data component harvesting from columns of summary stats MatrixTable allowing for info on multiple populations in the pheno_data component — multipop_df","title":"pheno_data component harvesting from columns of summary stats MatrixTable allowing for info on multiple populations in the pheno_data component — multipop_df","text":"pheno_data component harvesting columns summary stats MatrixTable allowing info multiple populations pheno_data component","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/multipop_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pheno_data component harvesting from columns of summary stats MatrixTable allowing for info on multiple populations in the pheno_data component — multipop_df","text":"","code":"multipop_df(   x,   top2get = c(\"trait_type\", \"phenocode\", \"description\", \"modifier\", \"coding_description\",     \"coding\"),   pheno2get = c(\"n_cases\", \"n_controls\", \"heritability\", \"pop\") )"},{"path":"https://github.com/vjcitn/BiocHail/reference/multipop_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pheno_data component harvesting from columns of summary stats MatrixTable allowing for info on multiple populations in the pheno_data component — multipop_df","text":"x Struct - single element list returned mt$cols()$collect() top2get character() vector general fields retrieve pheno2get character() vector fields retrieved subpopulation","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/multipop_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pheno_data component harvesting from columns of summary stats MatrixTable allowing for info on multiple populations in the pheno_data component — multipop_df","text":"data.frame","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/multipop_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pheno_data component harvesting from columns of summary stats MatrixTable allowing for info on multiple populations in the pheno_data component — multipop_df","text":"","code":"# following are too time-consuming but can be of interest # if (nchar(Sys.getenv(\"HAIL_UKBB_SUMSTAT_10K_PATH\"))>0) { #  hl = hail_init() #  ss = get_ukbb_sumstat_10kloci_mt(hl) #  sscol = ss$cols()$collect() # may take a bit of time #  print(length(sscol)) #  multipop_df(sscol[[1]]) # } # # \\donttest{ # if (nchar(Sys.getenv(\"HAIL_UKBB_SUMSTAT_10K_PATH\"))>0) { # # to get an overview of all phenotype-cohort combinations in a searchable table # mmm = lapply(sscol, multipop_df ) # mymy = do.call(rbind, mmm) # over 16k rows # DT::datatable(mymy) # } # # } # this runs quickly and is demonstrative hl <- hail_init() litzip <- system.file(\"extdata\", \"myss2.zip\", package = \"BiocHail\") td <- tempdir() unzip(litzip, exdir = td) ntab <- hl$read_matrix_table(paste0(td, \"/myss2.mt\")) ntab$describe() nt2 <- ntab$col$collect() multipop_df(nt2[[1]]) # must select one element #>   trait_type phenocode description modifier coding_description coding n_cases #> 1 biomarkers     30600     Albumin     irnt                 NA           5759 #> 2 biomarkers     30600     Albumin     irnt                 NA            856 #> 3 biomarkers     30600     Albumin     irnt                 NA           7694 #> 4 biomarkers     30600     Albumin     irnt                 NA           2340 #> 5 biomarkers     30600     Albumin     irnt                 NA         367192 #> 6 biomarkers     30600     Albumin     irnt                 NA           1364 #>   n_controls heritability pop #> 1         NA   0.25412190 AFR #> 2         NA   0.11268439 AMR #> 3         NA   0.24110706 CSA #> 4         NA   0.06126386 EAS #> 5         NA   0.06449071 EUR #> 6         NA   0.20458513 MID"},{"path":"https://github.com/vjcitn/BiocHail/reference/osn_1kg_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Open Storage Network path to a zip of hail MatrixTable with some 1kg data for the Hail.is GWAS tutorial — osn_1kg_path","title":"Open Storage Network path to a zip of hail MatrixTable with some 1kg data for the Hail.is GWAS tutorial — osn_1kg_path","text":"Open Storage Network path zip hail MatrixTable 1kg data Hail.GWAS tutorial","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/osn_1kg_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open Storage Network path to a zip of hail MatrixTable with some 1kg data for the Hail.is GWAS tutorial — osn_1kg_path","text":"","code":"osn_1kg_path()"},{"path":"https://github.com/vjcitn/BiocHail/reference/osn_1kg_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open Storage Network path to a zip of hail MatrixTable with some 1kg data for the Hail.is GWAS tutorial — osn_1kg_path","text":"character(1) URL zip","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/osn_1kg_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open Storage Network path to a zip of hail MatrixTable with some 1kg data for the Hail.is GWAS tutorial — osn_1kg_path","text":"","code":"osn_1kg_path() #> [1] \"https://bir190004-bucket01.mghp.osn.xsede.org/BiocHailData/1kg.zip\""},{"path":"https://github.com/vjcitn/BiocHail/reference/osn_ukbb_sumst10k_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Open Storage Network path to a zip of hail MatrixTable with a small subset of UKBB summary statistics as of 12/25/2022 — osn_ukbb_sumst10k_path","title":"Open Storage Network path to a zip of hail MatrixTable with a small subset of UKBB summary statistics as of 12/25/2022 — osn_ukbb_sumst10k_path","text":"Open Storage Network path zip hail MatrixTable small subset UKBB summary statistics 12/25/2022","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/osn_ukbb_sumst10k_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open Storage Network path to a zip of hail MatrixTable with a small subset of UKBB summary statistics as of 12/25/2022 — osn_ukbb_sumst10k_path","text":"","code":"osn_ukbb_sumst10k_path()"},{"path":"https://github.com/vjcitn/BiocHail/reference/osn_ukbb_sumst10k_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open Storage Network path to a zip of hail MatrixTable with a small subset of UKBB summary statistics as of 12/25/2022 — osn_ukbb_sumst10k_path","text":"character(1) path zip","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/osn_ukbb_sumst10k_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open Storage Network path to a zip of hail MatrixTable with a small subset of UKBB summary statistics as of 12/25/2022 — osn_ukbb_sumst10k_path","text":"","code":"osn_ukbb_sumst10k_path() #> [1] \"https://bir190004-bucket01.mghp.osn.xsede.org/BiocUKBBData/ukbb_sumst_10kloc.zip\""},{"path":"https://github.com/vjcitn/BiocHail/reference/path_1kg_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"generate path to installed annotations file — path_1kg_annotations","title":"generate path to installed annotations file — path_1kg_annotations","text":"generate path installed annotations file","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/path_1kg_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate path to installed annotations file — path_1kg_annotations","text":"","code":"path_1kg_annotations()"},{"path":"https://github.com/vjcitn/BiocHail/reference/path_1kg_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate path to installed annotations file — path_1kg_annotations","text":"character(1) path annotations","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/path_1kg_annotations.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"generate path to installed annotations file — path_1kg_annotations","text":".txt file retrieved extraction `https://storage.googleapis.com/hail-1kg/tutorial_data.tar`","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/path_1kg_annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate path to installed annotations file — path_1kg_annotations","text":"","code":"path_1kg_annotations() #> [1] \"/private/var/folders/n4/p9th81md60s8nv12yv40sv8m0000gp/T/RtmpQKPvUG/temp_libpath1154e55aea35c/BiocHail/extdata/1kg_annotations.txt\""},{"path":"https://github.com/vjcitn/BiocHail/reference/pcs_191k.html","id":null,"dir":"Reference","previous_headings":"","what":"HWE-normalized PCA scores for 3202 thousand-genomes samples genotyped with the telomere-to-telomere reference — pcs_191k","title":"HWE-normalized PCA scores for 3202 thousand-genomes samples genotyped with the telomere-to-telomere reference — pcs_191k","text":"HWE-normalized PCA scores 3202 thousand-genomes samples genotyped telomere--telomere reference","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/pcs_191k.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HWE-normalized PCA scores for 3202 thousand-genomes samples genotyped with the telomere-to-telomere reference — pcs_191k","text":"","code":"data(\"pcs_191k\")"},{"path":"https://github.com/vjcitn/BiocHail/reference/pcs_191k.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HWE-normalized PCA scores for 3202 thousand-genomes samples genotyped with the telomere-to-telomere reference — pcs_191k","text":"data.frame","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/pcs_191k.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HWE-normalized PCA scores for 3202 thousand-genomes samples genotyped with the telomere-to-telomere reference — pcs_191k","text":"data.frame","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/pcs_191k.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"HWE-normalized PCA scores for 3202 thousand-genomes samples genotyped with the telomere-to-telomere reference — pcs_191k","text":"genotypes 5","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/pcs_191k.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HWE-normalized PCA scores for 3202 thousand-genomes samples genotyped with the telomere-to-telomere reference — pcs_191k","text":"","code":"data(pcs_191k) dim(pcs_191k) #> [1] 3202    5"},{"path":"https://github.com/vjcitn/BiocHail/reference/pcs_38k.html","id":null,"dir":"Reference","previous_headings":"","what":"HWE-normalized PCA scores for 3202 thousand-genomes samples genotyped with the telomere-to-telomere reference — pcs_38k","title":"HWE-normalized PCA scores for 3202 thousand-genomes samples genotyped with the telomere-to-telomere reference — pcs_38k","text":"HWE-normalized PCA scores 3202 thousand-genomes samples genotyped telomere--telomere reference","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/pcs_38k.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HWE-normalized PCA scores for 3202 thousand-genomes samples genotyped with the telomere-to-telomere reference — pcs_38k","text":"","code":"data(\"pcs_38k\")"},{"path":"https://github.com/vjcitn/BiocHail/reference/pcs_38k.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HWE-normalized PCA scores for 3202 thousand-genomes samples genotyped with the telomere-to-telomere reference — pcs_38k","text":"data.frame","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/pcs_38k.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HWE-normalized PCA scores for 3202 thousand-genomes samples genotyped with the telomere-to-telomere reference — pcs_38k","text":"data.frame","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/pcs_38k.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"HWE-normalized PCA scores for 3202 thousand-genomes samples genotyped with the telomere-to-telomere reference — pcs_38k","text":"genotypes 1","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/pcs_38k.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HWE-normalized PCA scores for 3202 thousand-genomes samples genotyped with the telomere-to-telomere reference — pcs_38k","text":"","code":"data(pcs_38k) dim(pcs_38k) #> [1] 3202    8"},{"path":"https://github.com/vjcitn/BiocHail/reference/pheno_data_sec_2df.html","id":null,"dir":"Reference","previous_headings":"","what":"pheno_data component harvesting from columns of summary stats MatrixTable — pheno_data_sec_2df","title":"pheno_data component harvesting from columns of summary stats MatrixTable — pheno_data_sec_2df","text":"pheno_data component harvesting columns summary stats MatrixTable","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/pheno_data_sec_2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pheno_data component harvesting from columns of summary stats MatrixTable — pheno_data_sec_2df","text":"","code":"pheno_data_sec_2df(   m,   section = 1,   toget = c(\"n_cases\", \"n_controls\", \"heritability\", \"pop\"),   verbose = FALSE )"},{"path":"https://github.com/vjcitn/BiocHail/reference/pheno_data_sec_2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pheno_data component harvesting from columns of summary stats MatrixTable — pheno_data_sec_2df","text":"m Struct returned mt$cols()$collect() section numeric(1) element pheno_data list transformed data.frame toget character() vector field names retrieve verbose logical(1) TRUE (default) message multiple `pheno_data` components returned","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/pheno_data_sec_2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pheno_data component harvesting from columns of summary stats MatrixTable — pheno_data_sec_2df","text":"1 row data.frame","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/pheno_data_sec_2df.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"pheno_data component harvesting from columns of summary stats MatrixTable — pheno_data_sec_2df","text":"applies top2df pheno_data component input","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/rg_update.html","id":null,"dir":"Reference","previous_headings":"","what":"update the reference genome for a hail instance — rg_update","title":"update the reference genome for a hail instance — rg_update","text":"update reference genome hail instance","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/rg_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"update the reference genome for a hail instance — rg_update","text":"","code":"rg_update(   hc,   init = \"GRCh38\",   newjson = system.file(\"json/t2tAnVIL.json\", package = \"BiocHail\") )"},{"path":"https://github.com/vjcitn/BiocHail/reference/rg_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"update the reference genome for a hail instance — rg_update","text":"hc hail context init character(1) valid name reference genome, defaults \"GRCh38\" newjson character(1) path json spec reference genome [needs doc]","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/rg_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"update the reference genome for a hail instance — rg_update","text":"python list; function used side effect","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/rg_update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"update the reference genome for a hail instance — rg_update","text":"","code":"hl <- hail_init() rg_update(hl) #> ReferenceGenome(name=GRCh38t2tb, contigs=['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM'], lengths={'chr1': 248387497, 'chr2': 242696747, 'chr3': 201106605, 'chr4': 193575430, 'chr5': 182045437, 'chr6': 172126870, 'chr7': 160567423, 'chr8': 146259322, 'chr9': 150617274, 'chr10': 134758122, 'chr11': 135127772, 'chr12': 133324781, 'chr13': 114240146, 'chr14': 101219177, 'chr15': 100338308, 'chr16': 96330493, 'chr17': 84277185, 'chr18': 80542536, 'chr19': 61707359, 'chr20': 66210247, 'chr21': 45827691, 'chr22': 51353906, 'chrX': 154259625, 'chrY': 57227415, 'chrM': 16569}, x_contigs=['chrX'], y_contigs=['chrY'], mt_contigs=['chrM'], par=[('chrX', 10001, 2781480), ('chrX', 155701383, 156030896), ('chrY', 10001, 2781480), ('chrY', 56887903, 57217416)])"},{"path":"https://github.com/vjcitn/BiocHail/reference/rownames-hail.table.Table-method.html","id":null,"dir":"Reference","previous_headings":"","what":"acquire row names of a Hail Table, assuming key has been set — rownames,hail.table.Table-method","title":"acquire row names of a Hail Table, assuming key has been set — rownames,hail.table.Table-method","text":"acquire row names Hail Table, assuming key set","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/rownames-hail.table.Table-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"acquire row names of a Hail Table, assuming key has been set — rownames,hail.table.Table-method","text":"","code":"# S4 method for class 'hail.table.Table' rownames(x, do.NULL = TRUE, prefix = \"row\")"},{"path":"https://github.com/vjcitn/BiocHail/reference/rownames-hail.table.Table-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"acquire row names of a Hail Table, assuming key has been set — rownames,hail.table.Table-method","text":"x instance hail.table.Table .NULL used prefix used","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/rownames-hail.table.Table-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"acquire row names of a Hail Table, assuming key has been set — rownames,hail.table.Table-method","text":"character() character vector","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/rownames-hail.table.Table-method.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"acquire row names of a Hail Table, assuming key has been set — rownames,hail.table.Table-method","text":"try example, run `example(\"rownames,hail.table.Table-method\")`","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/rownames-hail.table.Table-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"acquire row names of a Hail Table, assuming key has been set — rownames,hail.table.Table-method","text":"","code":"hl <- hail_init() annopath <- path_1kg_annotations() tab <- hl$import_table(annopath, impute = TRUE)$key_by(\"Sample\") rt <- rownames(tab) length(rt) #> [1] 3500 head(rt) #> [1] \"HG00096\" \"HG00097\" \"HG00098\" \"HG00099\" \"HG00100\" \"HG00101\""},{"path":"https://github.com/vjcitn/BiocHail/reference/top2df.html","id":null,"dir":"Reference","previous_headings":"","what":"top-level annotation harvesting from columns of summary statistics MatrixTable — top2df","title":"top-level annotation harvesting from columns of summary statistics MatrixTable — top2df","text":"top-level annotation harvesting columns summary statistics MatrixTable","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/top2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"top-level annotation harvesting from columns of summary statistics MatrixTable — top2df","text":"","code":"top2df(   x,   toget = c(\"trait_type\", \"phenocode\", \"description\", \"modifier\", \"coding_description\") )"},{"path":"https://github.com/vjcitn/BiocHail/reference/top2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"top-level annotation harvesting from columns of summary statistics MatrixTable — top2df","text":"x Struct returned mt$cols()$collect() – can slow toget character() vector field names retrieve","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/top2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"top-level annotation harvesting from columns of summary statistics MatrixTable — top2df","text":"1-row data.frame","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/top2df.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"top-level annotation harvesting from columns of summary statistics MatrixTable — top2df","text":"python None transformed NA","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/ukbb_init.html","id":null,"dir":"Reference","previous_headings":"","what":"initialize ukbb — ukbb_init","title":"initialize ukbb — ukbb_init","text":"initialize ukbb","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/ukbb_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"initialize ukbb — ukbb_init","text":"","code":"ukbb_init()"},{"path":"https://github.com/vjcitn/BiocHail/reference/ukbb_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"initialize ukbb — ukbb_init","text":"python module reference","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/ukbb_init.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"initialize ukbb — ukbb_init","text":"ukbb module may passed around","code":""},{"path":"https://github.com/vjcitn/BiocHail/reference/ukbb_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"initialize ukbb — ukbb_init","text":"","code":"ukbb <- ukbb_init() names(ukbb) #>   [1] \"AC_CUTOFFS\"                                    #>   [2] \"AF_CUTOFFS\"                                    #>   [3] \"CHROMOSOMES\"                                   #>   [4] \"ENGLAND_RECRUITMENT_CENTERS\"                   #>   [5] \"MIN_CASES\"                                     #>   [6] \"MIN_CASES_ALL\"                                 #>   [7] \"MIN_CASES_EUR\"                                 #>   [8] \"MISSENSE_CSQS\"                                 #>   [9] \"NULL_STR\"                                      #>  [10] \"NULL_STR_KEY\"                                  #>  [11] \"OTHER_CSQS\"                                    #>  [12] \"PHENO_COLUMN_FIELDS\"                           #>  [13] \"PHENO_DESCRIPTION_FIELDS\"                      #>  [14] \"PHENO_GWAS_FIELDS\"                             #>  [15] \"PHENO_KEY_FIELDS\"                              #>  [16] \"PILOT_PHENOTYPES\"                              #>  [17] \"PLOF_CSQS\"                                     #>  [18] \"POPS\"                                          #>  [19] \"P_THRESHOLDS\"                                  #>  [20] \"REFERENCE_GENOME\"                              #>  [21] \"SIG_THRESHOLD\"                                 #>  [22] \"SYNONYMOUS_CSQS\"                               #>  [23] \"UKB_GNOMAD_POP_MAPPING\"                        #>  [24] \"add_coding_information\"                        #>  [25] \"add_white_noise_pheno\"                         #>  [26] \"add_whr\"                                       #>  [27] \"all_axis_join\"                                 #>  [28] \"annotate_nearest_gene\"                         #>  [29] \"annotation_case_builder\"                       #>  [30] \"annotation_case_builder_ukb_legacy\"            #>  [31] \"annotations\"                                   #>  [32] \"brain_mri_data_path\"                           #>  [33] \"bucket\"                                        #>  [34] \"check_timing_type\"                             #>  [35] \"check_trait_types\"                             #>  [36] \"coding_ht_path\"                                #>  [37] \"combine_datasets\"                              #>  [38] \"combine_pheno_files\"                           #>  [39] \"combine_pheno_files_multi_sex\"                 #>  [40] \"combine_pheno_files_multi_sex_legacy\"          #>  [41] \"combine_phenotypes\"                            #>  [42] \"combine_phenotypes_in_mt\"                      #>  [43] \"combine_phenotypes_with_name\"                  #>  [44] \"compute_cases_binary\"                          #>  [45] \"compute_n_cases\"                               #>  [46] \"conditional_phenotypes\"                        #>  [47] \"create_broadcast_dict\"                         #>  [48] \"create_gene_map_ht\"                            #>  [49] \"create_genome_intervals_file\"                  #>  [50] \"csv\"                                           #>  [51] \"downsample_table_by_x_y\"                       #>  [52] \"explode_by_p_threshold\"                        #>  [53] \"explode_lambda_ht\"                             #>  [54] \"filter_and_annotate_ukb_data\"                  #>  [55] \"filter_ht_for_plink\"                           #>  [56] \"filter_lambda_gc\"                              #>  [57] \"first_exposure_and_activity_monitor_data_path\" #>  [58] \"format_entries\"                                #>  [59] \"format_pheno_dir\"                              #>  [60] \"generate_lambda_ht_by_freq\"                    #>  [61] \"generate_qc_lambda_aggregator\"                 #>  [62] \"generic\"                                       #>  [63] \"genotype_bm_path\"                              #>  [64] \"genotype_loading\"                              #>  [65] \"genotype_samples_ht_path\"                      #>  [66] \"genotypes\"                                     #>  [67] \"get_age_sex_tsv_path\"                          #>  [68] \"get_all_codings\"                               #>  [69] \"get_analysis_data_path\"                        #>  [70] \"get_biomarker_ht_path\"                         #>  [71] \"get_cases_and_controls_from_log\"               #>  [72] \"get_clump_sumstats_bm_path\"                    #>  [73] \"get_clump_sumstats_col_ht_path\"                #>  [74] \"get_clumping_results_path\"                     #>  [75] \"get_coding_path\"                               #>  [76] \"get_codings\"                                   #>  [77] \"get_covariates\"                                #>  [78] \"get_covariates_ht_path\"                        #>  [79] \"get_covid_data_path\"                           #>  [80] \"get_custom_pheno_path\"                         #>  [81] \"get_death_data_path\"                           #>  [82] \"get_files_in_parent_directory\"                 #>  [83] \"get_filtered_mt\"                               #>  [84] \"get_filtered_mt_with_x\"                        #>  [85] \"get_final_lambdas_path\"                        #>  [86] \"get_final_sample_set\"                          #>  [87] \"get_full_icd_data_description\"                 #>  [88] \"get_gene_intervals_path\"                       #>  [89] \"get_gp_data_tsv_path\"                          #>  [90] \"get_gwas_sig_path\"                             #>  [91] \"get_heritability_dict\"                         #>  [92] \"get_heritability_from_log\"                     #>  [93] \"get_heritability_txt_path\"                     #>  [94] \"get_hesin_data_path\"                           #>  [95] \"get_hesin_delivery_ht_path\"                    #>  [96] \"get_hesin_mt_path\"                             #>  [97] \"get_hesin_raw_data_path\"                       #>  [98] \"get_hm3_snplist_path\"                          #>  [99] \"get_hq_samples\"                                #> [100] \"get_inverse_normalize_status\"                  #> [101] \"get_ld_matrix_path\"                            #> [102] \"get_ld_score_flat_file_path\"                   #> [103] \"get_ld_score_ht_path\"                          #> [104] \"get_ld_variant_index_path\"                     #> [105] \"get_meta_analysis_results_path\"                #> [106] \"get_missing_codings\"                           #> [107] \"get_modified_key\"                              #> [108] \"get_n_even_intervals\"                          #> [109] \"get_null_model_timing\"                         #> [110] \"get_pheno_dict\"                                #> [111] \"get_pheno_manifest_path\"                       #> [112] \"get_pheno_output_path\"                         #> [113] \"get_phenos_to_run\"                             #> [114] \"get_phenotype_results_qc_path\"                 #> [115] \"get_phenotype_summary_path\"                    #> [116] \"get_phesant_all_phenos_tsv_path\"               #> [117] \"get_phesant_reassignments\"                     #> [118] \"get_prs_assess_ht_path\"                        #> [119] \"get_prs_bm_path\"                               #> [120] \"get_prs_mt_path\"                               #> [121] \"get_pruned_tsv_path\"                           #> [122] \"get_results_prefix\"                            #> [123] \"get_results_timing_ht_path\"                    #> [124] \"get_results_timing_tsv_path\"                   #> [125] \"get_saige_timing_grep\"                         #> [126] \"get_saige_version_from_log\"                    #> [127] \"get_sample_file\"                               #> [128] \"get_top_p_from_mt\"                             #> [129] \"get_top_p_path\"                                #> [130] \"get_ukb_additional_phenos_description_path\"    #> [131] \"get_ukb_additional_phenos_tsv_path\"            #> [132] \"get_ukb_af_ht_path\"                            #> [133] \"get_ukb_grm_mt_path\"                           #> [134] \"get_ukb_grm_plink_path\"                        #> [135] \"get_ukb_grm_pruned_ht_path\"                    #> [136] \"get_ukb_imputed_data\"                          #> [137] \"get_ukb_meta\"                                  #> [138] \"get_ukb_meta_pop_tsv_path\"                     #> [139] \"get_ukb_pheno_ht_path\"                         #> [140] \"get_ukb_pheno_mt\"                              #> [141] \"get_ukb_pheno_mt_path\"                         #> [142] \"get_ukb_phesant_summary_tsv_path\"              #> [143] \"get_ukb_samples_file_path\"                     #> [144] \"get_ukb_sumstats_biomarkers_mt_path\"           #> [145] \"get_ukb_sumstats_mt_path\"                      #> [146] \"get_ukb_vep_path\"                              #> [147] \"get_variant_results_path\"                      #> [148] \"get_variant_results_qc_path\"                   #> [149] \"get_vep_formatted_data\"                        #> [150] \"hl\"                                            #> [151] \"icd9_codings_ht_path\"                          #> [152] \"icd9_codings_tsv_path\"                         #> [153] \"icd_codings_ht_path\"                           #> [154] \"icd_codings_tsv_path\"                          #> [155] \"irnt\"                                          #> [156] \"join_pheno_hts_to_mt\"                          #> [157] \"ld\"                                            #> [158] \"load_activity_monitor_data\"                    #> [159] \"load_all_mfi_data\"                             #> [160] \"load_brain_mri_data\"                           #> [161] \"load_covid_data\"                               #> [162] \"load_custom_pheno\"                             #> [163] \"load_dob_ht\"                                   #> [164] \"load_final_sumstats_mt\"                        #> [165] \"load_first_occurrence_data\"                    #> [166] \"load_gene_data\"                                #> [167] \"load_hesin_data\"                               #> [168] \"load_icd_data\"                                 #> [169] \"load_prescription_data\"                        #> [170] \"load_showcase\"                                 #> [171] \"load_variant_data\"                             #> [172] \"locus_alleles_to_chr_pos_ref_alt\"              #> [173] \"mac_category_case_builder\"                     #> [174] \"make_pairwise_ht\"                              #> [175] \"mwzj_hts_by_tree\"                              #> [176] \"os\"                                            #> [177] \"pairwise_cooccurrence_ht_path\"                 #> [178] \"pairwise_correlation_ht_path\"                  #> [179] \"pheno_description_path\"                        #> [180] \"pheno_description_raw_path\"                    #> [181] \"pheno_folder\"                                  #> [182] \"pheno_ht_to_mt\"                                #> [183] \"phenotype_loading\"                             #> [184] \"phenotype_munging\"                             #> [185] \"phenotypes\"                                    #> [186] \"phesant_biomarker_phenotypes_tsv_path\"         #> [187] \"phesant_folder\"                                #> [188] \"post_process_gene_map_ht\"                      #> [189] \"pre_phesant_biomarkers_tsv_path\"               #> [190] \"pre_phesant_tsv_path\"                          #> [191] \"pre_process_data_dictionary\"                   #> [192] \"prescription_mapping_path\"                     #> [193] \"prescription_tsv_path\"                         #> [194] \"public_bucket\"                                 #> [195] \"public_bucket_free\"                            #> [196] \"pull_out_col_keys\"                             #> [197] \"pull_out_fields_from_entries\"                  #> [198] \"re\"                                            #> [199] \"recode_pkd_to_legacy\"                          #> [200] \"recode_pkd_to_new\"                             #> [201] \"recode_single_pkd_to_legacy\"                   #> [202] \"recode_single_pkd_to_new\"                      #> [203] \"resources\"                                     #> [204] \"results\"                                       #> [205] \"results_loading\"                               #> [206] \"separate_results_mt_by_pop\"                    #> [207] \"stringify_pheno_key_dict\"                      #> [208] \"subprocess\"                                    #> [209] \"summarize_data\"                                #> [210] \"temp_bucket\"                                   #> [211] \"temp_bucket_7day\"                              #> [212] \"tempfile\"                                      #> [213] \"ukb_imputed_bgen_path\"                         #> [214] \"ukb_imputed_info_ht_path\"                      #> [215] \"ukb_imputed_info_path\"                         #> [216] \"unify_saige_burden_ht_schema\"                  #> [217] \"unify_saige_ht_schema\"                         #> [218] \"unify_saige_ht_variant_schema\"                 #> [219] \"union_ht\"                                      #> [220] \"union_hts_by_tree\"                             #> [221] \"union_mts_by_tree\"                             #> [222] \"utils\"                                         #> [223] \"uuid\""}]
